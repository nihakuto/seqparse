{"version":3,"file":"seqparse.min.js","mappings":";CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,GACe,iBAAZC,QACdA,QAAkB,SAAID,IAEtBD,EAAe,SAAIC,GACpB,CATD,CASGK,MAAM,KACT,mCCRAJ,EAAQK,WAuCR,SAAqBC,GACnB,IAAIC,EAAOC,EAAQF,GACfG,EAAWF,EAAK,GAChBG,EAAkBH,EAAK,GAC3B,OAAuC,GAA9BE,EAAWC,GAAuB,EAAKA,CAClD,EA3CAV,EAAQW,YAiDR,SAAsBL,GACpB,IAAIM,EAcAC,EAbAN,EAAOC,EAAQF,GACfG,EAAWF,EAAK,GAChBG,EAAkBH,EAAK,GAEvBO,EAAM,IAAIC,EAVhB,SAAsBT,EAAKG,EAAUC,GACnC,OAAuC,GAA9BD,EAAWC,GAAuB,EAAKA,CAClD,CAQoBM,CAAYV,EAAKG,EAAUC,IAEzCO,EAAU,EAGVC,EAAMR,EAAkB,EACxBD,EAAW,EACXA,EAGJ,IAAKI,EAAI,EAAGA,EAAIK,EAAKL,GAAK,EACxBD,EACGO,EAAUb,EAAIc,WAAWP,KAAO,GAChCM,EAAUb,EAAIc,WAAWP,EAAI,KAAO,GACpCM,EAAUb,EAAIc,WAAWP,EAAI,KAAO,EACrCM,EAAUb,EAAIc,WAAWP,EAAI,IAC/BC,EAAIG,KAAcL,GAAO,GAAM,IAC/BE,EAAIG,KAAcL,GAAO,EAAK,IAC9BE,EAAIG,KAAmB,IAANL,EAmBnB,OAhBwB,IAApBF,IACFE,EACGO,EAAUb,EAAIc,WAAWP,KAAO,EAChCM,EAAUb,EAAIc,WAAWP,EAAI,KAAO,EACvCC,EAAIG,KAAmB,IAANL,GAGK,IAApBF,IACFE,EACGO,EAAUb,EAAIc,WAAWP,KAAO,GAChCM,EAAUb,EAAIc,WAAWP,EAAI,KAAO,EACpCM,EAAUb,EAAIc,WAAWP,EAAI,KAAO,EACvCC,EAAIG,KAAcL,GAAO,EAAK,IAC9BE,EAAIG,KAAmB,IAANL,GAGZE,CACT,EA5FAd,EAAQqB,cAkHR,SAAwBC,GAQtB,IAPA,IAAIV,EACAM,EAAMI,EAAMC,OACZC,EAAaN,EAAM,EACnBO,EAAQ,GACRC,EAAiB,MAGZb,EAAI,EAAGc,EAAOT,EAAMM,EAAYX,EAAIc,EAAMd,GAAKa,EACtDD,EAAMG,KAAKC,EAAYP,EAAOT,EAAIA,EAAIa,EAAkBC,EAAOA,EAAQd,EAAIa,IAqB7E,OAjBmB,IAAfF,GACFZ,EAAMU,EAAMJ,EAAM,GAClBO,EAAMG,KACJE,EAAOlB,GAAO,GACdkB,EAAQlB,GAAO,EAAK,IACpB,OAEsB,IAAfY,IACTZ,GAAOU,EAAMJ,EAAM,IAAM,GAAKI,EAAMJ,EAAM,GAC1CO,EAAMG,KACJE,EAAOlB,GAAO,IACdkB,EAAQlB,GAAO,EAAK,IACpBkB,EAAQlB,GAAO,EAAK,IACpB,MAIGa,EAAMM,KAAK,GACpB,EA1IA,IALA,IAAID,EAAS,GACTX,EAAY,GACZJ,EAA4B,oBAAfiB,WAA6BA,WAAaC,MAEvDC,EAAO,mEACFrB,EAAI,EAAsBA,EAAbqB,KAAwBrB,EAC5CiB,EAAOjB,GAAKqB,EAAKrB,GACjBM,EAAUe,EAAKd,WAAWP,IAAMA,EAQlC,SAASL,EAASF,GAChB,IAAIY,EAAMZ,EAAIiB,OAEd,GAAIL,EAAM,EAAI,EACZ,MAAM,IAAIiB,MAAM,kDAKlB,IAAI1B,EAAWH,EAAI8B,QAAQ,KAO3B,OANkB,IAAd3B,IAAiBA,EAAWS,GAMzB,CAACT,EAJcA,IAAaS,EAC/B,EACA,EAAKT,EAAW,EAGtB,CAmEA,SAASoB,EAAaP,EAAOe,EAAOC,GAGlC,IAFA,IAAI1B,EARoB2B,EASpBC,EAAS,GACJ3B,EAAIwB,EAAOxB,EAAIyB,EAAKzB,GAAK,EAChCD,GACIU,EAAMT,IAAM,GAAM,WAClBS,EAAMT,EAAI,IAAM,EAAK,QACP,IAAfS,EAAMT,EAAI,IACb2B,EAAOZ,KAdFE,GADiBS,EAeM3B,IAdT,GAAK,IACxBkB,EAAOS,GAAO,GAAK,IACnBT,EAAOS,GAAO,EAAI,IAClBT,EAAa,GAANS,IAaT,OAAOC,EAAOT,KAAK,GACrB,CAlGAZ,EAAU,IAAIC,WAAW,IAAM,GAC/BD,EAAU,IAAIC,WAAW,IAAM,+BCT/B,MAAMqB,EAAS,EAAQ,KACjBC,EAAU,EAAQ,KAClBC,EACe,mBAAXC,QAAkD,mBAAlBA,OAAY,IAChDA,OAAY,IAAE,8BACd,KAEN5C,EAAQ,GAAS6C,EAEjB7C,EAAQ,GAAoB,GAE5B,MAAM8C,EAAe,WAwDrB,SAASC,EAAcxB,GACrB,GAAIA,EAASuB,EACX,MAAM,IAAIE,WAAW,cAAgBzB,EAAS,kCAGhD,MAAM0B,EAAM,IAAIjB,WAAWT,GAE3B,OADA2B,OAAOC,eAAeF,EAAKJ,EAAOO,WAC3BH,CACT,CAYA,SAASJ,EAAQQ,EAAKC,EAAkB/B,GAEtC,GAAmB,iBAAR8B,EAAkB,CAC3B,GAAgC,iBAArBC,EACT,MAAM,IAAIC,UACR,sEAGJ,OAAOC,EAAYH,EACrB,CACA,OAAOI,EAAKJ,EAAKC,EAAkB/B,EACrC,CAIA,SAASkC,EAAMC,EAAOJ,EAAkB/B,GACtC,GAAqB,iBAAVmC,EACT,OAqHJ,SAAqBC,EAAQC,GAK3B,GAJwB,iBAAbA,GAAsC,KAAbA,IAClCA,EAAW,SAGRf,EAAOgB,WAAWD,GACrB,MAAM,IAAIL,UAAU,qBAAuBK,GAG7C,MAAMrC,EAAwC,EAA/BlB,EAAWsD,EAAQC,GAClC,IAAIX,EAAMF,EAAaxB,GAEvB,MAAMuC,EAASb,EAAIc,MAAMJ,EAAQC,GASjC,OAPIE,IAAWvC,IAIb0B,EAAMA,EAAIe,MAAM,EAAGF,IAGdb,CACT,CA3IWgB,CAAWP,EAAOJ,GAG3B,GAAIY,YAAYC,OAAOT,GACrB,OAkJJ,SAAwBU,GACtB,GAAIC,EAAWD,EAAWpC,YAAa,CACrC,MAAMsC,EAAO,IAAItC,WAAWoC,GAC5B,OAAOG,EAAgBD,EAAKE,OAAQF,EAAKG,WAAYH,EAAKjE,WAC5D,CACA,OAAOqE,EAAcN,EACvB,CAxJWO,CAAcjB,GAGvB,GAAa,MAATA,EACF,MAAM,IAAIH,UACR,yHACiDG,GAIrD,GAAIW,EAAWX,EAAOQ,cACjBR,GAASW,EAAWX,EAAMc,OAAQN,aACrC,OAAOK,EAAgBb,EAAOJ,EAAkB/B,GAGlD,GAAiC,oBAAtBqD,oBACNP,EAAWX,EAAOkB,oBAClBlB,GAASW,EAAWX,EAAMc,OAAQI,oBACrC,OAAOL,EAAgBb,EAAOJ,EAAkB/B,GAGlD,GAAqB,iBAAVmC,EACT,MAAM,IAAIH,UACR,yEAIJ,MAAMsB,EAAUnB,EAAMmB,SAAWnB,EAAMmB,UACvC,GAAe,MAAXA,GAAmBA,IAAYnB,EACjC,OAAOb,EAAOY,KAAKoB,EAASvB,EAAkB/B,GAGhD,MAAMuD,EAkJR,SAAqBC,GACnB,GAAIlC,EAAOmC,SAASD,GAAM,CACxB,MAAM7D,EAA4B,EAAtB+D,EAAQF,EAAIxD,QAClB0B,EAAMF,EAAa7B,GAEzB,OAAmB,IAAf+B,EAAI1B,QAIRwD,EAAIT,KAAKrB,EAAK,EAAG,EAAG/B,GAHX+B,CAKX,CAEA,YAAmBiC,IAAfH,EAAIxD,OACoB,iBAAfwD,EAAIxD,QAAuB4D,EAAYJ,EAAIxD,QAC7CwB,EAAa,GAEf2B,EAAcK,GAGN,WAAbA,EAAIK,MAAqBnD,MAAMoD,QAAQN,EAAIO,MACtCZ,EAAcK,EAAIO,WAD3B,CAGF,CAzKYC,CAAW7B,GACrB,GAAIoB,EAAG,OAAOA,EAEd,GAAsB,oBAAXlC,QAAgD,MAAtBA,OAAO4C,aACH,mBAA9B9B,EAAMd,OAAO4C,aACtB,OAAO3C,EAAOY,KAAKC,EAAMd,OAAO4C,aAAa,UAAWlC,EAAkB/B,GAG5E,MAAM,IAAIgC,UACR,yHACiDG,EAErD,CAmBA,SAAS+B,EAAYC,GACnB,GAAoB,iBAATA,EACT,MAAM,IAAInC,UAAU,0CACf,GAAImC,EAAO,EAChB,MAAM,IAAI1C,WAAW,cAAgB0C,EAAO,iCAEhD,CA0BA,SAASlC,EAAakC,GAEpB,OADAD,EAAWC,GACJ3C,EAAa2C,EAAO,EAAI,EAAoB,EAAhBT,EAAQS,GAC7C,CAuCA,SAAShB,EAAeiB,GACtB,MAAMpE,EAASoE,EAAMpE,OAAS,EAAI,EAA4B,EAAxB0D,EAAQU,EAAMpE,QAC9C0B,EAAMF,EAAaxB,GACzB,IAAK,IAAIV,EAAI,EAAGA,EAAIU,EAAQV,GAAK,EAC/BoC,EAAIpC,GAAgB,IAAX8E,EAAM9E,GAEjB,OAAOoC,CACT,CAUA,SAASsB,EAAiBoB,EAAOlB,EAAYlD,GAC3C,GAAIkD,EAAa,GAAKkB,EAAMtF,WAAaoE,EACvC,MAAM,IAAIzB,WAAW,wCAGvB,GAAI2C,EAAMtF,WAAaoE,GAAclD,GAAU,GAC7C,MAAM,IAAIyB,WAAW,wCAGvB,IAAIC,EAYJ,OAVEA,OADiBiC,IAAfT,QAAuCS,IAAX3D,EACxB,IAAIS,WAAW2D,QACDT,IAAX3D,EACH,IAAIS,WAAW2D,EAAOlB,GAEtB,IAAIzC,WAAW2D,EAAOlB,EAAYlD,GAI1C2B,OAAOC,eAAeF,EAAKJ,EAAOO,WAE3BH,CACT,CA2BA,SAASgC,EAAS1D,GAGhB,GAAIA,GAAUuB,EACZ,MAAM,IAAIE,WAAW,0DACaF,EAAa8C,SAAS,IAAM,UAEhE,OAAgB,EAATrE,CACT,CAsGA,SAASlB,EAAYsD,EAAQC,GAC3B,GAAIf,EAAOmC,SAASrB,GAClB,OAAOA,EAAOpC,OAEhB,GAAI2C,YAAYC,OAAOR,IAAWU,EAAWV,EAAQO,aACnD,OAAOP,EAAOtD,WAEhB,GAAsB,iBAAXsD,EACT,MAAM,IAAIJ,UACR,kGAC0BI,GAI9B,MAAMzC,EAAMyC,EAAOpC,OACbsE,EAAaC,UAAUvE,OAAS,IAAsB,IAAjBuE,UAAU,GACrD,IAAKD,GAAqB,IAAR3E,EAAW,OAAO,EAGpC,IAAI6E,GAAc,EAClB,OACE,OAAQnC,GACN,IAAK,QACL,IAAK,SACL,IAAK,SACH,OAAO1C,EACT,IAAK,OACL,IAAK,QACH,OAAO8E,EAAYrC,GAAQpC,OAC7B,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAa,EAANL,EACT,IAAK,MACH,OAAOA,IAAQ,EACjB,IAAK,SACH,OAAO+E,EAActC,GAAQpC,OAC/B,QACE,GAAIwE,EACF,OAAOF,GAAa,EAAIG,EAAYrC,GAAQpC,OAE9CqC,GAAY,GAAKA,GAAUsC,cAC3BH,GAAc,EAGtB,CAGA,SAASI,EAAcvC,EAAUvB,EAAOC,GACtC,IAAIyD,GAAc,EAclB,SALcb,IAAV7C,GAAuBA,EAAQ,KACjCA,EAAQ,GAINA,EAAQjC,KAAKmB,OACf,MAAO,GAOT,SAJY2D,IAAR5C,GAAqBA,EAAMlC,KAAKmB,UAClCe,EAAMlC,KAAKmB,QAGTe,GAAO,EACT,MAAO,GAOT,IAHAA,KAAS,KACTD,KAAW,GAGT,MAAO,GAKT,IAFKuB,IAAUA,EAAW,UAGxB,OAAQA,GACN,IAAK,MACH,OAAOwC,EAAShG,KAAMiC,EAAOC,GAE/B,IAAK,OACL,IAAK,QACH,OAAO+D,EAAUjG,KAAMiC,EAAOC,GAEhC,IAAK,QACH,OAAOgE,EAAWlG,KAAMiC,EAAOC,GAEjC,IAAK,SACL,IAAK,SACH,OAAOiE,EAAYnG,KAAMiC,EAAOC,GAElC,IAAK,SACH,OAAOkE,EAAYpG,KAAMiC,EAAOC,GAElC,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAOmE,EAAarG,KAAMiC,EAAOC,GAEnC,QACE,GAAIyD,EAAa,MAAM,IAAIxC,UAAU,qBAAuBK,GAC5DA,GAAYA,EAAW,IAAIsC,cAC3BH,GAAc,EAGtB,CAUA,SAASW,EAAM5B,EAAG6B,EAAGC,GACnB,MAAM/F,EAAIiE,EAAE6B,GACZ7B,EAAE6B,GAAK7B,EAAE8B,GACT9B,EAAE8B,GAAK/F,CACT,CA2IA,SAASgG,EAAsBrC,EAAQsC,EAAKrC,EAAYb,EAAUmD,GAEhE,GAAsB,IAAlBvC,EAAOjD,OAAc,OAAQ,EAmBjC,GAhB0B,iBAAfkD,GACTb,EAAWa,EACXA,EAAa,GACJA,EAAa,WACtBA,EAAa,WACJA,GAAc,aACvBA,GAAc,YAGZU,EADJV,GAAcA,KAGZA,EAAasC,EAAM,EAAKvC,EAAOjD,OAAS,GAItCkD,EAAa,IAAGA,EAAaD,EAAOjD,OAASkD,GAC7CA,GAAcD,EAAOjD,OAAQ,CAC/B,GAAIwF,EAAK,OAAQ,EACZtC,EAAaD,EAAOjD,OAAS,CACpC,MAAO,GAAIkD,EAAa,EAAG,CACzB,IAAIsC,EACC,OAAQ,EADJtC,EAAa,CAExB,CAQA,GALmB,iBAARqC,IACTA,EAAMjE,EAAOY,KAAKqD,EAAKlD,IAIrBf,EAAOmC,SAAS8B,GAElB,OAAmB,IAAfA,EAAIvF,QACE,EAEHyF,EAAaxC,EAAQsC,EAAKrC,EAAYb,EAAUmD,GAClD,GAAmB,iBAARD,EAEhB,OADAA,GAAY,IACgC,mBAAjC9E,WAAWoB,UAAUhB,QAC1B2E,EACK/E,WAAWoB,UAAUhB,QAAQ6E,KAAKzC,EAAQsC,EAAKrC,GAE/CzC,WAAWoB,UAAU8D,YAAYD,KAAKzC,EAAQsC,EAAKrC,GAGvDuC,EAAaxC,EAAQ,CAACsC,GAAMrC,EAAYb,EAAUmD,GAG3D,MAAM,IAAIxD,UAAU,uCACtB,CAEA,SAASyD,EAAclG,EAAKgG,EAAKrC,EAAYb,EAAUmD,GACrD,IA0BIlG,EA1BAsG,EAAY,EACZC,EAAYtG,EAAIS,OAChB8F,EAAYP,EAAIvF,OAEpB,QAAiB2D,IAAbtB,IAEe,UADjBA,EAAW0D,OAAO1D,GAAUsC,gBACY,UAAbtC,GACV,YAAbA,GAAuC,aAAbA,GAAyB,CACrD,GAAI9C,EAAIS,OAAS,GAAKuF,EAAIvF,OAAS,EACjC,OAAQ,EAEV4F,EAAY,EACZC,GAAa,EACbC,GAAa,EACb5C,GAAc,CAChB,CAGF,SAAS8C,EAAMtE,EAAKpC,GAClB,OAAkB,IAAdsG,EACKlE,EAAIpC,GAEJoC,EAAIuE,aAAa3G,EAAIsG,EAEhC,CAGA,GAAIJ,EAAK,CACP,IAAIU,GAAc,EAClB,IAAK5G,EAAI4D,EAAY5D,EAAIuG,EAAWvG,IAClC,GAAI0G,EAAKzG,EAAKD,KAAO0G,EAAKT,GAAqB,IAAhBW,EAAoB,EAAI5G,EAAI4G,IAEzD,IADoB,IAAhBA,IAAmBA,EAAa5G,GAChCA,EAAI4G,EAAa,IAAMJ,EAAW,OAAOI,EAAaN,OAEtC,IAAhBM,IAAmB5G,GAAKA,EAAI4G,GAChCA,GAAc,CAGpB,MAEE,IADIhD,EAAa4C,EAAYD,IAAW3C,EAAa2C,EAAYC,GAC5DxG,EAAI4D,EAAY5D,GAAK,EAAGA,IAAK,CAChC,IAAI6G,GAAQ,EACZ,IAAK,IAAIC,EAAI,EAAGA,EAAIN,EAAWM,IAC7B,GAAIJ,EAAKzG,EAAKD,EAAI8G,KAAOJ,EAAKT,EAAKa,GAAI,CACrCD,GAAQ,EACR,KACF,CAEF,GAAIA,EAAO,OAAO7G,CACpB,CAGF,OAAQ,CACV,CAcA,SAAS+G,EAAU3E,EAAKU,EAAQkE,EAAQtG,GACtCsG,EAASC,OAAOD,IAAW,EAC3B,MAAME,EAAY9E,EAAI1B,OAASsG,EAC1BtG,GAGHA,EAASuG,OAAOvG,IACHwG,IACXxG,EAASwG,GAJXxG,EAASwG,EAQX,MAAMC,EAASrE,EAAOpC,OAKtB,IAAIV,EACJ,IAJIU,EAASyG,EAAS,IACpBzG,EAASyG,EAAS,GAGfnH,EAAI,EAAGA,EAAIU,IAAUV,EAAG,CAC3B,MAAMoH,EAASC,SAASvE,EAAOwE,OAAW,EAAJtH,EAAO,GAAI,IACjD,GAAIsE,EAAY8C,GAAS,OAAOpH,EAChCoC,EAAI4E,EAAShH,GAAKoH,CACpB,CACA,OAAOpH,CACT,CAEA,SAASuH,EAAWnF,EAAKU,EAAQkE,EAAQtG,GACvC,OAAO8G,EAAWrC,EAAYrC,EAAQV,EAAI1B,OAASsG,GAAS5E,EAAK4E,EAAQtG,EAC3E,CAEA,SAAS+G,EAAYrF,EAAKU,EAAQkE,EAAQtG,GACxC,OAAO8G,EAypCT,SAAuBE,GACrB,MAAMC,EAAY,GAClB,IAAK,IAAI3H,EAAI,EAAGA,EAAI0H,EAAIhH,SAAUV,EAEhC2H,EAAU5G,KAAyB,IAApB2G,EAAInH,WAAWP,IAEhC,OAAO2H,CACT,CAhqCoBC,CAAa9E,GAASV,EAAK4E,EAAQtG,EACvD,CAEA,SAASmH,EAAazF,EAAKU,EAAQkE,EAAQtG,GACzC,OAAO8G,EAAWpC,EAActC,GAASV,EAAK4E,EAAQtG,EACxD,CAEA,SAASoH,EAAW1F,EAAKU,EAAQkE,EAAQtG,GACvC,OAAO8G,EA0pCT,SAAyBE,EAAKK,GAC5B,IAAIC,EAAGC,EAAIC,EACX,MAAMP,EAAY,GAClB,IAAK,IAAI3H,EAAI,EAAGA,EAAI0H,EAAIhH,WACjBqH,GAAS,GAAK,KADa/H,EAGhCgI,EAAIN,EAAInH,WAAWP,GACnBiI,EAAKD,GAAK,EACVE,EAAKF,EAAI,IACTL,EAAU5G,KAAKmH,GACfP,EAAU5G,KAAKkH,GAGjB,OAAON,CACT,CAxqCoBQ,CAAerF,EAAQV,EAAI1B,OAASsG,GAAS5E,EAAK4E,EAAQtG,EAC9E,CA8EA,SAASiF,EAAavD,EAAKZ,EAAOC,GAChC,OAAc,IAAVD,GAAeC,IAAQW,EAAI1B,OACtBkB,EAAOpB,cAAc4B,GAErBR,EAAOpB,cAAc4B,EAAIe,MAAM3B,EAAOC,GAEjD,CAEA,SAAS+D,EAAWpD,EAAKZ,EAAOC,GAC9BA,EAAM2G,KAAKC,IAAIjG,EAAI1B,OAAQe,GAC3B,MAAM6G,EAAM,GAEZ,IAAItI,EAAIwB,EACR,KAAOxB,EAAIyB,GAAK,CACd,MAAM8G,EAAYnG,EAAIpC,GACtB,IAAIwI,EAAY,KACZC,EAAoBF,EAAY,IAChC,EACCA,EAAY,IACT,EACCA,EAAY,IACT,EACA,EAEZ,GAAIvI,EAAIyI,GAAoBhH,EAAK,CAC/B,IAAIiH,EAAYC,EAAWC,EAAYC,EAEvC,OAAQJ,GACN,KAAK,EACCF,EAAY,MACdC,EAAYD,GAEd,MACF,KAAK,EACHG,EAAatG,EAAIpC,EAAI,GACO,MAAV,IAAb0I,KACHG,GAA6B,GAAZN,IAAqB,EAAoB,GAAbG,EACzCG,EAAgB,MAClBL,EAAYK,IAGhB,MACF,KAAK,EACHH,EAAatG,EAAIpC,EAAI,GACrB2I,EAAYvG,EAAIpC,EAAI,GACQ,MAAV,IAAb0I,IAAsD,MAAV,IAAZC,KACnCE,GAA6B,GAAZN,IAAoB,IAAoB,GAAbG,IAAsB,EAAmB,GAAZC,EACrEE,EAAgB,OAAUA,EAAgB,OAAUA,EAAgB,SACtEL,EAAYK,IAGhB,MACF,KAAK,EACHH,EAAatG,EAAIpC,EAAI,GACrB2I,EAAYvG,EAAIpC,EAAI,GACpB4I,EAAaxG,EAAIpC,EAAI,GACO,MAAV,IAAb0I,IAAsD,MAAV,IAAZC,IAAsD,MAAV,IAAbC,KAClEC,GAA6B,GAAZN,IAAoB,IAAqB,GAAbG,IAAsB,IAAmB,GAAZC,IAAqB,EAAoB,GAAbC,EAClGC,EAAgB,OAAUA,EAAgB,UAC5CL,EAAYK,IAItB,CAEkB,OAAdL,GAGFA,EAAY,MACZC,EAAmB,GACVD,EAAY,QAErBA,GAAa,MACbF,EAAIvH,KAAKyH,IAAc,GAAK,KAAQ,OACpCA,EAAY,MAAqB,KAAZA,GAGvBF,EAAIvH,KAAKyH,GACTxI,GAAKyI,CACP,CAEA,OAQF,SAAgCK,GAC9B,MAAMzI,EAAMyI,EAAWpI,OACvB,GAAIL,GAAO0I,EACT,OAAOtC,OAAOuC,aAAaC,MAAMxC,OAAQqC,GAI3C,IAAIR,EAAM,GACNtI,EAAI,EACR,KAAOA,EAAIK,GACTiI,GAAO7B,OAAOuC,aAAaC,MACzBxC,OACAqC,EAAW3F,MAAMnD,EAAGA,GAAK+I,IAG7B,OAAOT,CACT,CAxBSY,CAAsBZ,EAC/B,CA39BAtG,EAAOmH,oBAUP,WAEE,IACE,MAAMlJ,EAAM,IAAIkB,WAAW,GACrBiI,EAAQ,CAAEC,IAAK,WAAc,OAAO,EAAG,GAG7C,OAFAhH,OAAOC,eAAe8G,EAAOjI,WAAWoB,WACxCF,OAAOC,eAAerC,EAAKmJ,GACN,KAAdnJ,EAAIoJ,KACb,CAAE,MAAOC,GACP,OAAO,CACT,CACF,CArB6BC,GAExBvH,EAAOmH,qBAA0C,oBAAZK,SACb,mBAAlBA,QAAQC,OACjBD,QAAQC,MACN,iJAkBJpH,OAAOqH,eAAe1H,EAAOO,UAAW,SAAU,CAChDoH,YAAY,EACZC,IAAK,WACH,GAAK5H,EAAOmC,SAAS5E,MACrB,OAAOA,KAAKoE,MACd,IAGFtB,OAAOqH,eAAe1H,EAAOO,UAAW,SAAU,CAChDoH,YAAY,EACZC,IAAK,WACH,GAAK5H,EAAOmC,SAAS5E,MACrB,OAAOA,KAAKqE,UACd,IAoCF5B,EAAO6H,SAAW,KA8DlB7H,EAAOY,KAAO,SAAUC,EAAOJ,EAAkB/B,GAC/C,OAAOkC,EAAKC,EAAOJ,EAAkB/B,EACvC,EAIA2B,OAAOC,eAAeN,EAAOO,UAAWpB,WAAWoB,WACnDF,OAAOC,eAAeN,EAAQb,YA8B9Ba,EAAO8H,MAAQ,SAAUjF,EAAMkF,EAAMhH,GACnC,OArBF,SAAgB8B,EAAMkF,EAAMhH,GAE1B,OADA6B,EAAWC,GACPA,GAAQ,EACH3C,EAAa2C,QAETR,IAAT0F,EAIyB,iBAAbhH,EACVb,EAAa2C,GAAMkF,KAAKA,EAAMhH,GAC9Bb,EAAa2C,GAAMkF,KAAKA,GAEvB7H,EAAa2C,EACtB,CAOSiF,CAAMjF,EAAMkF,EAAMhH,EAC3B,EAUAf,EAAOW,YAAc,SAAUkC,GAC7B,OAAOlC,EAAYkC,EACrB,EAIA7C,EAAOgI,gBAAkB,SAAUnF,GACjC,OAAOlC,EAAYkC,EACrB,EA6GA7C,EAAOmC,SAAW,SAAmBF,GACnC,OAAY,MAALA,IAA6B,IAAhBA,EAAEgG,WACpBhG,IAAMjC,EAAOO,SACjB,EAEAP,EAAOkI,QAAU,SAAkBC,EAAGlG,GAGpC,GAFIT,EAAW2G,EAAGhJ,cAAagJ,EAAInI,EAAOY,KAAKuH,EAAGA,EAAEnD,OAAQmD,EAAE3K,aAC1DgE,EAAWS,EAAG9C,cAAa8C,EAAIjC,EAAOY,KAAKqB,EAAGA,EAAE+C,OAAQ/C,EAAEzE,cACzDwC,EAAOmC,SAASgG,KAAOnI,EAAOmC,SAASF,GAC1C,MAAM,IAAIvB,UACR,yEAIJ,GAAIyH,IAAMlG,EAAG,OAAO,EAEpB,IAAImG,EAAID,EAAEzJ,OACN2J,EAAIpG,EAAEvD,OAEV,IAAK,IAAIV,EAAI,EAAGK,EAAM+H,KAAKC,IAAI+B,EAAGC,GAAIrK,EAAIK,IAAOL,EAC/C,GAAImK,EAAEnK,KAAOiE,EAAEjE,GAAI,CACjBoK,EAAID,EAAEnK,GACNqK,EAAIpG,EAAEjE,GACN,KACF,CAGF,OAAIoK,EAAIC,GAAW,EACfA,EAAID,EAAU,EACX,CACT,EAEApI,EAAOgB,WAAa,SAAqBD,GACvC,OAAQ0D,OAAO1D,GAAUsC,eACvB,IAAK,MACL,IAAK,OACL,IAAK,QACL,IAAK,QACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAO,EACT,QACE,OAAO,EAEb,EAEArD,EAAOsI,OAAS,SAAiBC,EAAM7J,GACrC,IAAKU,MAAMoD,QAAQ+F,GACjB,MAAM,IAAI7H,UAAU,+CAGtB,GAAoB,IAAhB6H,EAAK7J,OACP,OAAOsB,EAAO8H,MAAM,GAGtB,IAAI9J,EACJ,QAAeqE,IAAX3D,EAEF,IADAA,EAAS,EACJV,EAAI,EAAGA,EAAIuK,EAAK7J,SAAUV,EAC7BU,GAAU6J,EAAKvK,GAAGU,OAItB,MAAMiD,EAAS3B,EAAOW,YAAYjC,GAClC,IAAI8J,EAAM,EACV,IAAKxK,EAAI,EAAGA,EAAIuK,EAAK7J,SAAUV,EAAG,CAChC,IAAIoC,EAAMmI,EAAKvK,GACf,GAAIwD,EAAWpB,EAAKjB,YACdqJ,EAAMpI,EAAI1B,OAASiD,EAAOjD,QACvBsB,EAAOmC,SAAS/B,KAAMA,EAAMJ,EAAOY,KAAKR,IAC7CA,EAAIqB,KAAKE,EAAQ6G,IAEjBrJ,WAAWoB,UAAUkI,IAAIrE,KACvBzC,EACAvB,EACAoI,OAGC,KAAKxI,EAAOmC,SAAS/B,GAC1B,MAAM,IAAIM,UAAU,+CAEpBN,EAAIqB,KAAKE,EAAQ6G,EACnB,CACAA,GAAOpI,EAAI1B,MACb,CACA,OAAOiD,CACT,EAiDA3B,EAAOxC,WAAaA,EA8EpBwC,EAAOO,UAAU0H,WAAY,EAQ7BjI,EAAOO,UAAUmI,OAAS,WACxB,MAAMrK,EAAMd,KAAKmB,OACjB,GAAIL,EAAM,GAAM,EACd,MAAM,IAAI8B,WAAW,6CAEvB,IAAK,IAAInC,EAAI,EAAGA,EAAIK,EAAKL,GAAK,EAC5B6F,EAAKtG,KAAMS,EAAGA,EAAI,GAEpB,OAAOT,IACT,EAEAyC,EAAOO,UAAUoI,OAAS,WACxB,MAAMtK,EAAMd,KAAKmB,OACjB,GAAIL,EAAM,GAAM,EACd,MAAM,IAAI8B,WAAW,6CAEvB,IAAK,IAAInC,EAAI,EAAGA,EAAIK,EAAKL,GAAK,EAC5B6F,EAAKtG,KAAMS,EAAGA,EAAI,GAClB6F,EAAKtG,KAAMS,EAAI,EAAGA,EAAI,GAExB,OAAOT,IACT,EAEAyC,EAAOO,UAAUqI,OAAS,WACxB,MAAMvK,EAAMd,KAAKmB,OACjB,GAAIL,EAAM,GAAM,EACd,MAAM,IAAI8B,WAAW,6CAEvB,IAAK,IAAInC,EAAI,EAAGA,EAAIK,EAAKL,GAAK,EAC5B6F,EAAKtG,KAAMS,EAAGA,EAAI,GAClB6F,EAAKtG,KAAMS,EAAI,EAAGA,EAAI,GACtB6F,EAAKtG,KAAMS,EAAI,EAAGA,EAAI,GACtB6F,EAAKtG,KAAMS,EAAI,EAAGA,EAAI,GAExB,OAAOT,IACT,EAEAyC,EAAOO,UAAUwC,SAAW,WAC1B,MAAMrE,EAASnB,KAAKmB,OACpB,OAAe,IAAXA,EAAqB,GACA,IAArBuE,UAAUvE,OAAqB8E,EAAUjG,KAAM,EAAGmB,GAC/C4E,EAAa2D,MAAM1J,KAAM0F,UAClC,EAEAjD,EAAOO,UAAUsI,eAAiB7I,EAAOO,UAAUwC,SAEnD/C,EAAOO,UAAUuI,OAAS,SAAiB7G,GACzC,IAAKjC,EAAOmC,SAASF,GAAI,MAAM,IAAIvB,UAAU,6BAC7C,OAAInD,OAAS0E,GACsB,IAA5BjC,EAAOkI,QAAQ3K,KAAM0E,EAC9B,EAEAjC,EAAOO,UAAUwI,QAAU,WACzB,IAAIrD,EAAM,GACV,MAAMsD,EAAM7L,EAAQ,GAGpB,OAFAuI,EAAMnI,KAAKwF,SAAS,MAAO,EAAGiG,GAAKC,QAAQ,UAAW,OAAOC,OACzD3L,KAAKmB,OAASsK,IAAKtD,GAAO,SACvB,WAAaA,EAAM,GAC5B,EACI5F,IACFE,EAAOO,UAAUT,GAAuBE,EAAOO,UAAUwI,SAG3D/I,EAAOO,UAAU2H,QAAU,SAAkBiB,EAAQ3J,EAAOC,EAAK2J,EAAWC,GAI1E,GAHI7H,EAAW2H,EAAQhK,cACrBgK,EAASnJ,EAAOY,KAAKuI,EAAQA,EAAOnE,OAAQmE,EAAO3L,cAEhDwC,EAAOmC,SAASgH,GACnB,MAAM,IAAIzI,UACR,wFAC2ByI,GAiB/B,QAbc9G,IAAV7C,IACFA,EAAQ,QAEE6C,IAAR5C,IACFA,EAAM0J,EAASA,EAAOzK,OAAS,QAEf2D,IAAd+G,IACFA,EAAY,QAEE/G,IAAZgH,IACFA,EAAU9L,KAAKmB,QAGbc,EAAQ,GAAKC,EAAM0J,EAAOzK,QAAU0K,EAAY,GAAKC,EAAU9L,KAAKmB,OACtE,MAAM,IAAIyB,WAAW,sBAGvB,GAAIiJ,GAAaC,GAAW7J,GAASC,EACnC,OAAO,EAET,GAAI2J,GAAaC,EACf,OAAQ,EAEV,GAAI7J,GAASC,EACX,OAAO,EAQT,GAAIlC,OAAS4L,EAAQ,OAAO,EAE5B,IAAIf,GAJJiB,KAAa,IADbD,KAAe,GAMXf,GAPJ5I,KAAS,IADTD,KAAW,GASX,MAAMnB,EAAM+H,KAAKC,IAAI+B,EAAGC,GAElBiB,EAAW/L,KAAK4D,MAAMiI,EAAWC,GACjCE,EAAaJ,EAAOhI,MAAM3B,EAAOC,GAEvC,IAAK,IAAIzB,EAAI,EAAGA,EAAIK,IAAOL,EACzB,GAAIsL,EAAStL,KAAOuL,EAAWvL,GAAI,CACjCoK,EAAIkB,EAAStL,GACbqK,EAAIkB,EAAWvL,GACf,KACF,CAGF,OAAIoK,EAAIC,GAAW,EACfA,EAAID,EAAU,EACX,CACT,EA2HApI,EAAOO,UAAUiJ,SAAW,SAAmBvF,EAAKrC,EAAYb,GAC9D,OAAoD,IAA7CxD,KAAKgC,QAAQ0E,EAAKrC,EAAYb,EACvC,EAEAf,EAAOO,UAAUhB,QAAU,SAAkB0E,EAAKrC,EAAYb,GAC5D,OAAOiD,EAAqBzG,KAAM0G,EAAKrC,EAAYb,GAAU,EAC/D,EAEAf,EAAOO,UAAU8D,YAAc,SAAsBJ,EAAKrC,EAAYb,GACpE,OAAOiD,EAAqBzG,KAAM0G,EAAKrC,EAAYb,GAAU,EAC/D,EA4CAf,EAAOO,UAAUW,MAAQ,SAAgBJ,EAAQkE,EAAQtG,EAAQqC,GAE/D,QAAesB,IAAX2C,EACFjE,EAAW,OACXrC,EAASnB,KAAKmB,OACdsG,EAAS,OAEJ,QAAe3C,IAAX3D,GAA0C,iBAAXsG,EACxCjE,EAAWiE,EACXtG,EAASnB,KAAKmB,OACdsG,EAAS,MAEJ,KAAIyE,SAASzE,GAUlB,MAAM,IAAI1F,MACR,2EAVF0F,KAAoB,EAChByE,SAAS/K,IACXA,KAAoB,OACH2D,IAAbtB,IAAwBA,EAAW,UAEvCA,EAAWrC,EACXA,OAAS2D,EAMb,CAEA,MAAM6C,EAAY3H,KAAKmB,OAASsG,EAGhC,SAFe3C,IAAX3D,GAAwBA,EAASwG,KAAWxG,EAASwG,GAEpDpE,EAAOpC,OAAS,IAAMA,EAAS,GAAKsG,EAAS,IAAOA,EAASzH,KAAKmB,OACrE,MAAM,IAAIyB,WAAW,0CAGlBY,IAAUA,EAAW,QAE1B,IAAImC,GAAc,EAClB,OACE,OAAQnC,GACN,IAAK,MACH,OAAOgE,EAASxH,KAAMuD,EAAQkE,EAAQtG,GAExC,IAAK,OACL,IAAK,QACH,OAAO6G,EAAUhI,KAAMuD,EAAQkE,EAAQtG,GAEzC,IAAK,QACL,IAAK,SACL,IAAK,SACH,OAAO+G,EAAWlI,KAAMuD,EAAQkE,EAAQtG,GAE1C,IAAK,SAEH,OAAOmH,EAAYtI,KAAMuD,EAAQkE,EAAQtG,GAE3C,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAOoH,EAAUvI,KAAMuD,EAAQkE,EAAQtG,GAEzC,QACE,GAAIwE,EAAa,MAAM,IAAIxC,UAAU,qBAAuBK,GAC5DA,GAAY,GAAKA,GAAUsC,cAC3BH,GAAc,EAGtB,EAEAlD,EAAOO,UAAUmJ,OAAS,WACxB,MAAO,CACLnH,KAAM,SACNE,KAAMrD,MAAMmB,UAAUY,MAAMiD,KAAK7G,KAAKoM,MAAQpM,KAAM,GAExD,EAyFA,MAAMwJ,EAAuB,KAoB7B,SAAStD,EAAYrD,EAAKZ,EAAOC,GAC/B,IAAImK,EAAM,GACVnK,EAAM2G,KAAKC,IAAIjG,EAAI1B,OAAQe,GAE3B,IAAK,IAAIzB,EAAIwB,EAAOxB,EAAIyB,IAAOzB,EAC7B4L,GAAOnF,OAAOuC,aAAsB,IAAT5G,EAAIpC,IAEjC,OAAO4L,CACT,CAEA,SAASlG,EAAatD,EAAKZ,EAAOC,GAChC,IAAImK,EAAM,GACVnK,EAAM2G,KAAKC,IAAIjG,EAAI1B,OAAQe,GAE3B,IAAK,IAAIzB,EAAIwB,EAAOxB,EAAIyB,IAAOzB,EAC7B4L,GAAOnF,OAAOuC,aAAa5G,EAAIpC,IAEjC,OAAO4L,CACT,CAEA,SAASrG,EAAUnD,EAAKZ,EAAOC,GAC7B,MAAMpB,EAAM+B,EAAI1B,SAEXc,GAASA,EAAQ,KAAGA,EAAQ,KAC5BC,GAAOA,EAAM,GAAKA,EAAMpB,KAAKoB,EAAMpB,GAExC,IAAIwL,EAAM,GACV,IAAK,IAAI7L,EAAIwB,EAAOxB,EAAIyB,IAAOzB,EAC7B6L,GAAOC,EAAoB1J,EAAIpC,IAEjC,OAAO6L,CACT,CAEA,SAASjG,EAAcxD,EAAKZ,EAAOC,GACjC,MAAMsK,EAAQ3J,EAAIe,MAAM3B,EAAOC,GAC/B,IAAI6G,EAAM,GAEV,IAAK,IAAItI,EAAI,EAAGA,EAAI+L,EAAMrL,OAAS,EAAGV,GAAK,EACzCsI,GAAO7B,OAAOuC,aAAa+C,EAAM/L,GAAqB,IAAf+L,EAAM/L,EAAI,IAEnD,OAAOsI,CACT,CAiCA,SAAS0D,EAAahF,EAAQiF,EAAKvL,GACjC,GAAKsG,EAAS,GAAO,GAAKA,EAAS,EAAG,MAAM,IAAI7E,WAAW,sBAC3D,GAAI6E,EAASiF,EAAMvL,EAAQ,MAAM,IAAIyB,WAAW,wCAClD,CAyQA,SAAS+J,EAAU9J,EAAKS,EAAOmE,EAAQiF,EAAKjB,EAAK3C,GAC/C,IAAKrG,EAAOmC,SAAS/B,GAAM,MAAM,IAAIM,UAAU,+CAC/C,GAAIG,EAAQmI,GAAOnI,EAAQwF,EAAK,MAAM,IAAIlG,WAAW,qCACrD,GAAI6E,EAASiF,EAAM7J,EAAI1B,OAAQ,MAAM,IAAIyB,WAAW,qBACtD,CA+FA,SAASgK,EAAgB/J,EAAKS,EAAOmE,EAAQqB,EAAK2C,GAChDoB,EAAWvJ,EAAOwF,EAAK2C,EAAK5I,EAAK4E,EAAQ,GAEzC,IAAIkB,EAAKjB,OAAOpE,EAAQwJ,OAAO,aAC/BjK,EAAI4E,KAAYkB,EAChBA,IAAW,EACX9F,EAAI4E,KAAYkB,EAChBA,IAAW,EACX9F,EAAI4E,KAAYkB,EAChBA,IAAW,EACX9F,EAAI4E,KAAYkB,EAChB,IAAID,EAAKhB,OAAOpE,GAASwJ,OAAO,IAAMA,OAAO,aAQ7C,OAPAjK,EAAI4E,KAAYiB,EAChBA,IAAW,EACX7F,EAAI4E,KAAYiB,EAChBA,IAAW,EACX7F,EAAI4E,KAAYiB,EAChBA,IAAW,EACX7F,EAAI4E,KAAYiB,EACTjB,CACT,CAEA,SAASsF,EAAgBlK,EAAKS,EAAOmE,EAAQqB,EAAK2C,GAChDoB,EAAWvJ,EAAOwF,EAAK2C,EAAK5I,EAAK4E,EAAQ,GAEzC,IAAIkB,EAAKjB,OAAOpE,EAAQwJ,OAAO,aAC/BjK,EAAI4E,EAAS,GAAKkB,EAClBA,IAAW,EACX9F,EAAI4E,EAAS,GAAKkB,EAClBA,IAAW,EACX9F,EAAI4E,EAAS,GAAKkB,EAClBA,IAAW,EACX9F,EAAI4E,EAAS,GAAKkB,EAClB,IAAID,EAAKhB,OAAOpE,GAASwJ,OAAO,IAAMA,OAAO,aAQ7C,OAPAjK,EAAI4E,EAAS,GAAKiB,EAClBA,IAAW,EACX7F,EAAI4E,EAAS,GAAKiB,EAClBA,IAAW,EACX7F,EAAI4E,EAAS,GAAKiB,EAClBA,IAAW,EACX7F,EAAI4E,GAAUiB,EACPjB,EAAS,CAClB,CAkHA,SAASuF,EAAcnK,EAAKS,EAAOmE,EAAQiF,EAAKjB,EAAK3C,GACnD,GAAIrB,EAASiF,EAAM7J,EAAI1B,OAAQ,MAAM,IAAIyB,WAAW,sBACpD,GAAI6E,EAAS,EAAG,MAAM,IAAI7E,WAAW,qBACvC,CAEA,SAASqK,EAAYpK,EAAKS,EAAOmE,EAAQyF,EAAcC,GAOrD,OANA7J,GAASA,EACTmE,KAAoB,EACf0F,GACHH,EAAanK,EAAKS,EAAOmE,EAAQ,GAEnCnF,EAAQqB,MAAMd,EAAKS,EAAOmE,EAAQyF,EAAc,GAAI,GAC7CzF,EAAS,CAClB,CAUA,SAAS2F,EAAavK,EAAKS,EAAOmE,EAAQyF,EAAcC,GAOtD,OANA7J,GAASA,EACTmE,KAAoB,EACf0F,GACHH,EAAanK,EAAKS,EAAOmE,EAAQ,GAEnCnF,EAAQqB,MAAMd,EAAKS,EAAOmE,EAAQyF,EAAc,GAAI,GAC7CzF,EAAS,CAClB,CAzkBAhF,EAAOO,UAAUY,MAAQ,SAAgB3B,EAAOC,GAC9C,MAAMpB,EAAMd,KAAKmB,QACjBc,IAAUA,GAGE,GACVA,GAASnB,GACG,IAAGmB,EAAQ,GACdA,EAAQnB,IACjBmB,EAAQnB,IANVoB,OAAc4C,IAAR5C,EAAoBpB,IAAQoB,GASxB,GACRA,GAAOpB,GACG,IAAGoB,EAAM,GACVA,EAAMpB,IACfoB,EAAMpB,GAGJoB,EAAMD,IAAOC,EAAMD,GAEvB,MAAMoL,EAASrN,KAAKsN,SAASrL,EAAOC,GAIpC,OAFAY,OAAOC,eAAesK,EAAQ5K,EAAOO,WAE9BqK,CACT,EAUA5K,EAAOO,UAAUuK,WACjB9K,EAAOO,UAAUwK,WAAa,SAAqB/F,EAAQxH,EAAYkN,GACrE1F,KAAoB,EACpBxH,KAA4B,EACvBkN,GAAUV,EAAYhF,EAAQxH,EAAYD,KAAKmB,QAEpD,IAAIuF,EAAM1G,KAAKyH,GACXgG,EAAM,EACNhN,EAAI,EACR,OAASA,EAAIR,IAAewN,GAAO,MACjC/G,GAAO1G,KAAKyH,EAAShH,GAAKgN,EAG5B,OAAO/G,CACT,EAEAjE,EAAOO,UAAU0K,WACjBjL,EAAOO,UAAU2K,WAAa,SAAqBlG,EAAQxH,EAAYkN,GACrE1F,KAAoB,EACpBxH,KAA4B,EACvBkN,GACHV,EAAYhF,EAAQxH,EAAYD,KAAKmB,QAGvC,IAAIuF,EAAM1G,KAAKyH,IAAWxH,GACtBwN,EAAM,EACV,KAAOxN,EAAa,IAAMwN,GAAO,MAC/B/G,GAAO1G,KAAKyH,IAAWxH,GAAcwN,EAGvC,OAAO/G,CACT,EAEAjE,EAAOO,UAAU4K,UACjBnL,EAAOO,UAAU6K,UAAY,SAAoBpG,EAAQ0F,GAGvD,OAFA1F,KAAoB,EACf0F,GAAUV,EAAYhF,EAAQ,EAAGzH,KAAKmB,QACpCnB,KAAKyH,EACd,EAEAhF,EAAOO,UAAU8K,aACjBrL,EAAOO,UAAU+K,aAAe,SAAuBtG,EAAQ0F,GAG7D,OAFA1F,KAAoB,EACf0F,GAAUV,EAAYhF,EAAQ,EAAGzH,KAAKmB,QACpCnB,KAAKyH,GAAWzH,KAAKyH,EAAS,IAAM,CAC7C,EAEAhF,EAAOO,UAAUgL,aACjBvL,EAAOO,UAAUoE,aAAe,SAAuBK,EAAQ0F,GAG7D,OAFA1F,KAAoB,EACf0F,GAAUV,EAAYhF,EAAQ,EAAGzH,KAAKmB,QACnCnB,KAAKyH,IAAW,EAAKzH,KAAKyH,EAAS,EAC7C,EAEAhF,EAAOO,UAAUiL,aACjBxL,EAAOO,UAAUkL,aAAe,SAAuBzG,EAAQ0F,GAI7D,OAHA1F,KAAoB,EACf0F,GAAUV,EAAYhF,EAAQ,EAAGzH,KAAKmB,SAElCnB,KAAKyH,GACTzH,KAAKyH,EAAS,IAAM,EACpBzH,KAAKyH,EAAS,IAAM,IACD,SAAnBzH,KAAKyH,EAAS,EACrB,EAEAhF,EAAOO,UAAUmL,aACjB1L,EAAOO,UAAUoL,aAAe,SAAuB3G,EAAQ0F,GAI7D,OAHA1F,KAAoB,EACf0F,GAAUV,EAAYhF,EAAQ,EAAGzH,KAAKmB,QAEpB,SAAfnB,KAAKyH,IACTzH,KAAKyH,EAAS,IAAM,GACrBzH,KAAKyH,EAAS,IAAM,EACrBzH,KAAKyH,EAAS,GAClB,EAEAhF,EAAOO,UAAUqL,gBAAkBC,GAAmB,SAA0B7G,GAE9E8G,EADA9G,KAAoB,EACG,UACvB,MAAM+G,EAAQxO,KAAKyH,GACbgH,EAAOzO,KAAKyH,EAAS,QACb3C,IAAV0J,QAAgC1J,IAAT2J,GACzBC,EAAYjH,EAAQzH,KAAKmB,OAAS,GAGpC,MAAMwH,EAAK6F,EACQ,IAAjBxO,OAAOyH,GACU,MAAjBzH,OAAOyH,GACPzH,OAAOyH,GAAU,GAAK,GAElBiB,EAAK1I,OAAOyH,GACC,IAAjBzH,OAAOyH,GACU,MAAjBzH,OAAOyH,GACPgH,EAAO,GAAK,GAEd,OAAO3B,OAAOnE,IAAOmE,OAAOpE,IAAOoE,OAAO,IAC5C,IAEArK,EAAOO,UAAU2L,gBAAkBL,GAAmB,SAA0B7G,GAE9E8G,EADA9G,KAAoB,EACG,UACvB,MAAM+G,EAAQxO,KAAKyH,GACbgH,EAAOzO,KAAKyH,EAAS,QACb3C,IAAV0J,QAAgC1J,IAAT2J,GACzBC,EAAYjH,EAAQzH,KAAKmB,OAAS,GAGpC,MAAMuH,EAAK8F,EAAQ,GAAK,GACL,MAAjBxO,OAAOyH,GACU,IAAjBzH,OAAOyH,GACPzH,OAAOyH,GAEHkB,EAAK3I,OAAOyH,GAAU,GAAK,GACd,MAAjBzH,OAAOyH,GACU,IAAjBzH,OAAOyH,GACPgH,EAEF,OAAQ3B,OAAOpE,IAAOoE,OAAO,KAAOA,OAAOnE,EAC7C,IAEAlG,EAAOO,UAAU4L,UAAY,SAAoBnH,EAAQxH,EAAYkN,GACnE1F,KAAoB,EACpBxH,KAA4B,EACvBkN,GAAUV,EAAYhF,EAAQxH,EAAYD,KAAKmB,QAEpD,IAAIuF,EAAM1G,KAAKyH,GACXgG,EAAM,EACNhN,EAAI,EACR,OAASA,EAAIR,IAAewN,GAAO,MACjC/G,GAAO1G,KAAKyH,EAAShH,GAAKgN,EAM5B,OAJAA,GAAO,IAEH/G,GAAO+G,IAAK/G,GAAOmC,KAAKgG,IAAI,EAAG,EAAI5O,IAEhCyG,CACT,EAEAjE,EAAOO,UAAU8L,UAAY,SAAoBrH,EAAQxH,EAAYkN,GACnE1F,KAAoB,EACpBxH,KAA4B,EACvBkN,GAAUV,EAAYhF,EAAQxH,EAAYD,KAAKmB,QAEpD,IAAIV,EAAIR,EACJwN,EAAM,EACN/G,EAAM1G,KAAKyH,IAAWhH,GAC1B,KAAOA,EAAI,IAAMgN,GAAO,MACtB/G,GAAO1G,KAAKyH,IAAWhH,GAAKgN,EAM9B,OAJAA,GAAO,IAEH/G,GAAO+G,IAAK/G,GAAOmC,KAAKgG,IAAI,EAAG,EAAI5O,IAEhCyG,CACT,EAEAjE,EAAOO,UAAU+L,SAAW,SAAmBtH,EAAQ0F,GAGrD,OAFA1F,KAAoB,EACf0F,GAAUV,EAAYhF,EAAQ,EAAGzH,KAAKmB,QACtB,IAAfnB,KAAKyH,IAC0B,GAA5B,IAAOzH,KAAKyH,GAAU,GADKzH,KAAKyH,EAE3C,EAEAhF,EAAOO,UAAUgM,YAAc,SAAsBvH,EAAQ0F,GAC3D1F,KAAoB,EACf0F,GAAUV,EAAYhF,EAAQ,EAAGzH,KAAKmB,QAC3C,MAAMuF,EAAM1G,KAAKyH,GAAWzH,KAAKyH,EAAS,IAAM,EAChD,OAAc,MAANf,EAAsB,WAANA,EAAmBA,CAC7C,EAEAjE,EAAOO,UAAUiM,YAAc,SAAsBxH,EAAQ0F,GAC3D1F,KAAoB,EACf0F,GAAUV,EAAYhF,EAAQ,EAAGzH,KAAKmB,QAC3C,MAAMuF,EAAM1G,KAAKyH,EAAS,GAAMzH,KAAKyH,IAAW,EAChD,OAAc,MAANf,EAAsB,WAANA,EAAmBA,CAC7C,EAEAjE,EAAOO,UAAUkM,YAAc,SAAsBzH,EAAQ0F,GAI3D,OAHA1F,KAAoB,EACf0F,GAAUV,EAAYhF,EAAQ,EAAGzH,KAAKmB,QAEnCnB,KAAKyH,GACVzH,KAAKyH,EAAS,IAAM,EACpBzH,KAAKyH,EAAS,IAAM,GACpBzH,KAAKyH,EAAS,IAAM,EACzB,EAEAhF,EAAOO,UAAUmM,YAAc,SAAsB1H,EAAQ0F,GAI3D,OAHA1F,KAAoB,EACf0F,GAAUV,EAAYhF,EAAQ,EAAGzH,KAAKmB,QAEnCnB,KAAKyH,IAAW,GACrBzH,KAAKyH,EAAS,IAAM,GACpBzH,KAAKyH,EAAS,IAAM,EACpBzH,KAAKyH,EAAS,EACnB,EAEAhF,EAAOO,UAAUoM,eAAiBd,GAAmB,SAAyB7G,GAE5E8G,EADA9G,KAAoB,EACG,UACvB,MAAM+G,EAAQxO,KAAKyH,GACbgH,EAAOzO,KAAKyH,EAAS,QACb3C,IAAV0J,QAAgC1J,IAAT2J,GACzBC,EAAYjH,EAAQzH,KAAKmB,OAAS,GAGpC,MAAMuF,EAAM1G,KAAKyH,EAAS,GACL,IAAnBzH,KAAKyH,EAAS,GACK,MAAnBzH,KAAKyH,EAAS,IACbgH,GAAQ,IAEX,OAAQ3B,OAAOpG,IAAQoG,OAAO,KAC5BA,OAAO0B,EACU,IAAjBxO,OAAOyH,GACU,MAAjBzH,OAAOyH,GACPzH,OAAOyH,GAAU,GAAK,GAC1B,IAEAhF,EAAOO,UAAUqM,eAAiBf,GAAmB,SAAyB7G,GAE5E8G,EADA9G,KAAoB,EACG,UACvB,MAAM+G,EAAQxO,KAAKyH,GACbgH,EAAOzO,KAAKyH,EAAS,QACb3C,IAAV0J,QAAgC1J,IAAT2J,GACzBC,EAAYjH,EAAQzH,KAAKmB,OAAS,GAGpC,MAAMuF,GAAO8H,GAAS,IACH,MAAjBxO,OAAOyH,GACU,IAAjBzH,OAAOyH,GACPzH,OAAOyH,GAET,OAAQqF,OAAOpG,IAAQoG,OAAO,KAC5BA,OAAO9M,OAAOyH,GAAU,GAAK,GACZ,MAAjBzH,OAAOyH,GACU,IAAjBzH,OAAOyH,GACPgH,EACJ,IAEAhM,EAAOO,UAAUsM,YAAc,SAAsB7H,EAAQ0F,GAG3D,OAFA1F,KAAoB,EACf0F,GAAUV,EAAYhF,EAAQ,EAAGzH,KAAKmB,QACpCmB,EAAQ6E,KAAKnH,KAAMyH,GAAQ,EAAM,GAAI,EAC9C,EAEAhF,EAAOO,UAAUuM,YAAc,SAAsB9H,EAAQ0F,GAG3D,OAFA1F,KAAoB,EACf0F,GAAUV,EAAYhF,EAAQ,EAAGzH,KAAKmB,QACpCmB,EAAQ6E,KAAKnH,KAAMyH,GAAQ,EAAO,GAAI,EAC/C,EAEAhF,EAAOO,UAAUwM,aAAe,SAAuB/H,EAAQ0F,GAG7D,OAFA1F,KAAoB,EACf0F,GAAUV,EAAYhF,EAAQ,EAAGzH,KAAKmB,QACpCmB,EAAQ6E,KAAKnH,KAAMyH,GAAQ,EAAM,GAAI,EAC9C,EAEAhF,EAAOO,UAAUyM,aAAe,SAAuBhI,EAAQ0F,GAG7D,OAFA1F,KAAoB,EACf0F,GAAUV,EAAYhF,EAAQ,EAAGzH,KAAKmB,QACpCmB,EAAQ6E,KAAKnH,KAAMyH,GAAQ,EAAO,GAAI,EAC/C,EAQAhF,EAAOO,UAAU0M,YACjBjN,EAAOO,UAAU2M,YAAc,SAAsBrM,EAAOmE,EAAQxH,EAAYkN,GAC9E7J,GAASA,EACTmE,KAAoB,EACpBxH,KAA4B,EACvBkN,GAEHR,EAAS3M,KAAMsD,EAAOmE,EAAQxH,EADb4I,KAAKgG,IAAI,EAAG,EAAI5O,GAAc,EACK,GAGtD,IAAIwN,EAAM,EACNhN,EAAI,EAER,IADAT,KAAKyH,GAAkB,IAARnE,IACN7C,EAAIR,IAAewN,GAAO,MACjCzN,KAAKyH,EAAShH,GAAM6C,EAAQmK,EAAO,IAGrC,OAAOhG,EAASxH,CAClB,EAEAwC,EAAOO,UAAU4M,YACjBnN,EAAOO,UAAU6M,YAAc,SAAsBvM,EAAOmE,EAAQxH,EAAYkN,GAC9E7J,GAASA,EACTmE,KAAoB,EACpBxH,KAA4B,EACvBkN,GAEHR,EAAS3M,KAAMsD,EAAOmE,EAAQxH,EADb4I,KAAKgG,IAAI,EAAG,EAAI5O,GAAc,EACK,GAGtD,IAAIQ,EAAIR,EAAa,EACjBwN,EAAM,EAEV,IADAzN,KAAKyH,EAAShH,GAAa,IAAR6C,IACV7C,GAAK,IAAMgN,GAAO,MACzBzN,KAAKyH,EAAShH,GAAM6C,EAAQmK,EAAO,IAGrC,OAAOhG,EAASxH,CAClB,EAEAwC,EAAOO,UAAU8M,WACjBrN,EAAOO,UAAU+M,WAAa,SAAqBzM,EAAOmE,EAAQ0F,GAKhE,OAJA7J,GAASA,EACTmE,KAAoB,EACf0F,GAAUR,EAAS3M,KAAMsD,EAAOmE,EAAQ,EAAG,IAAM,GACtDzH,KAAKyH,GAAmB,IAARnE,EACTmE,EAAS,CAClB,EAEAhF,EAAOO,UAAUgN,cACjBvN,EAAOO,UAAUiN,cAAgB,SAAwB3M,EAAOmE,EAAQ0F,GAMtE,OALA7J,GAASA,EACTmE,KAAoB,EACf0F,GAAUR,EAAS3M,KAAMsD,EAAOmE,EAAQ,EAAG,MAAQ,GACxDzH,KAAKyH,GAAmB,IAARnE,EAChBtD,KAAKyH,EAAS,GAAMnE,IAAU,EACvBmE,EAAS,CAClB,EAEAhF,EAAOO,UAAUkN,cACjBzN,EAAOO,UAAUmN,cAAgB,SAAwB7M,EAAOmE,EAAQ0F,GAMtE,OALA7J,GAASA,EACTmE,KAAoB,EACf0F,GAAUR,EAAS3M,KAAMsD,EAAOmE,EAAQ,EAAG,MAAQ,GACxDzH,KAAKyH,GAAWnE,IAAU,EAC1BtD,KAAKyH,EAAS,GAAc,IAARnE,EACbmE,EAAS,CAClB,EAEAhF,EAAOO,UAAUoN,cACjB3N,EAAOO,UAAUqN,cAAgB,SAAwB/M,EAAOmE,EAAQ0F,GAQtE,OAPA7J,GAASA,EACTmE,KAAoB,EACf0F,GAAUR,EAAS3M,KAAMsD,EAAOmE,EAAQ,EAAG,WAAY,GAC5DzH,KAAKyH,EAAS,GAAMnE,IAAU,GAC9BtD,KAAKyH,EAAS,GAAMnE,IAAU,GAC9BtD,KAAKyH,EAAS,GAAMnE,IAAU,EAC9BtD,KAAKyH,GAAmB,IAARnE,EACTmE,EAAS,CAClB,EAEAhF,EAAOO,UAAUsN,cACjB7N,EAAOO,UAAUuN,cAAgB,SAAwBjN,EAAOmE,EAAQ0F,GAQtE,OAPA7J,GAASA,EACTmE,KAAoB,EACf0F,GAAUR,EAAS3M,KAAMsD,EAAOmE,EAAQ,EAAG,WAAY,GAC5DzH,KAAKyH,GAAWnE,IAAU,GAC1BtD,KAAKyH,EAAS,GAAMnE,IAAU,GAC9BtD,KAAKyH,EAAS,GAAMnE,IAAU,EAC9BtD,KAAKyH,EAAS,GAAc,IAARnE,EACbmE,EAAS,CAClB,EA8CAhF,EAAOO,UAAUwN,iBAAmBlC,GAAmB,SAA2BhL,EAAOmE,EAAS,GAChG,OAAOmF,EAAe5M,KAAMsD,EAAOmE,EAAQqF,OAAO,GAAIA,OAAO,sBAC/D,IAEArK,EAAOO,UAAUyN,iBAAmBnC,GAAmB,SAA2BhL,EAAOmE,EAAS,GAChG,OAAOsF,EAAe/M,KAAMsD,EAAOmE,EAAQqF,OAAO,GAAIA,OAAO,sBAC/D,IAEArK,EAAOO,UAAU0N,WAAa,SAAqBpN,EAAOmE,EAAQxH,EAAYkN,GAG5E,GAFA7J,GAASA,EACTmE,KAAoB,GACf0F,EAAU,CACb,MAAMwD,EAAQ9H,KAAKgG,IAAI,EAAI,EAAI5O,EAAc,GAE7C0M,EAAS3M,KAAMsD,EAAOmE,EAAQxH,EAAY0Q,EAAQ,GAAIA,EACxD,CAEA,IAAIlQ,EAAI,EACJgN,EAAM,EACNmD,EAAM,EAEV,IADA5Q,KAAKyH,GAAkB,IAARnE,IACN7C,EAAIR,IAAewN,GAAO,MAC7BnK,EAAQ,GAAa,IAARsN,GAAsC,IAAzB5Q,KAAKyH,EAAShH,EAAI,KAC9CmQ,EAAM,GAER5Q,KAAKyH,EAAShH,IAAO6C,EAAQmK,EAAQ,GAAKmD,EAAM,IAGlD,OAAOnJ,EAASxH,CAClB,EAEAwC,EAAOO,UAAU6N,WAAa,SAAqBvN,EAAOmE,EAAQxH,EAAYkN,GAG5E,GAFA7J,GAASA,EACTmE,KAAoB,GACf0F,EAAU,CACb,MAAMwD,EAAQ9H,KAAKgG,IAAI,EAAI,EAAI5O,EAAc,GAE7C0M,EAAS3M,KAAMsD,EAAOmE,EAAQxH,EAAY0Q,EAAQ,GAAIA,EACxD,CAEA,IAAIlQ,EAAIR,EAAa,EACjBwN,EAAM,EACNmD,EAAM,EAEV,IADA5Q,KAAKyH,EAAShH,GAAa,IAAR6C,IACV7C,GAAK,IAAMgN,GAAO,MACrBnK,EAAQ,GAAa,IAARsN,GAAsC,IAAzB5Q,KAAKyH,EAAShH,EAAI,KAC9CmQ,EAAM,GAER5Q,KAAKyH,EAAShH,IAAO6C,EAAQmK,EAAQ,GAAKmD,EAAM,IAGlD,OAAOnJ,EAASxH,CAClB,EAEAwC,EAAOO,UAAU8N,UAAY,SAAoBxN,EAAOmE,EAAQ0F,GAM9D,OALA7J,GAASA,EACTmE,KAAoB,EACf0F,GAAUR,EAAS3M,KAAMsD,EAAOmE,EAAQ,EAAG,KAAO,KACnDnE,EAAQ,IAAGA,EAAQ,IAAOA,EAAQ,GACtCtD,KAAKyH,GAAmB,IAARnE,EACTmE,EAAS,CAClB,EAEAhF,EAAOO,UAAU+N,aAAe,SAAuBzN,EAAOmE,EAAQ0F,GAMpE,OALA7J,GAASA,EACTmE,KAAoB,EACf0F,GAAUR,EAAS3M,KAAMsD,EAAOmE,EAAQ,EAAG,OAAS,OACzDzH,KAAKyH,GAAmB,IAARnE,EAChBtD,KAAKyH,EAAS,GAAMnE,IAAU,EACvBmE,EAAS,CAClB,EAEAhF,EAAOO,UAAUgO,aAAe,SAAuB1N,EAAOmE,EAAQ0F,GAMpE,OALA7J,GAASA,EACTmE,KAAoB,EACf0F,GAAUR,EAAS3M,KAAMsD,EAAOmE,EAAQ,EAAG,OAAS,OACzDzH,KAAKyH,GAAWnE,IAAU,EAC1BtD,KAAKyH,EAAS,GAAc,IAARnE,EACbmE,EAAS,CAClB,EAEAhF,EAAOO,UAAUiO,aAAe,SAAuB3N,EAAOmE,EAAQ0F,GAQpE,OAPA7J,GAASA,EACTmE,KAAoB,EACf0F,GAAUR,EAAS3M,KAAMsD,EAAOmE,EAAQ,EAAG,YAAa,YAC7DzH,KAAKyH,GAAmB,IAARnE,EAChBtD,KAAKyH,EAAS,GAAMnE,IAAU,EAC9BtD,KAAKyH,EAAS,GAAMnE,IAAU,GAC9BtD,KAAKyH,EAAS,GAAMnE,IAAU,GACvBmE,EAAS,CAClB,EAEAhF,EAAOO,UAAUkO,aAAe,SAAuB5N,EAAOmE,EAAQ0F,GASpE,OARA7J,GAASA,EACTmE,KAAoB,EACf0F,GAAUR,EAAS3M,KAAMsD,EAAOmE,EAAQ,EAAG,YAAa,YACzDnE,EAAQ,IAAGA,EAAQ,WAAaA,EAAQ,GAC5CtD,KAAKyH,GAAWnE,IAAU,GAC1BtD,KAAKyH,EAAS,GAAMnE,IAAU,GAC9BtD,KAAKyH,EAAS,GAAMnE,IAAU,EAC9BtD,KAAKyH,EAAS,GAAc,IAARnE,EACbmE,EAAS,CAClB,EAEAhF,EAAOO,UAAUmO,gBAAkB7C,GAAmB,SAA0BhL,EAAOmE,EAAS,GAC9F,OAAOmF,EAAe5M,KAAMsD,EAAOmE,GAASqF,OAAO,sBAAuBA,OAAO,sBACnF,IAEArK,EAAOO,UAAUoO,gBAAkB9C,GAAmB,SAA0BhL,EAAOmE,EAAS,GAC9F,OAAOsF,EAAe/M,KAAMsD,EAAOmE,GAASqF,OAAO,sBAAuBA,OAAO,sBACnF,IAiBArK,EAAOO,UAAUqO,aAAe,SAAuB/N,EAAOmE,EAAQ0F,GACpE,OAAOF,EAAWjN,KAAMsD,EAAOmE,GAAQ,EAAM0F,EAC/C,EAEA1K,EAAOO,UAAUsO,aAAe,SAAuBhO,EAAOmE,EAAQ0F,GACpE,OAAOF,EAAWjN,KAAMsD,EAAOmE,GAAQ,EAAO0F,EAChD,EAYA1K,EAAOO,UAAUuO,cAAgB,SAAwBjO,EAAOmE,EAAQ0F,GACtE,OAAOC,EAAYpN,KAAMsD,EAAOmE,GAAQ,EAAM0F,EAChD,EAEA1K,EAAOO,UAAUwO,cAAgB,SAAwBlO,EAAOmE,EAAQ0F,GACtE,OAAOC,EAAYpN,KAAMsD,EAAOmE,GAAQ,EAAO0F,EACjD,EAGA1K,EAAOO,UAAUkB,KAAO,SAAe0H,EAAQ6F,EAAaxP,EAAOC,GACjE,IAAKO,EAAOmC,SAASgH,GAAS,MAAM,IAAIzI,UAAU,+BAQlD,GAPKlB,IAAOA,EAAQ,GACfC,GAAe,IAARA,IAAWA,EAAMlC,KAAKmB,QAC9BsQ,GAAe7F,EAAOzK,SAAQsQ,EAAc7F,EAAOzK,QAClDsQ,IAAaA,EAAc,GAC5BvP,EAAM,GAAKA,EAAMD,IAAOC,EAAMD,GAG9BC,IAAQD,EAAO,OAAO,EAC1B,GAAsB,IAAlB2J,EAAOzK,QAAgC,IAAhBnB,KAAKmB,OAAc,OAAO,EAGrD,GAAIsQ,EAAc,EAChB,MAAM,IAAI7O,WAAW,6BAEvB,GAAIX,EAAQ,GAAKA,GAASjC,KAAKmB,OAAQ,MAAM,IAAIyB,WAAW,sBAC5D,GAAIV,EAAM,EAAG,MAAM,IAAIU,WAAW,2BAG9BV,EAAMlC,KAAKmB,SAAQe,EAAMlC,KAAKmB,QAC9ByK,EAAOzK,OAASsQ,EAAcvP,EAAMD,IACtCC,EAAM0J,EAAOzK,OAASsQ,EAAcxP,GAGtC,MAAMnB,EAAMoB,EAAMD,EAalB,OAXIjC,OAAS4L,GAAqD,mBAApChK,WAAWoB,UAAU0O,WAEjD1R,KAAK0R,WAAWD,EAAaxP,EAAOC,GAEpCN,WAAWoB,UAAUkI,IAAIrE,KACvB+E,EACA5L,KAAKsN,SAASrL,EAAOC,GACrBuP,GAIG3Q,CACT,EAMA2B,EAAOO,UAAUwH,KAAO,SAAe9D,EAAKzE,EAAOC,EAAKsB,GAEtD,GAAmB,iBAARkD,EAAkB,CAS3B,GARqB,iBAAVzE,GACTuB,EAAWvB,EACXA,EAAQ,EACRC,EAAMlC,KAAKmB,QACa,iBAARe,IAChBsB,EAAWtB,EACXA,EAAMlC,KAAKmB,aAEI2D,IAAbtB,GAA8C,iBAAbA,EACnC,MAAM,IAAIL,UAAU,6BAEtB,GAAwB,iBAAbK,IAA0Bf,EAAOgB,WAAWD,GACrD,MAAM,IAAIL,UAAU,qBAAuBK,GAE7C,GAAmB,IAAfkD,EAAIvF,OAAc,CACpB,MAAMW,EAAO4E,EAAI1F,WAAW,IACV,SAAbwC,GAAuB1B,EAAO,KAClB,WAAb0B,KAEFkD,EAAM5E,EAEV,CACF,KAA0B,iBAAR4E,EAChBA,GAAY,IACY,kBAARA,IAChBA,EAAMgB,OAAOhB,IAIf,GAAIzE,EAAQ,GAAKjC,KAAKmB,OAASc,GAASjC,KAAKmB,OAASe,EACpD,MAAM,IAAIU,WAAW,sBAGvB,GAAIV,GAAOD,EACT,OAAOjC,KAQT,IAAIS,EACJ,GANAwB,KAAkB,EAClBC,OAAc4C,IAAR5C,EAAoBlC,KAAKmB,OAASe,IAAQ,EAE3CwE,IAAKA,EAAM,GAGG,iBAARA,EACT,IAAKjG,EAAIwB,EAAOxB,EAAIyB,IAAOzB,EACzBT,KAAKS,GAAKiG,MAEP,CACL,MAAM8F,EAAQ/J,EAAOmC,SAAS8B,GAC1BA,EACAjE,EAAOY,KAAKqD,EAAKlD,GACf1C,EAAM0L,EAAMrL,OAClB,GAAY,IAARL,EACF,MAAM,IAAIqC,UAAU,cAAgBuD,EAClC,qCAEJ,IAAKjG,EAAI,EAAGA,EAAIyB,EAAMD,IAASxB,EAC7BT,KAAKS,EAAIwB,GAASuK,EAAM/L,EAAIK,EAEhC,CAEA,OAAOd,IACT,EAMA,MAAM2R,EAAS,CAAC,EAChB,SAASC,EAAGC,EAAKC,EAAYC,GAC3BJ,EAAOE,GAAO,cAAwBE,EACpC,WAAAC,GACEC,QAEAnP,OAAOqH,eAAenK,KAAM,UAAW,CACrCsD,MAAOwO,EAAWpI,MAAM1J,KAAM0F,WAC9BwM,UAAU,EACVC,cAAc,IAIhBnS,KAAKoS,KAAO,GAAGpS,KAAKoS,SAASP,KAG7B7R,KAAKqS,aAEErS,KAAKoS,IACd,CAEA,QAAItQ,GACF,OAAO+P,CACT,CAEA,QAAI/P,CAAMwB,GACRR,OAAOqH,eAAenK,KAAM,OAAQ,CAClCmS,cAAc,EACd/H,YAAY,EACZ9G,QACA4O,UAAU,GAEd,CAEA,QAAA1M,GACE,MAAO,GAAGxF,KAAKoS,SAASP,OAAS7R,KAAKsS,SACxC,EAEJ,CA+BA,SAASC,EAAuB7L,GAC9B,IAAIqC,EAAM,GACNtI,EAAIiG,EAAIvF,OACZ,MAAMc,EAAmB,MAAXyE,EAAI,GAAa,EAAI,EACnC,KAAOjG,GAAKwB,EAAQ,EAAGxB,GAAK,EAC1BsI,EAAM,IAAIrC,EAAI9C,MAAMnD,EAAI,EAAGA,KAAKsI,IAElC,MAAO,GAAGrC,EAAI9C,MAAM,EAAGnD,KAAKsI,GAC9B,CAYA,SAAS8D,EAAYvJ,EAAOwF,EAAK2C,EAAK5I,EAAK4E,EAAQxH,GACjD,GAAIqD,EAAQmI,GAAOnI,EAAQwF,EAAK,CAC9B,MAAMvC,EAAmB,iBAARuC,EAAmB,IAAM,GAC1C,IAAI0J,EAWJ,MARIA,EAFAvS,EAAa,EACH,IAAR6I,GAAaA,IAAQgE,OAAO,GACtB,OAAOvG,YAAYA,QAA2B,GAAlBtG,EAAa,KAASsG,IAElD,SAASA,QAA2B,GAAlBtG,EAAa,GAAS,IAAIsG,iBACtB,GAAlBtG,EAAa,GAAS,IAAIsG,IAGhC,MAAMuC,IAAMvC,YAAYkF,IAAMlF,IAElC,IAAIoL,EAAOc,iBAAiB,QAASD,EAAOlP,EACpD,EAtBF,SAAsBT,EAAK4E,EAAQxH,GACjCsO,EAAe9G,EAAQ,eACH3C,IAAhBjC,EAAI4E,SAAsD3C,IAA7BjC,EAAI4E,EAASxH,IAC5CyO,EAAYjH,EAAQ5E,EAAI1B,QAAUlB,EAAa,GAEnD,CAkBEyS,CAAY7P,EAAK4E,EAAQxH,EAC3B,CAEA,SAASsO,EAAgBjL,EAAO8O,GAC9B,GAAqB,iBAAV9O,EACT,MAAM,IAAIqO,EAAOgB,qBAAqBP,EAAM,SAAU9O,EAE1D,CAEA,SAASoL,EAAapL,EAAOnC,EAAQ6D,GACnC,GAAI6D,KAAK+J,MAAMtP,KAAWA,EAExB,MADAiL,EAAejL,EAAO0B,GAChB,IAAI2M,EAAOc,iBAAiBzN,GAAQ,SAAU,aAAc1B,GAGpE,GAAInC,EAAS,EACX,MAAM,IAAIwQ,EAAOkB,yBAGnB,MAAM,IAAIlB,EAAOc,iBAAiBzN,GAAQ,SACR,MAAMA,EAAO,EAAI,YAAY7D,IAC7BmC,EACpC,CAvFAsO,EAAE,4BACA,SAAUQ,GACR,OAAIA,EACK,GAAGA,gCAGL,gDACT,GAAGxP,YACLgP,EAAE,wBACA,SAAUQ,EAAM1O,GACd,MAAO,QAAQ0O,4DAA+D1O,GAChF,GAAGP,WACLyO,EAAE,oBACA,SAAUzJ,EAAKqK,EAAOM,GACpB,IAAIC,EAAM,iBAAiB5K,sBACvB6K,EAAWF,EAWf,OAVIpL,OAAOuL,UAAUH,IAAUjK,KAAKqK,IAAIJ,GAAS,GAAK,GACpDE,EAAWT,EAAsBrL,OAAO4L,IACd,iBAAVA,IAChBE,EAAW9L,OAAO4L,IACdA,EAAQhG,OAAO,IAAMA,OAAO,KAAOgG,IAAUhG,OAAO,IAAMA,OAAO,QACnEkG,EAAWT,EAAsBS,IAEnCA,GAAY,KAEdD,GAAO,eAAeP,eAAmBQ,IAClCD,CACT,GAAGnQ,YAiEL,MAAMuQ,EAAoB,oBAgB1B,SAASvN,EAAarC,EAAQiF,GAE5B,IAAIS,EADJT,EAAQA,GAAS4K,IAEjB,MAAMjS,EAASoC,EAAOpC,OACtB,IAAIkS,EAAgB,KACpB,MAAM7G,EAAQ,GAEd,IAAK,IAAI/L,EAAI,EAAGA,EAAIU,IAAUV,EAAG,CAI/B,GAHAwI,EAAY1F,EAAOvC,WAAWP,GAG1BwI,EAAY,OAAUA,EAAY,MAAQ,CAE5C,IAAKoK,EAAe,CAElB,GAAIpK,EAAY,MAAQ,EAEjBT,GAAS,IAAM,GAAGgE,EAAMhL,KAAK,IAAM,IAAM,KAC9C,QACF,CAAO,GAAIf,EAAI,IAAMU,EAAQ,EAEtBqH,GAAS,IAAM,GAAGgE,EAAMhL,KAAK,IAAM,IAAM,KAC9C,QACF,CAGA6R,EAAgBpK,EAEhB,QACF,CAGA,GAAIA,EAAY,MAAQ,EACjBT,GAAS,IAAM,GAAGgE,EAAMhL,KAAK,IAAM,IAAM,KAC9C6R,EAAgBpK,EAChB,QACF,CAGAA,EAAkE,OAArDoK,EAAgB,OAAU,GAAKpK,EAAY,MAC1D,MAAWoK,IAEJ7K,GAAS,IAAM,GAAGgE,EAAMhL,KAAK,IAAM,IAAM,KAMhD,GAHA6R,EAAgB,KAGZpK,EAAY,IAAM,CACpB,IAAKT,GAAS,GAAK,EAAG,MACtBgE,EAAMhL,KAAKyH,EACb,MAAO,GAAIA,EAAY,KAAO,CAC5B,IAAKT,GAAS,GAAK,EAAG,MACtBgE,EAAMhL,KACJyH,GAAa,EAAM,IACP,GAAZA,EAAmB,IAEvB,MAAO,GAAIA,EAAY,MAAS,CAC9B,IAAKT,GAAS,GAAK,EAAG,MACtBgE,EAAMhL,KACJyH,GAAa,GAAM,IACnBA,GAAa,EAAM,GAAO,IACd,GAAZA,EAAmB,IAEvB,KAAO,MAAIA,EAAY,SASrB,MAAM,IAAIlH,MAAM,sBARhB,IAAKyG,GAAS,GAAK,EAAG,MACtBgE,EAAMhL,KACJyH,GAAa,GAAO,IACpBA,GAAa,GAAM,GAAO,IAC1BA,GAAa,EAAM,GAAO,IACd,GAAZA,EAAmB,IAIvB,CACF,CAEA,OAAOuD,CACT,CA2BA,SAAS3G,EAAesC,GACtB,OAAO9F,EAAO9B,YAxHhB,SAAsB4H,GAMpB,IAFAA,GAFAA,EAAMA,EAAImL,MAAM,KAAK,IAEX3H,OAAOD,QAAQyH,EAAmB,KAEpChS,OAAS,EAAG,MAAO,GAE3B,KAAOgH,EAAIhH,OAAS,GAAM,GACxBgH,GAAY,IAEd,OAAOA,CACT,CA4G4BoL,CAAYpL,GACxC,CAEA,SAASF,EAAYuL,EAAKC,EAAKhM,EAAQtG,GACrC,IAAIV,EACJ,IAAKA,EAAI,EAAGA,EAAIU,KACTV,EAAIgH,GAAUgM,EAAItS,QAAYV,GAAK+S,EAAIrS,UADpBV,EAExBgT,EAAIhT,EAAIgH,GAAU+L,EAAI/S,GAExB,OAAOA,CACT,CAKA,SAASwD,EAAYU,EAAKK,GACxB,OAAOL,aAAeK,GACZ,MAAPL,GAAkC,MAAnBA,EAAIqN,aAA+C,MAAxBrN,EAAIqN,YAAYI,MACzDzN,EAAIqN,YAAYI,OAASpN,EAAKoN,IACpC,CACA,SAASrN,EAAaJ,GAEpB,OAAOA,GAAQA,CACjB,CAIA,MAAM4H,EAAsB,WAC1B,MAAMmH,EAAW,mBACXC,EAAQ,IAAI9R,MAAM,KACxB,IAAK,IAAIpB,EAAI,EAAGA,EAAI,KAAMA,EAAG,CAC3B,MAAMmT,EAAU,GAAJnT,EACZ,IAAK,IAAI8G,EAAI,EAAGA,EAAI,KAAMA,EACxBoM,EAAMC,EAAMrM,GAAKmM,EAASjT,GAAKiT,EAASnM,EAE5C,CACA,OAAOoM,CACR,CAV2B,GAa5B,SAASrF,EAAoBuF,GAC3B,MAAyB,oBAAX/G,OAAyBgH,EAAyBD,CAClE,CAEA,SAASC,IACP,MAAM,IAAI/R,MAAM,uBAClB,8BCvjEA,MAAMgS,EAAY,EAAQ,KACpBC,EAAY,EAAQ,KACpBC,EAAa,EAAQ,KAE3BpU,EAAOD,QAAU,CACfoU,UAAWA,EACXE,aAAcH,EACdE,WAAYA,6BCPd,MAAME,EAAgB,gLAEhBC,EAAa,IAAMD,EAAgB,KADxBA,EACE,iDACbE,EAAY,IAAIC,OAAO,IAAMF,EAAa,KAuBhDxU,EAAQ2U,QAAU,SAASC,GACzB,YAAoB,IAANA,CAChB,EAEA5U,EAAQ6U,cAAgB,SAAS9P,GAC/B,OAAmC,IAA5B7B,OAAO4R,KAAK/P,GAAKxD,MAC1B,EAOAvB,EAAQ+U,MAAQ,SAAS/I,EAAQhB,EAAGgK,GAClC,GAAIhK,EAAG,CACL,MAAM8J,EAAO5R,OAAO4R,KAAK9J,GACnB9J,EAAM4T,EAAKvT,OACjB,IAAK,IAAIV,EAAI,EAAGA,EAAIK,EAAKL,IAErBmL,EAAO8I,EAAKjU,IADI,WAAdmU,EACgB,CAAEhK,EAAE8J,EAAKjU,KAETmK,EAAE8J,EAAKjU,GAG/B,CACF,EAKAb,EAAQiV,SAAW,SAASL,GAC1B,OAAI5U,EAAQ2U,QAAQC,GACXA,EAEA,EAEX,EAKA5U,EAAQkV,OA9CO,SAASvR,GAEtB,QAAQ,MADM8Q,EAAUU,KAAKxR,GAE/B,EA4CA3D,EAAQoV,cA/Dc,SAASzR,EAAQ0R,GACrC,MAAMC,EAAU,GAChB,IAAIC,EAAQF,EAAMF,KAAKxR,GACvB,KAAO4R,GAAO,CACZ,MAAMC,EAAa,GACnBA,EAAWC,WAAaJ,EAAMK,UAAYH,EAAM,GAAGhU,OACnD,MAAML,EAAMqU,EAAMhU,OAClB,IAAK,IAAIoU,EAAQ,EAAGA,EAAQzU,EAAKyU,IAC/BH,EAAW5T,KAAK2T,EAAMI,IAExBL,EAAQ1T,KAAK4T,GACbD,EAAQF,EAAMF,KAAKxR,EACrB,CACA,OAAO2R,CACT,EAkDAtV,EAAQwU,WAAaA,8BCrErB,MAAMoB,EAAO,EAAQ,KAEfC,EAAiB,CACrBC,wBAAwB,EACxBC,aAAc,IAwLhB,SAASC,EAAaC,GACpB,MAAgB,MAATA,GAAyB,OAATA,GAA0B,OAATA,GAA2B,OAATA,CAC5D,CAMA,SAASC,EAAOC,EAAStV,GACvB,MAAMwB,EAAQxB,EACd,KAAOA,EAAIsV,EAAQ5U,OAAQV,IACzB,GAAkB,KAAdsV,EAAQtV,IAA2B,KAAdsV,EAAQtV,QAAjC,CAEE,MAAMuV,EAAUD,EAAQhO,OAAO9F,EAAOxB,EAAIwB,GAC1C,GAAIxB,EAAI,GAAiB,QAAZuV,EACX,OAAOC,EAAe,aAAc,6DAA8DC,EAAyBH,EAAStV,IAC/H,GAAkB,KAAdsV,EAAQtV,IAA+B,KAAlBsV,EAAQtV,EAAI,GAAW,CAErDA,IACA,KACF,CAGF,CAEF,OAAOA,CACT,CAEA,SAAS0V,EAAoBJ,EAAStV,GACpC,GAAIsV,EAAQ5U,OAASV,EAAI,GAAwB,MAAnBsV,EAAQtV,EAAI,IAAiC,MAAnBsV,EAAQtV,EAAI,IAElE,IAAKA,GAAK,EAAGA,EAAIsV,EAAQ5U,OAAQV,IAC/B,GAAmB,MAAfsV,EAAQtV,IAAiC,MAAnBsV,EAAQtV,EAAI,IAAiC,MAAnBsV,EAAQtV,EAAI,GAAY,CAC1EA,GAAK,EACL,KACF,OAEG,GACLsV,EAAQ5U,OAASV,EAAI,GACF,MAAnBsV,EAAQtV,EAAI,IACO,MAAnBsV,EAAQtV,EAAI,IACO,MAAnBsV,EAAQtV,EAAI,IACO,MAAnBsV,EAAQtV,EAAI,IACO,MAAnBsV,EAAQtV,EAAI,IACO,MAAnBsV,EAAQtV,EAAI,IACO,MAAnBsV,EAAQtV,EAAI,GACZ,CACA,IAAI2V,EAAqB,EACzB,IAAK3V,GAAK,EAAGA,EAAIsV,EAAQ5U,OAAQV,IAC/B,GAAmB,MAAfsV,EAAQtV,GACV2V,SACK,GAAmB,MAAfL,EAAQtV,KACjB2V,IAC2B,IAAvBA,GACF,KAIR,MAAO,GACLL,EAAQ5U,OAASV,EAAI,GACF,MAAnBsV,EAAQtV,EAAI,IACO,MAAnBsV,EAAQtV,EAAI,IACO,MAAnBsV,EAAQtV,EAAI,IACO,MAAnBsV,EAAQtV,EAAI,IACO,MAAnBsV,EAAQtV,EAAI,IACO,MAAnBsV,EAAQtV,EAAI,IACO,MAAnBsV,EAAQtV,EAAI,GAEZ,IAAKA,GAAK,EAAGA,EAAIsV,EAAQ5U,OAAQV,IAC/B,GAAmB,MAAfsV,EAAQtV,IAAiC,MAAnBsV,EAAQtV,EAAI,IAAiC,MAAnBsV,EAAQtV,EAAI,GAAY,CAC1EA,GAAK,EACL,KACF,CAIJ,OAAOA,CACT,CAjQAb,EAAQyW,SAAW,SAAUN,EAASO,GACpCA,EAAUxT,OAAOyT,OAAO,CAAC,EAAGd,EAAgBa,GAK5C,MAAME,EAAO,GACb,IAAIC,GAAW,EAGXC,GAAc,EAEC,WAAfX,EAAQ,KAEVA,EAAUA,EAAQhO,OAAO,IAG3B,IAAK,IAAItH,EAAI,EAAGA,EAAIsV,EAAQ5U,OAAQV,IAElC,GAAmB,MAAfsV,EAAQtV,IAA+B,MAAjBsV,EAAQtV,EAAE,IAGlC,GAFAA,GAAG,EACHA,EAAIqV,EAAOC,EAAQtV,GACfA,EAAEkW,IAAK,OAAOlW,MACd,IAAmB,MAAfsV,EAAQtV,GAwIX,CACL,GAAKmV,EAAaG,EAAQtV,IACxB,SAEF,OAAOwV,EAAe,cAAe,SAASF,EAAQtV,GAAG,qBAAsByV,EAAyBH,EAAStV,GACnH,CA7I8B,CAG5B,IAAImW,EAAcnW,EAGlB,GAFAA,IAEmB,MAAfsV,EAAQtV,GAAY,CACtBA,EAAI0V,EAAoBJ,EAAStV,GACjC,QACF,CAAO,CACL,IAAIoW,GAAa,EACE,MAAfd,EAAQtV,KAEVoW,GAAa,EACbpW,KAGF,IAAIqW,EAAU,GACd,KAAOrW,EAAIsV,EAAQ5U,QACF,MAAf4U,EAAQtV,IACO,MAAfsV,EAAQtV,IACO,OAAfsV,EAAQtV,IACO,OAAfsV,EAAQtV,IACO,OAAfsV,EAAQtV,GAAaA,IAErBqW,GAAWf,EAAQtV,GAWrB,GATAqW,EAAUA,EAAQnL,OAGkB,MAAhCmL,EAAQA,EAAQ3V,OAAS,KAE3B2V,EAAUA,EAAQC,UAAU,EAAGD,EAAQ3V,OAAS,GAEhDV,KAiVeuV,EA/UIc,GAgVpBtB,EAAKV,OAAOkB,GAhVkB,CAC7B,IAAIjD,EAMJ,OAJEA,EAD4B,IAA1B+D,EAAQnL,OAAOxK,OACX,2BAEA,QAAQ2V,EAAQ,wBAEjBb,EAAe,aAAclD,EAAKmD,EAAyBH,EAAStV,GAC7E,CAEA,MAAMuW,EAASC,EAAiBlB,EAAStV,GACzC,IAAe,IAAXuW,EACF,OAAOf,EAAe,cAAe,mBAAmBa,EAAQ,qBAAsBZ,EAAyBH,EAAStV,IAE1H,IAAIyW,EAAUF,EAAO1T,MAGrB,GAFA7C,EAAIuW,EAAOzB,MAEyB,MAAhC2B,EAAQA,EAAQ/V,OAAS,GAAY,CAEvC,MAAMgW,EAAe1W,EAAIyW,EAAQ/V,OACjC+V,EAAUA,EAAQH,UAAU,EAAGG,EAAQ/V,OAAS,GAChD,MAAMiW,EAAUC,EAAwBH,EAASZ,GACjD,IAAgB,IAAZc,EAOF,OAAOnB,EAAemB,EAAQT,IAAI7U,KAAMsV,EAAQT,IAAI5D,IAAKmD,EAAyBH,EAASoB,EAAeC,EAAQT,IAAIW,OANtHb,GAAW,CAQf,MAAO,GAAII,EAAY,CACrB,IAAKG,EAAOO,UACV,OAAOtB,EAAe,aAAc,gBAAgBa,EAAQ,iCAAkCZ,EAAyBH,EAAStV,IAC3H,GAAIyW,EAAQvL,OAAOxK,OAAS,EACjC,OAAO8U,EAAe,aAAc,gBAAgBa,EAAQ,+CAAgDZ,EAAyBH,EAASa,IACzI,CACL,MAAMY,EAAMhB,EAAKiB,MACjB,GAAIX,IAAYU,EAAIV,QAAS,CAC3B,IAAIY,EAAUxB,EAAyBH,EAASyB,EAAIZ,aACpD,OAAOX,EAAe,aACpB,yBAAyBuB,EAAIV,QAAQ,qBAAqBY,EAAQJ,KAAK,SAASI,EAAQC,IAAI,6BAA6Bb,EAAQ,KACjIZ,EAAyBH,EAASa,GACtC,CAGmB,GAAfJ,EAAKrV,SACPuV,GAAc,EAElB,CACF,KAAO,CACL,MAAMU,EAAUC,EAAwBH,EAASZ,GACjD,IAAgB,IAAZc,EAIF,OAAOnB,EAAemB,EAAQT,IAAI7U,KAAMsV,EAAQT,IAAI5D,IAAKmD,EAAyBH,EAAStV,EAAIyW,EAAQ/V,OAASiW,EAAQT,IAAIW,OAI9H,IAAoB,IAAhBZ,EACF,OAAOT,EAAe,aAAc,sCAAuCC,EAAyBH,EAAStV,KAC1D,IAA3C6V,EAAQX,aAAa3T,QAAQ8U,IAGrCN,EAAKhV,KAAK,CAACsV,UAASF,gBAEtBH,GAAW,CACb,CAIA,IAAKhW,IAAKA,EAAIsV,EAAQ5U,OAAQV,IAC5B,GAAmB,MAAfsV,EAAQtV,GAAY,CACtB,GAAuB,MAAnBsV,EAAQtV,EAAI,GAAY,CAE1BA,IACAA,EAAI0V,EAAoBJ,EAAStV,GACjC,QACF,CAAO,GAAqB,MAAjBsV,EAAQtV,EAAE,GAInB,MAFA,GADAA,EAAIqV,EAAOC,IAAWtV,GAClBA,EAAEkW,IAAK,OAAOlW,CAItB,MAAO,GAAmB,MAAfsV,EAAQtV,GAAY,CAC7B,MAAMmX,EAAWC,EAAkB9B,EAAStV,GAC5C,IAAiB,GAAbmX,EACF,OAAO3B,EAAe,cAAe,4BAA6BC,EAAyBH,EAAStV,IACtGA,EAAImX,CACN,MACE,IAAoB,IAAhBlB,IAAyBd,EAAaG,EAAQtV,IAChD,OAAOwV,EAAe,aAAc,wBAAyBC,EAAyBH,EAAStV,IAIlF,MAAfsV,EAAQtV,IACVA,GAEJ,CACF,CAKA,CAsOJ,IAAyBuV,EAnOvB,OAAKS,EAEoB,GAAfD,EAAKrV,OACJ8U,EAAe,aAAc,iBAAiBO,EAAK,GAAGM,QAAQ,KAAMZ,EAAyBH,EAASS,EAAK,GAAGI,gBAC/GJ,EAAKrV,OAAS,IACb8U,EAAe,aAAc,YAChC6B,KAAKC,UAAUvB,EAAKwB,KAAIC,GAAKA,EAAEnB,UAAU,KAAM,GAAGpL,QAAQ,SAAU,IACpE,WAAY,CAAC4L,KAAM,EAAGK,IAAK,IAN1B1B,EAAe,aAAc,sBAAuB,EAU/D,EAiFA,MAAMiC,EAAc,IACdC,EAAc,IAOpB,SAASlB,EAAiBlB,EAAStV,GACjC,IAAIyW,EAAU,GACVkB,EAAY,GACZb,GAAY,EAChB,KAAO9W,EAAIsV,EAAQ5U,OAAQV,IAAK,CAC9B,GAAIsV,EAAQtV,KAAOyX,GAAenC,EAAQtV,KAAO0X,EAC7B,KAAdC,EACFA,EAAYrC,EAAQtV,GACX2X,IAAcrC,EAAQtV,KAG/B2X,EAAY,SAET,GAAmB,MAAfrC,EAAQtV,IACC,KAAd2X,EAAkB,CACpBb,GAAY,EACZ,KACF,CAEFL,GAAWnB,EAAQtV,EACrB,CACA,MAAkB,KAAd2X,GAIG,CACL9U,MAAO4T,EACP3B,MAAO9U,EACP8W,UAAWA,EAEf,CAKA,MAAMc,EAAoB,IAAI/D,OAAO,0DAA2D,KAIhG,SAAS+C,EAAwBH,EAASZ,GAKxC,MAAMpB,EAAUM,EAAKR,cAAckC,EAASmB,GACtCC,EAAY,CAAC,EAEnB,IAAK,IAAI7X,EAAI,EAAGA,EAAIyU,EAAQ/T,OAAQV,IAAK,CACvC,GAA6B,IAAzByU,EAAQzU,GAAG,GAAGU,OAEhB,OAAO8U,EAAe,cAAe,cAAcf,EAAQzU,GAAG,GAAG,8BAA+B8X,EAAqBrD,EAAQzU,KACxH,QAAsBqE,IAAlBoQ,EAAQzU,GAAG,SAAsCqE,IAAlBoQ,EAAQzU,GAAG,GACnD,OAAOwV,EAAe,cAAe,cAAcf,EAAQzU,GAAG,GAAG,sBAAuB8X,EAAqBrD,EAAQzU,KAChH,QAAsBqE,IAAlBoQ,EAAQzU,GAAG,KAAqB6V,EAAQZ,uBAEjD,OAAOO,EAAe,cAAe,sBAAsBf,EAAQzU,GAAG,GAAG,oBAAqB8X,EAAqBrD,EAAQzU,KAK7H,MAAM+X,EAAWtD,EAAQzU,GAAG,GAC5B,IAAKgY,EAAiBD,GACpB,OAAOvC,EAAe,cAAe,cAAcuC,EAAS,wBAAyBD,EAAqBrD,EAAQzU,KAEpH,GAAK6X,EAAUI,eAAeF,GAI5B,OAAOvC,EAAe,cAAe,cAAcuC,EAAS,iBAAkBD,EAAqBrD,EAAQzU,KAF3G6X,EAAUE,GAAY,CAI1B,CAEA,OAAO,CACT,CAiBA,SAASX,EAAkB9B,EAAStV,GAGlC,GAAmB,MAAfsV,IADJtV,GAEE,OAAQ,EACV,GAAmB,MAAfsV,EAAQtV,GAEV,OAtBJ,SAAiCsV,EAAStV,GACxC,IAAIkY,EAAK,KAKT,IAJmB,MAAf5C,EAAQtV,KACVA,IACAkY,EAAK,cAEAlY,EAAIsV,EAAQ5U,OAAQV,IAAK,CAC9B,GAAmB,MAAfsV,EAAQtV,GACV,OAAOA,EACT,IAAKsV,EAAQtV,GAAG0U,MAAMwD,GACpB,KACJ,CACA,OAAQ,CACV,CASWC,CAAwB7C,IAD/BtV,GAGF,IAAIoY,EAAQ,EACZ,KAAOpY,EAAIsV,EAAQ5U,OAAQV,IAAKoY,IAC9B,KAAI9C,EAAQtV,GAAG0U,MAAM,OAAS0D,EAAQ,IAAtC,CAEA,GAAmB,MAAf9C,EAAQtV,GACV,MACF,OAAQ,CAHE,CAKZ,OAAOA,CACT,CAEA,SAASwV,EAAenU,EAAMwQ,EAASwG,GACrC,MAAO,CACLnC,IAAK,CACH7U,KAAMA,EACNiR,IAAKT,EACLgF,KAAMwB,EAAWxB,MAAQwB,EACzBnB,IAAKmB,EAAWnB,KAGtB,CAEA,SAASc,EAAiBD,GACxB,OAAOhD,EAAKV,OAAO0D,EACrB,CASA,SAAStC,EAAyBH,EAASR,GACzC,MAAMwD,EAAQhD,EAAQgB,UAAU,EAAGxB,GAAOjC,MAAM,SAChD,MAAO,CACLgE,KAAMyB,EAAM5X,OAGZwW,IAAKoB,EAAMA,EAAM5X,OAAS,GAAGA,OAAS,EAE1C,CAGA,SAASoX,EAAqBpD,GAC5B,OAAOA,EAAME,WAAaF,EAAM,GAAGhU,MACrC,8BCpaA,MAAM6X,EAAqB,EAAQ,KAE7BvD,EAAiB,CACrBwD,oBAAqB,KACrBC,qBAAqB,EACrBC,aAAc,QACdC,kBAAkB,EAClBC,eAAe,EACfC,QAAQ,EACRC,SAAU,KACVC,mBAAmB,EACnBC,sBAAsB,EACtBC,2BAA2B,EAC3BC,kBAAmB,SAASC,EAAKhP,GAC/B,OAAOA,CACT,EACAiP,wBAAyB,SAASrB,EAAU5N,GAC1C,OAAOA,CACT,EACAkP,eAAe,EACfC,iBAAiB,EACjBpE,aAAc,GACdqE,SAAU,CACR,CAAE/E,MAAO,IAAIX,OAAO,IAAK,KAAM5N,IAAK,SACpC,CAAEuO,MAAO,IAAIX,OAAO,IAAK,KAAM5N,IAAK,QACpC,CAAEuO,MAAO,IAAIX,OAAO,IAAK,KAAM5N,IAAK,QACpC,CAAEuO,MAAO,IAAIX,OAAO,IAAM,KAAM5N,IAAK,UACrC,CAAEuO,MAAO,IAAIX,OAAO,IAAM,KAAM5N,IAAK,WAEvCuT,iBAAiB,EACjBC,UAAW,IAKb,SAASC,EAAQ7D,GACftW,KAAKsW,QAAUxT,OAAOyT,OAAO,CAAC,EAAGd,EAAgBa,GAC7CtW,KAAKsW,QAAQ8C,kBAAoBpZ,KAAKsW,QAAQ4C,oBAChDlZ,KAAKoa,YAAc,WACjB,OAAO,CACT,GAEApa,KAAKqa,cAAgBra,KAAKsW,QAAQ2C,oBAAoB9X,OACtDnB,KAAKoa,YAAcA,GAGrBpa,KAAKsa,qBAAuBA,EAExBta,KAAKsW,QAAQgD,QACftZ,KAAKua,UAAYA,EACjBva,KAAKwa,WAAa,MAClBxa,KAAKya,QAAU,OAEfza,KAAKua,UAAY,WACf,MAAO,EACT,EACAva,KAAKwa,WAAa,IAClBxa,KAAKya,QAAU,IAGbza,KAAKsW,QAAQkD,mBACfxZ,KAAK0a,cAAgBC,EACrB3a,KAAK4a,aAAeC,IAEpB7a,KAAK0a,cAAgBI,EACrB9a,KAAK4a,aAAeG,GAGtB/a,KAAK8a,iBAAmBA,EACxB9a,KAAK+a,gBAAkBA,EAEvB/a,KAAKgb,qBAAuBA,EAC5Bhb,KAAKib,iBAAmBA,CAC1B,CA0EA,SAASA,EAAiBzC,EAAU9R,GAGlC,OAFAA,EAAM1G,KAAKsW,QAAQuD,wBAAwBrB,EAAU,GAAK9R,GAC1DA,EAAM1G,KAAKgb,qBAAqBtU,GAC5B1G,KAAKsW,QAAQoD,2BAAqC,SAARhT,EACrC,IAAM8R,EACD,IAAMA,EAAW,KAAO9R,EAAM,GAC9C,CAEA,SAAS4T,EAAsBY,EAAQtB,EAAKuB,GAC1C,MAAMnE,EAAShX,KAAKob,IAAIF,EAAQC,EAAQ,GACxC,YAA0CrW,IAAtCoW,EAAOlb,KAAKsW,QAAQ6C,eAA8D,IAA/BrW,OAAO4R,KAAKwG,GAAQ/Z,OAClEnB,KAAK0a,cAAcQ,EAAOlb,KAAKsW,QAAQ6C,cAAeS,EAAK5C,EAAOE,QAASiE,GAE3Enb,KAAK4a,aAAa5D,EAAOtQ,IAAKkT,EAAK5C,EAAOE,QAASiE,EAE9D,CAEA,SAASJ,EAAgBrU,EAAKkT,EAAK1C,EAASiE,GAC1C,IAAIE,EAAY,KAAOzB,EAAM5Z,KAAKwa,WAC9Bc,EAAgB,GAOpB,MALc,MAAX1B,EAAI,KACL0B,EAAgB,IAChBD,EAAY,IAGVnE,IAAiC,IAAtBxQ,EAAI1E,QAAQ,KAChBhC,KAAKua,UAAUY,GAAS,IAAOvB,EAAM1C,EAAUoE,EAAgB,IAAM5U,EAAM2U,GAC1C,IAAjCrb,KAAKsW,QAAQyD,iBAA6BH,IAAQ5Z,KAAKsW,QAAQyD,iBAA4C,IAAzBuB,EAAcna,OAClGnB,KAAKua,UAAUY,GAAS,UAAOzU,UAAW1G,KAAKya,QAGpDza,KAAKua,UAAUY,GAAS,IAAMvB,EAAM1C,EAAUoE,EAAgBtb,KAAKwa,WACnE9T,EACA1G,KAAKua,UAAUY,GAASE,CAE9B,CAEA,SAASR,EAAkBnU,EAAKkT,EAAK1C,EAASiE,GAC5C,MAAY,KAARzU,EACK1G,KAAK+a,gBAAgBrU,EAAKkT,EAAK1C,EAASiE,GAEjC,MAAXvB,EAAI,GAAoB5Z,KAAKua,UAAUY,GAAS,IAAMvB,EAAM1C,EAAS,IAAMlX,KAAKwa,WACtExa,KAAKua,UAAUY,GAAS,IAAMvB,EAAM1C,EAAU,IAAMlX,KAAKwa,UAE1E,CAEA,SAASM,EAAiBpU,EAAKkT,EAAK1C,EAASiE,GAC3C,IAAmC,IAA/Bnb,KAAKsW,QAAQ+C,eAA2BO,IAAQ5Z,KAAKsW,QAAQ+C,cAC/D,OAAOrZ,KAAKua,UAAUY,GAAS,YAAYzU,OAAY1G,KAAKya,QACxD,IAAqC,IAAjCza,KAAKsW,QAAQyD,iBAA6BH,IAAQ5Z,KAAKsW,QAAQyD,gBACvE,OAAO/Z,KAAKua,UAAUY,GAAS,UAAOzU,UAAY1G,KAAKya,QACpD,CACH,IAAIc,EAAYvb,KAAKsW,QAAQqD,kBAAkBC,EAAKlT,GAGpD,OAFA6U,EAAYvb,KAAKgb,qBAAqBO,GAEpB,KAAdA,IAAgE,IAA5Cvb,KAAKsW,QAAQX,aAAa3T,QAAQ4X,GACrD5Z,KAAKsW,QAAQmD,qBACPzZ,KAAKua,UAAUY,GAAS,IAAMvB,EAAM5Z,KAAKwa,WAEzCxa,KAAKua,UAAUY,GAAS,IAAMvB,EAAM,IAAM5Z,KAAKwa,WAItDxa,KAAKua,UAAUY,GAAS,IAAMvB,EAAM1C,EAAU,IAC7CqE,EACD,KAAO3B,EAAM5Z,KAAKwa,UAGxB,CACF,CAEA,SAASQ,EAAqBO,GAC5B,GAAGA,GAAaA,EAAUpa,OAAS,GAAKnB,KAAKsW,QAAQ2D,gBACnD,IAAK,IAAIxZ,EAAE,EAAGA,EAAET,KAAKsW,QAAQ0D,SAAS7Y,OAAQV,IAAK,CACjD,MAAM+a,EAASxb,KAAKsW,QAAQ0D,SAASvZ,GACrC8a,EAAYA,EAAU7P,QAAQ8P,EAAOvG,MAAOuG,EAAO9U,IACrD,CAEF,OAAO6U,CACT,CAEA,SAASZ,EAAmBjU,EAAKkT,EAAK1C,EAASiE,GAC7C,MAAY,KAARzU,IAA0D,IAA5C1G,KAAKsW,QAAQX,aAAa3T,QAAQ4X,GAC/C5Z,KAAKsW,QAAQmD,qBACPzZ,KAAKua,UAAUY,GAAS,IAAMvB,EAAM5Z,KAAKwa,WAEzCxa,KAAKua,UAAUY,GAAS,IAAMvB,EAAM,IAAM5Z,KAAKwa,WAExC,KAAR9T,EACD1G,KAAK8a,iBAAiBpU,EAAKkT,EAAK1C,EAASiE,GAElC,MAAXvB,EAAI,GAAoB5Z,KAAKua,UAAUY,GAAS,IAAMvB,EAAM1C,EAAS,IAAMlX,KAAKwa,WACtExa,KAAKua,UAAUY,GAAS,IAAMvB,EAAM1C,EAAU,IAAMlX,KAAKwa,UAE1E,CAEA,SAASD,EAAUY,GACjB,OAAOnb,KAAKsW,QAAQiD,SAASkC,OAAON,EACtC,CAEA,SAASf,EAAYhI,GACnB,QAAIA,EAAKsJ,WAAW1b,KAAKsW,QAAQ2C,sBACxB7G,EAAKrK,OAAO/H,KAAKqa,cAI5B,CAnLAF,EAAQnX,UAAU2Y,MAAQ,SAASC,GACjC,OAAG5b,KAAKsW,QAAQwD,cACPd,EAAmB4C,EAAM5b,KAAKsW,UAElCzU,MAAMoD,QAAQ2W,IAAS5b,KAAKsW,QAAQuF,eAAiB7b,KAAKsW,QAAQuF,cAAc1a,OAAS,IAC1Fya,EAAO,CACL,CAAC5b,KAAKsW,QAAQuF,eAAiBD,IAG5B5b,KAAKob,IAAIQ,EAAM,GAAGlV,IAE7B,EAEAyT,EAAQnX,UAAUoY,IAAM,SAASQ,EAAMT,GACrC,IAAIjE,EAAU,GACVxQ,EAAM,GACV,IAAK,IAAIkT,KAAOgC,EACd,QAAyB,IAAdA,EAAKhC,SAET,GAAkB,OAAdgC,EAAKhC,GACA,MAAXA,EAAI,GAAYlT,GAAO1G,KAAKua,UAAUY,GAAS,IAAMvB,EAAM,IAAM5Z,KAAKwa,WACpE9T,GAAO1G,KAAKua,UAAUY,GAAS,IAAMvB,EAAM,IAAM5Z,KAAKwa,gBAEtD,GAAIoB,EAAKhC,aAAgBkC,KAC9BpV,GAAO1G,KAAK0a,cAAckB,EAAKhC,GAAMA,EAAK,GAAIuB,QACzC,GAAyB,iBAAdS,EAAKhC,GAAmB,CAExC,MAAMmC,EAAO/b,KAAKoa,YAAYR,GAC9B,GAAImC,EACF7E,GAAWlX,KAAKib,iBAAiBc,EAAM,GAAKH,EAAKhC,SAGjD,GAAIA,IAAQ5Z,KAAKsW,QAAQ6C,aAAc,CACrC,IAAI6C,EAAShc,KAAKsW,QAAQqD,kBAAkBC,EAAK,GAAKgC,EAAKhC,IAC3DlT,GAAO1G,KAAKgb,qBAAqBgB,EACnC,MACEtV,GAAO1G,KAAK0a,cAAckB,EAAKhC,GAAMA,EAAK,GAAIuB,EAGpD,MAAO,GAAItZ,MAAMoD,QAAQ2W,EAAKhC,IAAO,CAEnC,MAAMqC,EAASL,EAAKhC,GAAKzY,OACzB,IAAK,IAAIoG,EAAI,EAAGA,EAAI0U,EAAQ1U,IAAK,CAC/B,MAAM2U,EAAON,EAAKhC,GAAKrS,QACH,IAAT2U,IAES,OAATA,EACK,MAAXtC,EAAI,GAAYlT,GAAO1G,KAAKua,UAAUY,GAAS,IAAMvB,EAAM,IAAM5Z,KAAKwa,WACpE9T,GAAO1G,KAAKua,UAAUY,GAAS,IAAMvB,EAAM,IAAM5Z,KAAKwa,WAG3D9T,GADyB,iBAATwV,EACTlc,KAAKsa,qBAAqB4B,EAAMtC,EAAKuB,GAErCnb,KAAK0a,cAAcwB,EAAMtC,EAAK,GAAIuB,GAE7C,CACF,MAEE,GAAInb,KAAKsW,QAAQ4C,qBAAuBU,IAAQ5Z,KAAKsW,QAAQ4C,oBAAqB,CAChF,MAAMiD,EAAKrZ,OAAO4R,KAAKkH,EAAKhC,IACtBwC,EAAID,EAAGhb,OACb,IAAK,IAAIoG,EAAI,EAAGA,EAAI6U,EAAG7U,IACrB2P,GAAWlX,KAAKib,iBAAiBkB,EAAG5U,GAAI,GAAKqU,EAAKhC,GAAKuC,EAAG5U,IAE9D,MACEb,GAAO1G,KAAKsa,qBAAqBsB,EAAKhC,GAAMA,EAAKuB,GAIvD,MAAO,CAACjE,QAASA,EAASxQ,IAAKA,EACjC,EA+GA7G,EAAOD,QAAUua,WClPjB,SAASkC,EAAS3b,EAAK4V,EAASgG,EAAOC,GACnC,IAAIC,EAAS,GACTC,GAAuB,EAE3B,IAAK,IAAIhc,EAAI,EAAGA,EAAIC,EAAIS,OAAQV,IAAK,CACjC,MAAMic,EAAShc,EAAID,GACbqW,EAAU6F,EAASD,GACzB,IAAIE,EAAW,GAIf,GAHwBA,EAAH,IAAjBN,EAAMnb,OAAyB2V,EACnB,GAAGwF,KAASxF,IAExBA,IAAYR,EAAQ6C,aAAc,CAClC,IAAI0D,EAAUH,EAAO5F,GAChBgG,EAAWF,EAAUtG,KACtBuG,EAAUvG,EAAQqD,kBAAkB7C,EAAS+F,GAC7CA,EAAU7B,EAAqB6B,EAASvG,IAExCmG,IACAD,GAAUD,GAEdC,GAAUK,EACVJ,GAAuB,EACvB,QACJ,CAAO,GAAI3F,IAAYR,EAAQ+C,cAAe,CACtCoD,IACAD,GAAUD,GAEdC,GAAU,YAAYE,EAAO5F,GAAS,GAAGR,EAAQ6C,mBACjDsD,GAAuB,EACvB,QACJ,CAAO,GAAI3F,IAAYR,EAAQyD,gBAAiB,CAC5CyC,GAAUD,EAAc,UAAOG,EAAO5F,GAAS,GAAGR,EAAQ6C,sBAC1DsD,GAAuB,EACvB,QACJ,CAAO,GAAmB,MAAf3F,EAAQ,GAAY,CAC3B,MAAMiG,EAASC,EAAYN,EAAO,MAAOpG,GACnC2G,EAAsB,SAAZnG,EAAqB,GAAKyF,EAC1C,IAAIW,EAAiBR,EAAO5F,GAAS,GAAGR,EAAQ6C,cAChD+D,EAA2C,IAA1BA,EAAe/b,OAAe,IAAM+b,EAAiB,GACtEV,GAAUS,EAAU,IAAInG,IAAUoG,IAAiBH,MACnDN,GAAuB,EACvB,QACJ,CACA,IAAIU,EAAgBZ,EACE,KAAlBY,IACAA,GAAiB7G,EAAQiD,UAE7B,MACM6D,EAAWb,EAAc,IAAIzF,IADpBkG,EAAYN,EAAO,MAAOpG,KAEnC+G,EAAWhB,EAASK,EAAO5F,GAAUR,EAASsG,EAAUO,IACf,IAA3C7G,EAAQX,aAAa3T,QAAQ8U,GACzBR,EAAQmD,qBAAsB+C,GAAUY,EAAW,IAClDZ,GAAUY,EAAW,KACjBC,GAAgC,IAApBA,EAASlc,SAAiBmV,EAAQkD,kBAEhD6D,GAAYA,EAASC,SAAS,KACrCd,GAAUY,EAAW,IAAIC,IAAWd,MAAgBzF,MAEpD0F,GAAUY,EAAW,IACjBC,GAA4B,KAAhBd,IAAuBc,EAASpR,SAAS,OAASoR,EAASpR,SAAS,OAChFuQ,GAAUD,EAAcjG,EAAQiD,SAAW8D,EAAWd,EAEtDC,GAAUa,EAEdb,GAAU,KAAK1F,MAVf0F,GAAUY,EAAW,KAYzBX,GAAuB,CAC3B,CAEA,OAAOD,CACX,CAEA,SAASG,EAAShY,GACd,MAAM+P,EAAO5R,OAAO4R,KAAK/P,GACzB,IAAK,IAAIlE,EAAI,EAAGA,EAAIiU,EAAKvT,OAAQV,IAAK,CAClC,MAAMmZ,EAAMlF,EAAKjU,GACjB,GAAY,OAARmZ,EAAc,OAAOA,CAC7B,CACJ,CAEA,SAASoD,EAAYO,EAASjH,GAC1B,IAAIY,EAAU,GACd,GAAIqG,IAAYjH,EAAQ8C,iBACpB,IAAK,IAAI2C,KAAQwB,EAAS,CACtB,IAAIC,EAAUlH,EAAQuD,wBAAwBkC,EAAMwB,EAAQxB,IAC5DyB,EAAUxC,EAAqBwC,EAASlH,IACxB,IAAZkH,GAAoBlH,EAAQoD,0BAC5BxC,GAAW,IAAI6E,EAAKhU,OAAOuO,EAAQ2C,oBAAoB9X,UAEvD+V,GAAW,IAAI6E,EAAKhU,OAAOuO,EAAQ2C,oBAAoB9X,YAAYqc,IAE3E,CAEJ,OAAOtG,CACX,CAEA,SAAS4F,EAAWR,EAAOhG,GAEvB,IAAIQ,GADJwF,EAAQA,EAAMvU,OAAO,EAAGuU,EAAMnb,OAASmV,EAAQ6C,aAAahY,OAAS,IACjD4G,OAAOuU,EAAMxV,YAAY,KAAO,GACpD,IAAK,IAAIyO,KAASe,EAAQ4D,UACtB,GAAI5D,EAAQ4D,UAAU3E,KAAW+G,GAAShG,EAAQ4D,UAAU3E,KAAW,KAAOuB,EAAS,OAAO,EAElG,OAAO,CACX,CAEA,SAASkE,EAAqBO,EAAWjF,GACrC,GAAIiF,GAAaA,EAAUpa,OAAS,GAAKmV,EAAQ2D,gBAC7C,IAAK,IAAIxZ,EAAI,EAAGA,EAAI6V,EAAQ0D,SAAS7Y,OAAQV,IAAK,CAC9C,MAAM+a,EAASlF,EAAQ0D,SAASvZ,GAChC8a,EAAYA,EAAU7P,QAAQ8P,EAAOvG,MAAOuG,EAAO9U,IACvD,CAEJ,OAAO6U,CACX,CACA1b,EAAOD,QA1HP,SAAe6d,EAAQnH,GACnB,IAAIiG,EAAc,GAIlB,OAHIjG,EAAQgD,QAAUhD,EAAQiD,SAASpY,OAAS,IAC5Cob,EAXI,MAaDF,EAASoB,EAAQnH,EAAS,GAAIiG,EACzC,WC4FA,MAAMmB,EAAcpJ,OAAO,4CAC3B,SAASqJ,EAAeC,EAAK5D,GACzB,MAAM7E,EAAQuI,EAAY3I,KAAK6I,GAC5BzI,IACC6E,EAAU7E,EAAM,IAAO,CACnB0I,KAAOvJ,OAAQ,IAAIa,EAAM,MAAM,KAC/BzO,IAAKyO,EAAM,IAGvB,CACAtV,EAAOD,QAnHP,SAAqBmW,EAAStV,GAE1B,MAAMuZ,EAAW,CAAC,EAClB,GAAuB,MAAnBjE,EAAQtV,EAAI,IACQ,MAAnBsV,EAAQtV,EAAI,IACO,MAAnBsV,EAAQtV,EAAI,IACO,MAAnBsV,EAAQtV,EAAI,IACO,MAAnBsV,EAAQtV,EAAI,IACO,MAAnBsV,EAAQtV,EAAI,GA4Fb,MAAM,IAAIsB,MAAM,kCA3FpB,CACItB,GAAM,EACN,IAAI2V,EAAqB,EACrB0H,GAAU,EAAOtC,GAAS,EAAOuC,GAAU,EAC3CH,EAAM,GACV,KAAKnd,EAAEsV,EAAQ5U,OAAOV,IAClB,GAAmB,MAAfsV,EAAQtV,GAAY,CACpB,GAAIqd,GACkB,MAAjB/H,EAAQtV,EAAE,IACO,MAAjBsV,EAAQtV,EAAE,IACO,MAAjBsV,EAAQtV,EAAE,IACO,MAAjBsV,EAAQtV,EAAE,IACO,MAAjBsV,EAAQtV,EAAE,IACO,MAAjBsV,EAAQtV,EAAE,IACO,MAAjBsV,EAAQtV,EAAE,GAEXA,GAAK,EACL+a,GAAS,OACP,GAAIsC,GACW,MAAjB/H,EAAQtV,EAAE,IACQ,MAAjBsV,EAAQtV,EAAE,IACO,MAAjBsV,EAAQtV,EAAE,IACO,MAAjBsV,EAAQtV,EAAE,IACO,MAAjBsV,EAAQtV,EAAE,IACO,MAAjBsV,EAAQtV,EAAE,IACO,MAAjBsV,EAAQtV,EAAE,IACO,MAAjBsV,EAAQtV,EAAE,GAGXA,GAAK,OACH,GAAIqd,GACW,MAAjB/H,EAAQtV,EAAE,IACO,MAAjBsV,EAAQtV,EAAE,IACO,MAAjBsV,EAAQtV,EAAE,IACO,MAAjBsV,EAAQtV,EAAE,IACO,MAAjBsV,EAAQtV,EAAE,IACO,MAAjBsV,EAAQtV,EAAE,IACO,MAAjBsV,EAAQtV,EAAE,IACO,MAAjBsV,EAAQtV,EAAE,GAGVA,GAAK,OACH,GAAIqd,GACW,MAAjB/H,EAAQtV,EAAE,IACO,MAAjBsV,EAAQtV,EAAE,IACO,MAAjBsV,EAAQtV,EAAE,IACO,MAAjBsV,EAAQtV,EAAE,IACO,MAAjBsV,EAAQtV,EAAE,IACO,MAAjBsV,EAAQtV,EAAE,IACO,MAAjBsV,EAAQtV,EAAE,IACO,MAAjBsV,EAAQtV,EAAE,IACO,MAAjBsV,EAAQtV,EAAE,GAGVA,GAAK,MACH,IACe,MAAjBsV,EAAQtV,EAAE,IACO,MAAjBsV,EAAQtV,EAAE,IACO,MAAjBsV,EAAQtV,EAAE,GAIV,MAAM,IAAIsB,MAAM,mBAFhBgc,GAAU,CAGd,CACA3H,IACAwH,EAAM,EACV,MAAO,GAAmB,MAAf7H,EAAQtV,GAAY,CAC3B,GAAGsd,EAAQ,CACP,GAAuB,MAAnBhI,EAAQtV,EAAI,IAAiC,MAAnBsV,EAAQtV,EAAI,GAGtC,MAAM,IAAIsB,MAAM,kCAFhBgc,GAAU,CAIlB,MAASvC,IACLmC,EAAeC,EAAK5D,GACpBwB,GAAS,GAGb,GADApF,IAC2B,IAAvBA,EACF,KAEN,KAAyB,MAAfL,EAAQtV,GACdqd,GAAU,EAEVF,GAAO7H,EAAQtV,GAGvB,GAA0B,IAAvB2V,EACC,MAAM,IAAIrU,MAAM,mBAExB,CAGA,MAAO,CAACiY,WAAUvZ,IACtB,eCvGA,MAAMgV,EAAiB,CACnBqE,eAAe,EACfb,oBAAqB,KACrBC,qBAAqB,EACrBC,aAAc,QACdC,kBAAkB,EAClB4E,gBAAgB,EAChBtI,wBAAwB,EAExBuI,eAAe,EACfC,qBAAqB,EACrBC,YAAY,EACZ9E,eAAe,EACf+E,mBAAoB,CAClBC,KAAK,EACLC,cAAc,GAEhB3E,kBAAmB,SAAS7C,EAASpQ,GACnC,OAAOA,CACT,EACAmT,wBAAyB,SAASrB,EAAU9R,GAC1C,OAAOA,CACT,EACAwT,UAAW,GACXqE,sBAAsB,EACtBtZ,QAAS,KAAM,EACf8U,iBAAiB,EACjBpE,aAAc,GACdsE,iBAAiB,EACjBuE,cAAc,EACdC,mBAAmB,EACnBC,cAAc,EACdC,kBAAkB,EAClBC,wBAAwB,GAO5Bhf,EAAQif,aAJa,SAASvI,GAC1B,OAAOxT,OAAOyT,OAAO,CAAC,EAAGd,EAAgBa,EAC7C,EAGA1W,EAAQ6V,eAAiBA,8BCvCzB,MAAMD,EAAO,EAAQ,KACfsJ,EAAU,EAAQ,KAClBC,EAAc,EAAQ,KACtBC,EAAW,EAAQ,KAkDzB,SAASC,EAAoBC,GAC3B,MAAMC,EAAUrc,OAAO4R,KAAKwK,GAC5B,IAAK,IAAIze,EAAI,EAAGA,EAAI0e,EAAQhe,OAAQV,IAAK,CACvC,MAAM2e,EAAMD,EAAQ1e,GACpBT,KAAKqf,aAAaD,GAAO,CACtBnK,MAAO,IAAIX,OAAO,IAAI8K,EAAI,IAAI,KAC9B1Y,IAAMwY,EAAiBE,GAE5B,CACF,CAWA,SAASE,EAAc5Y,EAAKoQ,EAASwF,EAAOiD,EAAUC,EAAeC,EAAYC,GAC/E,QAAY5a,IAAR4B,IACE1G,KAAKsW,QAAQ6H,aAAeoB,IAC9B7Y,EAAMA,EAAIiF,QAETjF,EAAIvF,OAAS,GAAE,CACZue,IAAgBhZ,EAAM1G,KAAKgb,qBAAqBtU,IAEpD,MAAMsV,EAAShc,KAAKsW,QAAQqD,kBAAkB7C,EAASpQ,EAAK4V,EAAOkD,EAAeC,GAClF,OAAGzD,QAEMtV,SACOsV,UAAkBtV,GAAOsV,IAAWtV,EAE3CsV,EACAhc,KAAKsW,QAAQ6H,YAGDzX,EAAIiF,SACLjF,EAHXiZ,EAAWjZ,EAAK1G,KAAKsW,QAAQ2H,cAAeje,KAAKsW,QAAQ8H,oBAMvD1X,CAGb,CAEJ,CAEA,SAASkZ,EAAiB5J,GACxB,GAAIhW,KAAKsW,QAAQ0H,eAAgB,CAC/B,MAAMxH,EAAOR,EAAQ1C,MAAM,KACrBuM,EAA+B,MAAtB7J,EAAQ8J,OAAO,GAAa,IAAM,GACjD,GAAgB,UAAZtJ,EAAK,GACP,MAAO,GAEW,IAAhBA,EAAKrV,SACP6U,EAAU6J,EAASrJ,EAAK,GAE5B,CACA,OAAOR,CACT,CA5GE,wFACCtK,QAAQ,QAAS8J,EAAKpB,YA+GzB,MAAM2L,EAAY,IAAIzL,OAAO,+CAAgD,MAE7E,SAAS0L,EAAmB9I,EAASoF,GACnC,IAAKtc,KAAKsW,QAAQ8C,kBAAuC,iBAAZlC,EAAsB,CAIjE,MAAMhC,EAAUM,EAAKR,cAAckC,EAAS6I,GACtCjf,EAAMoU,EAAQ/T,OACd8e,EAAQ,CAAC,EACf,IAAK,IAAIxf,EAAI,EAAGA,EAAIK,EAAKL,IAAK,CAC5B,MAAM+X,EAAWxY,KAAK4f,iBAAiB1K,EAAQzU,GAAG,IAClD,IAAIyf,EAAShL,EAAQzU,GAAG,GACpB0f,EAAQngB,KAAKsW,QAAQ2C,oBAAsBT,EAC/C,GAAIA,EAASrX,OAIX,GAHInB,KAAKsW,QAAQsI,yBACfuB,EAAQngB,KAAKsW,QAAQsI,uBAAuBuB,SAE/Brb,IAAXob,EAAsB,CACpBlgB,KAAKsW,QAAQ6H,aACf+B,EAASA,EAAOvU,QAElBuU,EAASlgB,KAAKgb,qBAAqBkF,GACnC,MAAME,EAASpgB,KAAKsW,QAAQuD,wBAAwBrB,EAAU0H,EAAQ5D,GAGpE2D,EAAME,GAFLC,QAEcF,SACDE,UAAkBF,GAAUE,IAAWF,EAEtCE,EAGAT,EACbO,EACAlgB,KAAKsW,QAAQ4H,oBACble,KAAKsW,QAAQ8H,mBAGnB,MAAWpe,KAAKsW,QAAQZ,yBACtBuK,EAAME,IAAS,EAGrB,CACA,IAAKrd,OAAO4R,KAAKuL,GAAO9e,OACtB,OAEF,GAAInB,KAAKsW,QAAQ4C,oBAAqB,CACpC,MAAMmH,EAAiB,CAAC,EAExB,OADAA,EAAergB,KAAKsW,QAAQ4C,qBAAuB+G,EAC5CI,CACT,CACA,OAAOJ,CACT,CACF,CAEA,MAAMK,EAAW,SAASvK,GACxBA,EAAUA,EAAQrK,QAAQ,SAAU,MACpC,MAAM6U,EAAS,IAAIzB,EAAQ,QAC3B,IAAI0B,EAAcD,EACdE,EAAW,GACXnE,EAAQ,GACZ,IAAI,IAAI7b,EAAE,EAAGA,EAAGsV,EAAQ5U,OAAQV,IAE9B,GAAU,MADCsV,EAAQtV,GAIjB,GAAqB,MAAjBsV,EAAQtV,EAAE,GAAY,CACxB,MAAMigB,EAAaC,EAAiB5K,EAAS,IAAKtV,EAAG,8BACrD,IAAIqW,EAAUf,EAAQgB,UAAUtW,EAAE,EAAEigB,GAAY/U,OAEhD,GAAG3L,KAAKsW,QAAQ0H,eAAe,CAC7B,MAAM4C,EAAa9J,EAAQ9U,QAAQ,MAChB,IAAhB4e,IACD9J,EAAUA,EAAQ/O,OAAO6Y,EAAW,GAExC,CAEG5gB,KAAKsW,QAAQqI,mBACd7H,EAAU9W,KAAKsW,QAAQqI,iBAAiB7H,IAGvC0J,IACDC,EAAWzgB,KAAK6gB,oBAAoBJ,EAAUD,EAAalE,IAG7DA,EAAQA,EAAMvU,OAAO,EAAGuU,EAAMxV,YAAY,MAE1C0Z,EAAcxgB,KAAK8gB,cAAcrJ,MACjCgJ,EAAW,GACXhgB,EAAIigB,CACN,MAAO,GAAqB,MAAjB3K,EAAQtV,EAAE,GAAY,CAE/B,IAAIsgB,EAAUC,EAAWjL,EAAQtV,GAAG,EAAO,MAC3C,IAAIsgB,EAAS,MAAM,IAAIhf,MAAM,yBAG7B,GADA0e,EAAWzgB,KAAK6gB,oBAAoBJ,EAAUD,EAAalE,GACtDtc,KAAKsW,QAAQmI,mBAAyC,SAApBsC,EAAQjK,SAAuB9W,KAAKsW,QAAQoI,kBAE9E,CAEH,MAAMuC,EAAY,IAAInC,EAAQiC,EAAQjK,SACtCmK,EAAUC,IAAIlhB,KAAKsW,QAAQ6C,aAAc,IAEtC4H,EAAQjK,UAAYiK,EAAQI,QAAUJ,EAAQK,iBAC/CH,EAAU,MAAQjhB,KAAKggB,mBAAmBe,EAAQI,OAAQ7E,IAE5DkE,EAAYa,SAASJ,EAEvB,CAGAxgB,EAAIsgB,EAAQL,WAAa,CAC3B,MAAO,GAAgC,QAA7B3K,EAAQhO,OAAOtH,EAAI,EAAG,GAAc,CAC5C,MAAM6gB,EAAWX,EAAiB5K,EAAS,SAAOtV,EAAE,EAAG,0BACvD,GAAGT,KAAKsW,QAAQyD,gBAAgB,CAC9B,MAAMgE,EAAUhI,EAAQgB,UAAUtW,EAAI,EAAG6gB,EAAW,GAEpDb,EAAWzgB,KAAK6gB,oBAAoBJ,EAAUD,EAAalE,GAE3DkE,EAAYU,IAAIlhB,KAAKsW,QAAQyD,gBAAiB,CAAE,CAAE,CAAC/Z,KAAKsW,QAAQ6C,cAAgB4E,IAClF,CACAtd,EAAI6gB,CACN,MAAO,GAAiC,OAA7BvL,EAAQhO,OAAOtH,EAAI,EAAG,GAAa,CAC5C,MAAMuW,EAAS+H,EAAYhJ,EAAStV,GACpCT,KAAKuhB,gBAAkBvK,EAAOgD,SAC9BvZ,EAAIuW,EAAOvW,CACb,MAAM,GAAgC,OAA7BsV,EAAQhO,OAAOtH,EAAI,EAAG,GAAa,CAC1C,MAAMigB,EAAaC,EAAiB5K,EAAS,MAAOtV,EAAG,wBAA0B,EAC3E0gB,EAASpL,EAAQgB,UAAUtW,EAAI,EAAEigB,GAKvC,GAHAD,EAAWzgB,KAAK6gB,oBAAoBJ,EAAUD,EAAalE,GAGxDtc,KAAKsW,QAAQ+C,cAGdmH,EAAYU,IAAIlhB,KAAKsW,QAAQ+C,cAAe,CAAE,CAAE,CAACrZ,KAAKsW,QAAQ6C,cAAgBgI,SAC3E,CACH,IAAIza,EAAM1G,KAAKsf,cAAc6B,EAAQX,EAAYxK,QAASsG,GAAO,GAAM,GAAO,GACpExX,MAAP4B,IAAkBA,EAAM,IAC3B8Z,EAAYU,IAAIlhB,KAAKsW,QAAQ6C,aAAczS,EAC7C,CAEAjG,EAAIigB,EAAa,CACnB,KAAM,CACJ,IAAI1J,EAASgK,EAAWjL,EAAQtV,EAAGT,KAAKsW,QAAQ0H,gBAC5ClH,EAASE,EAAOF,QAChBqK,EAASnK,EAAOmK,OAChBC,EAAiBpK,EAAOoK,eACxBV,EAAa1J,EAAO0J,WAEpB1gB,KAAKsW,QAAQqI,mBACf7H,EAAU9W,KAAKsW,QAAQqI,iBAAiB7H,IAItC0J,GAAeC,GACU,SAAxBD,EAAYxK,UAEbyK,EAAWzgB,KAAK6gB,oBAAoBJ,EAAUD,EAAalE,GAAO,IAInExF,IAAYyJ,EAAOvK,UACpBsG,GAASA,EAAQ,IAAMxF,EAAUA,GAInC,MAAM0K,EAAUhB,EAKhB,GAJGgB,IAAmE,IAAxDxhB,KAAKsW,QAAQX,aAAa3T,QAAQwf,EAAQxL,WACtDwK,EAAcxgB,KAAK8gB,cAAcrJ,OAG/BzX,KAAKyhB,aAAazhB,KAAKsW,QAAQ4D,UAAWoC,EAAOxF,GAAU,CAC7D,IAAI4K,EAAa,GAEjB,GAAGP,EAAOhgB,OAAS,GAAKggB,EAAOra,YAAY,OAASqa,EAAOhgB,OAAS,EAClEV,EAAIuW,EAAO0J,gBAGR,IAAmD,IAAhD1gB,KAAKsW,QAAQX,aAAa3T,QAAQ8U,GACxCrW,EAAIuW,EAAO0J,eAGT,CAEF,MAAM1J,EAAShX,KAAK2hB,iBAAiB5L,EAASe,EAAS4J,EAAa,GACpE,IAAI1J,EAAQ,MAAM,IAAIjV,MAAM,qBAAqB+U,KACjDrW,EAAIuW,EAAOvW,EACXihB,EAAa1K,EAAO0K,UACtB,CAEA,MAAMT,EAAY,IAAInC,EAAQhI,GAC3BA,IAAYqK,GAAUC,IACvBH,EAAU,MAAQjhB,KAAKggB,mBAAmBmB,EAAQ7E,IAEjDoF,IACDA,EAAa1hB,KAAKsf,cAAcoC,EAAY5K,EAASwF,GAAO,EAAM8E,GAAgB,GAAM,IAG1F9E,EAAQA,EAAMvU,OAAO,EAAGuU,EAAMxV,YAAY,MAC1Cma,EAAUC,IAAIlhB,KAAKsW,QAAQ6C,aAAcuI,GAEzClB,EAAYa,SAASJ,EACvB,KAAK,CAEH,GAAGE,EAAOhgB,OAAS,GAAKggB,EAAOra,YAAY,OAASqa,EAAOhgB,OAAS,EAAE,CACjC,MAAhC2V,EAAQA,EAAQ3V,OAAS,IAC1B2V,EAAUA,EAAQ/O,OAAO,EAAG+O,EAAQ3V,OAAS,GAC7CggB,EAASrK,GAETqK,EAASA,EAAOpZ,OAAO,EAAGoZ,EAAOhgB,OAAS,GAGzCnB,KAAKsW,QAAQqI,mBACd7H,EAAU9W,KAAKsW,QAAQqI,iBAAiB7H,IAG1C,MAAMmK,EAAY,IAAInC,EAAQhI,GAC3BA,IAAYqK,GAAUC,IACvBH,EAAU,MAAQjhB,KAAKggB,mBAAmBmB,EAAQ7E,IAEpDA,EAAQA,EAAMvU,OAAO,EAAGuU,EAAMxV,YAAY,MAC1C0Z,EAAYa,SAASJ,EACvB,KAEI,CACF,MAAMA,EAAY,IAAInC,EAAShI,GAC/B9W,KAAK8gB,cAActf,KAAKgf,GAErB1J,IAAYqK,GAAUC,IACvBH,EAAU,MAAQjhB,KAAKggB,mBAAmBmB,EAAQ7E,IAEpDkE,EAAYa,SAASJ,GACrBT,EAAcS,CAChB,CACAR,EAAW,GACXhgB,EAAIigB,CACN,CACF,MAEAD,GAAY1K,EAAQtV,GAGxB,OAAO8f,EAAOqB,KAChB,EAEM5G,EAAuB,SAAStU,GAEpC,GAAG1G,KAAKsW,QAAQ2D,gBAAgB,CAC9B,IAAI,IAAI4H,KAAc7hB,KAAKuhB,gBAAgB,CACzC,MAAM/F,EAASxb,KAAKuhB,gBAAgBM,GACpCnb,EAAMA,EAAIgF,QAAS8P,EAAOqC,KAAMrC,EAAO9U,IACzC,CACA,IAAI,IAAImb,KAAc7hB,KAAKqf,aAAa,CACtC,MAAM7D,EAASxb,KAAKqf,aAAawC,GACjCnb,EAAMA,EAAIgF,QAAS8P,EAAOvG,MAAOuG,EAAO9U,IAC1C,CACA,GAAG1G,KAAKsW,QAAQkI,aACd,IAAI,IAAIqD,KAAc7hB,KAAKwe,aAAa,CACtC,MAAMhD,EAASxb,KAAKwe,aAAaqD,GACjCnb,EAAMA,EAAIgF,QAAS8P,EAAOvG,MAAOuG,EAAO9U,IAC1C,CAEFA,EAAMA,EAAIgF,QAAS1L,KAAK8hB,UAAU7M,MAAOjV,KAAK8hB,UAAUpb,IAC1D,CACA,OAAOA,CACT,EACA,SAASma,EAAoBJ,EAAUD,EAAalE,EAAOmD,GAezD,OAdIgB,SACgB3b,IAAf2a,IAA0BA,EAAuD,IAA1C3c,OAAO4R,KAAK8L,EAAYoB,OAAOzgB,aASxD2D,KAPjB2b,EAAWzgB,KAAKsf,cAAcmB,EAC5BD,EAAYxK,QACZsG,GACA,IACAkE,EAAY,OAAkD,IAA1C1d,OAAO4R,KAAK8L,EAAY,OAAOrf,OACnDse,KAEyC,KAAbgB,GAC5BD,EAAYU,IAAIlhB,KAAKsW,QAAQ6C,aAAcsH,GAC7CA,EAAW,IAENA,CACT,CASA,SAASgB,EAAavH,EAAWoC,EAAOyF,GACtC,MAAMC,EAAc,KAAOD,EAC3B,IAAK,MAAME,KAAgB/H,EAAW,CACpC,MAAMgI,EAAchI,EAAU+H,GAC9B,GAAID,IAAgBE,GAAe5F,IAAU4F,EAAe,OAAO,CACrE,CACA,OAAO,CACT,CAsCA,SAASvB,EAAiB5K,EAAS5N,EAAK1H,EAAG0hB,GACzC,MAAMC,EAAerM,EAAQ/T,QAAQmG,EAAK1H,GAC1C,IAAqB,IAAlB2hB,EACD,MAAM,IAAIrgB,MAAMogB,GAEhB,OAAOC,EAAeja,EAAIhH,OAAS,CAEvC,CAEA,SAAS6f,EAAWjL,EAAQtV,EAAGud,EAAgBqE,EAAc,KAC3D,MAAMrL,EAxCR,SAAgCjB,EAAStV,EAAG4hB,EAAc,KACxD,IAAIC,EACAnB,EAAS,GACb,IAAK,IAAI5L,EAAQ9U,EAAG8U,EAAQQ,EAAQ5U,OAAQoU,IAAS,CACnD,IAAIgN,EAAKxM,EAAQR,GACjB,GAAI+M,EACIC,IAAOD,IAAcA,EAAe,SACrC,GAAW,MAAPC,GAAqB,MAAPA,EACrBD,EAAeC,OACZ,GAAIA,IAAOF,EAAY,GAAI,CAChC,IAAGA,EAAY,GAQb,MAAO,CACLnd,KAAMic,EACN5L,MAAOA,GATT,GAAGQ,EAAQR,EAAQ,KAAO8M,EAAY,GACpC,MAAO,CACLnd,KAAMic,EACN5L,MAAOA,EASf,KAAkB,OAAPgN,IACTA,EAAK,KAEPpB,GAAUoB,CACZ,CACF,CAYiBC,CAAuBzM,EAAStV,EAAE,EAAG4hB,GACpD,IAAIrL,EAAQ,OACZ,IAAImK,EAASnK,EAAO9R,KACpB,MAAMwb,EAAa1J,EAAOzB,MACpBkN,EAAiBtB,EAAOuB,OAAO,MACrC,IAAI5L,EAAUqK,EACVC,GAAiB,EAMrB,IALuB,IAApBqB,IACD3L,EAAUqK,EAAOpZ,OAAO,EAAG0a,GAAgB/W,QAAQ,SAAU,IAC7DyV,EAASA,EAAOpZ,OAAO0a,EAAiB,IAGvCzE,EAAe,CAChB,MAAM4C,EAAa9J,EAAQ9U,QAAQ,MAChB,IAAhB4e,IACD9J,EAAUA,EAAQ/O,OAAO6Y,EAAW,GACpCQ,EAAiBtK,IAAYE,EAAO9R,KAAK6C,OAAO6Y,EAAa,GAEjE,CAEA,MAAO,CACL9J,QAASA,EACTqK,OAAQA,EACRT,WAAYA,EACZU,eAAgBA,EAEpB,CAOA,SAASO,EAAiB5L,EAASe,EAASrW,GAC1C,MAAM4U,EAAa5U,EAEnB,IAAIkiB,EAAe,EAEnB,KAAOliB,EAAIsV,EAAQ5U,OAAQV,IACzB,GAAmB,MAAfsV,EAAQtV,GACV,GAAqB,MAAjBsV,EAAQtV,EAAE,GAAY,CACtB,MAAMigB,EAAaC,EAAiB5K,EAAS,IAAKtV,EAAG,GAAGqW,mBAExD,GADmBf,EAAQgB,UAAUtW,EAAE,EAAEigB,GAAY/U,SACjCmL,IAClB6L,IACqB,IAAjBA,GACF,MAAO,CACLjB,WAAY3L,EAAQgB,UAAU1B,EAAY5U,GAC1CA,EAAIigB,GAIVjgB,EAAEigB,CACJ,MAAO,GAAoB,MAAjB3K,EAAQtV,EAAE,GAElBA,EADmBkgB,EAAiB5K,EAAS,KAAMtV,EAAE,EAAG,gCAEnD,GAAgC,QAA7BsV,EAAQhO,OAAOtH,EAAI,EAAG,GAE9BA,EADmBkgB,EAAiB5K,EAAS,SAAOtV,EAAE,EAAG,gCAEpD,GAAgC,OAA7BsV,EAAQhO,OAAOtH,EAAI,EAAG,GAE9BA,EADmBkgB,EAAiB5K,EAAS,MAAOtV,EAAG,2BAA6B,MAE/E,CACL,MAAMsgB,EAAUC,EAAWjL,EAAStV,EAAG,KAEnCsgB,KACkBA,GAAWA,EAAQjK,WACnBA,GAAuD,MAA5CiK,EAAQI,OAAOJ,EAAQI,OAAOhgB,OAAO,IAClEwhB,IAEFliB,EAAEsgB,EAAQL,WAEd,CAGR,CAEA,SAASf,EAAWjZ,EAAKkc,EAAatM,GACpC,GAAIsM,GAA8B,iBAARlc,EAAkB,CAE1C,MAAMsV,EAAStV,EAAIiF,OACnB,MAAc,SAAXqQ,GACgB,UAAXA,GACIgD,EAAStY,EAAK4P,EAC5B,CACE,OAAId,EAAKjB,QAAQ7N,GACRA,EAEA,EAGb,CAGA7G,EAAOD,QApiBP,MACE,WAAAoS,CAAYsE,GACVtW,KAAKsW,QAAUA,EACftW,KAAKwgB,YAAc,KACnBxgB,KAAK8gB,cAAgB,GACrB9gB,KAAKuhB,gBAAkB,CAAC,EACxBvhB,KAAKqf,aAAe,CAClB,KAAS,CAAEpK,MAAO,qBAAsBvO,IAAM,KAC9C,GAAO,CAAEuO,MAAO,mBAAoBvO,IAAM,KAC1C,GAAO,CAAEuO,MAAO,mBAAoBvO,IAAM,KAC1C,KAAS,CAAEuO,MAAO,qBAAsBvO,IAAM,MAEhD1G,KAAK8hB,UAAY,CAAE7M,MAAO,oBAAqBvO,IAAM,KACrD1G,KAAKwe,aAAe,CAClB,MAAS,CAAEvJ,MAAO,iBAAkBvO,IAAK,KAMzC,KAAS,CAAEuO,MAAO,iBAAkBvO,IAAK,KACzC,MAAU,CAAEuO,MAAO,kBAAmBvO,IAAK,KAC3C,IAAQ,CAAEuO,MAAO,gBAAiBvO,IAAK,KACvC,KAAS,CAAEuO,MAAO,kBAAmBvO,IAAK,KAC1C,UAAc,CAAEuO,MAAO,iBAAkBvO,IAAK,KAC9C,IAAQ,CAAEuO,MAAO,gBAAiBvO,IAAK,KACvC,IAAQ,CAAEuO,MAAO,iBAAkBvO,IAAK,MAE1C1G,KAAKif,oBAAsBA,EAC3Bjf,KAAKsgB,SAAWA,EAChBtgB,KAAKsf,cAAgBA,EACrBtf,KAAK4f,iBAAmBA,EACxB5f,KAAKggB,mBAAqBA,EAC1BhgB,KAAKyhB,aAAeA,EACpBzhB,KAAKgb,qBAAuBA,EAC5Bhb,KAAK2hB,iBAAmBA,EACxB3hB,KAAK6gB,oBAAsBA,CAC7B,kBCpDF,MAAM,aAAEhC,GAAgB,EAAQ,KAC1BgE,EAAmB,EAAQ,MAC3B,SAAEC,GAAY,EAAQ,KACtB/O,EAAY,EAAQ,KAsD1BlU,EAAOD,QApDP,MAEI,WAAAoS,CAAYsE,GACRtW,KAAKkf,iBAAmB,CAAC,EACzBlf,KAAKsW,QAAUuI,EAAavI,EAEhC,CAMA,KAAAyM,CAAMhN,EAAQiN,GACV,GAAsB,iBAAZjN,OACJ,KAAIA,EAAQvQ,SAGd,MAAM,IAAIzD,MAAM,mDAFhBgU,EAAUA,EAAQvQ,UAGtB,CACA,GAAIwd,EAAiB,EACO,IAArBA,IAA2BA,EAAmB,CAAC,GAElD,MAAMhM,EAASjD,EAAUsC,SAASN,EAASiN,GAC3C,IAAe,IAAXhM,EACF,MAAMjV,MAAO,GAAGiV,EAAOL,IAAI5D,OAAOiE,EAAOL,IAAIW,QAAQN,EAAOL,IAAIgB,MAEpE,CACF,MAAMsL,EAAmB,IAAIJ,EAAiB7iB,KAAKsW,SACnD2M,EAAiBhE,oBAAoBjf,KAAKkf,kBAC1C,MAAMgE,EAAgBD,EAAiB3C,SAASvK,GAChD,OAAG/V,KAAKsW,QAAQwD,oBAAmChV,IAAlBoe,EAAoCA,EACzDJ,EAASI,EAAeljB,KAAKsW,QAC7C,CAOA,SAAA6M,CAAUvJ,EAAKtW,GACX,IAA2B,IAAxBA,EAAMtB,QAAQ,KACb,MAAM,IAAID,MAAM,+BACd,IAAyB,IAAtB6X,EAAI5X,QAAQ,OAAqC,IAAtB4X,EAAI5X,QAAQ,KAC5C,MAAM,IAAID,MAAM,wEACd,GAAa,MAAVuB,EACL,MAAM,IAAIvB,MAAM,6CAEhB/B,KAAKkf,iBAAiBtF,GAAOtW,CAErC,6BCnCJ,SAAS8f,EAAS1iB,EAAK4V,EAASgG,GAC9B,IAAI+G,EACJ,MAAMC,EAAgB,CAAC,EACvB,IAAK,IAAI7iB,EAAI,EAAGA,EAAIC,EAAIS,OAAQV,IAAK,CACnC,MAAMic,EAAShc,EAAID,GACb8iB,EAAW5G,EAASD,GAC1B,IAAI8G,EAAW,GAIf,GAHwBA,OAAX1e,IAAVwX,EAAgCiH,EACnBjH,EAAQ,IAAMiH,EAE3BA,IAAajN,EAAQ6C,kBACVrU,IAATue,EAAoBA,EAAO3G,EAAO6G,GAChCF,GAAQ,GAAK3G,EAAO6G,OACrB,SAAgBze,IAAbye,EACP,SACI,GAAG7G,EAAO6G,GAAU,CAExB,IAAI7c,EAAM0c,EAAS1G,EAAO6G,GAAWjN,EAASkN,GAC9C,MAAMC,EAASC,EAAUhd,EAAK4P,GAE3BoG,EAAO,MACRiH,EAAkBjd,EAAKgW,EAAO,MAAO8G,EAAUlN,GACZ,IAA5BxT,OAAO4R,KAAKhO,GAAKvF,aAA8C2D,IAA9B4B,EAAI4P,EAAQ6C,eAAgC7C,EAAQiI,qBAEzD,IAA5Bzb,OAAO4R,KAAKhO,GAAKvF,SACrBmV,EAAQiI,qBAAsB7X,EAAI4P,EAAQ6C,cAAgB,GACxDzS,EAAM,IAHXA,EAAMA,EAAI4P,EAAQ6C,mBAMWrU,IAA5Bwe,EAAcC,IAA2BD,EAAc5K,eAAe6K,IACnE1hB,MAAMoD,QAAQqe,EAAcC,MAC5BD,EAAcC,GAAY,CAAED,EAAcC,KAE9CD,EAAcC,GAAU/hB,KAAKkF,IAIzB4P,EAAQrR,QAAQse,EAAUC,EAAUC,GACtCH,EAAcC,GAAY,CAAC7c,GAE3B4c,EAAcC,GAAY7c,CAGhC,EAEF,CAKA,MAHmB,iBAAT2c,EACLA,EAAKliB,OAAS,IAAGmiB,EAAchN,EAAQ6C,cAAgBkK,QAC1Cve,IAATue,IAAoBC,EAAchN,EAAQ6C,cAAgBkK,GAC5DC,CACT,CAEA,SAAS3G,EAAShY,GAChB,MAAM+P,EAAO5R,OAAO4R,KAAK/P,GACzB,IAAK,IAAIlE,EAAI,EAAGA,EAAIiU,EAAKvT,OAAQV,IAAK,CACpC,MAAMmZ,EAAMlF,EAAKjU,GACjB,GAAW,OAARmZ,EAAc,OAAOA,CAC1B,CACF,CAEA,SAAS+J,EAAiBhf,EAAK4Y,EAASqG,EAAOtN,GAC7C,GAAIiH,EAAS,CACX,MAAM7I,EAAO5R,OAAO4R,KAAK6I,GACnBzc,EAAM4T,EAAKvT,OACjB,IAAK,IAAIV,EAAI,EAAGA,EAAIK,EAAKL,IAAK,CAC5B,MAAMojB,EAAWnP,EAAKjU,GAClB6V,EAAQrR,QAAQ4e,EAAUD,EAAQ,IAAMC,GAAU,GAAM,GAC1Dlf,EAAIkf,GAAY,CAAEtG,EAAQsG,IAE1Blf,EAAIkf,GAAYtG,EAAQsG,EAE5B,CACF,CACF,CAEA,SAASH,EAAU/e,EAAK2R,GACtB,MAAMwN,EAAYhhB,OAAO4R,KAAK/P,GAAKxD,OACnC,SAAkB,IAAd2iB,GAAkC,IAAdA,GAAmBnf,EAAI2R,EAAQ6C,cAEzD,CACAvZ,EAAQkjB,SA5FR,SAAkBiB,EAAMzN,GACtB,OAAO8M,EAAUW,EAAMzN,EACzB,wBCYAzW,EAAOD,QApBP,MACE,WAAAoS,CAAYgE,GACVhW,KAAKgW,QAAUA,EACfhW,KAAK4hB,MAAQ,GACb5hB,KAAK,MAAQ,CAAC,CAChB,CACA,GAAAkhB,CAAItH,EAAIlT,GAEN1G,KAAK4hB,MAAMpgB,KAAM,CAAC,CAACoY,GAAMlT,GAC3B,CACA,QAAA2a,CAAS0C,GACJA,EAAK,OAASjhB,OAAO4R,KAAKqP,EAAK,OAAO5iB,OAAS,EAChDnB,KAAK4hB,MAAMpgB,KAAM,CAAE,CAACuiB,EAAK/N,SAAU+N,EAAKnC,MAAO,KAAQmC,EAAK,QAE5D/jB,KAAK4hB,MAAMpgB,KAAM,CAAE,CAACuiB,EAAK/N,SAAU+N,EAAKnC,OAE5C,gBCjBFhiB,EAAQuH,KAAO,SAAU/C,EAAQqD,EAAQuc,EAAMC,EAAMC,GACnD,IAAIna,EAAGvD,EACH2d,EAAiB,EAATD,EAAcD,EAAO,EAC7BG,GAAQ,GAAKD,GAAQ,EACrBE,EAAQD,GAAQ,EAChBE,GAAS,EACT7jB,EAAIujB,EAAQE,EAAS,EAAK,EAC1BK,EAAIP,GAAQ,EAAI,EAChBQ,EAAIpgB,EAAOqD,EAAShH,GAOxB,IALAA,GAAK8jB,EAELxa,EAAIya,GAAM,IAAOF,GAAU,EAC3BE,KAAQF,EACRA,GAASH,EACFG,EAAQ,EAAGva,EAAS,IAAJA,EAAW3F,EAAOqD,EAAShH,GAAIA,GAAK8jB,EAAGD,GAAS,GAKvE,IAHA9d,EAAIuD,GAAM,IAAOua,GAAU,EAC3Bva,KAAQua,EACRA,GAASL,EACFK,EAAQ,EAAG9d,EAAS,IAAJA,EAAWpC,EAAOqD,EAAShH,GAAIA,GAAK8jB,EAAGD,GAAS,GAEvE,GAAU,IAANva,EACFA,EAAI,EAAIsa,MACH,IAAIta,IAAMqa,EACf,OAAO5d,EAAIie,IAAsBrR,KAAdoR,GAAK,EAAI,GAE5Bhe,GAAQqC,KAAKgG,IAAI,EAAGoV,GACpBla,GAAQsa,CACV,CACA,OAAQG,GAAK,EAAI,GAAKhe,EAAIqC,KAAKgG,IAAI,EAAG9E,EAAIka,EAC5C,EAEArkB,EAAQ+D,MAAQ,SAAUS,EAAQd,EAAOmE,EAAQuc,EAAMC,EAAMC,GAC3D,IAAIna,EAAGvD,EAAGiC,EACN0b,EAAiB,EAATD,EAAcD,EAAO,EAC7BG,GAAQ,GAAKD,GAAQ,EACrBE,EAAQD,GAAQ,EAChBM,EAAe,KAATT,EAAcpb,KAAKgG,IAAI,GAAI,IAAMhG,KAAKgG,IAAI,GAAI,IAAM,EAC1DpO,EAAIujB,EAAO,EAAKE,EAAS,EACzBK,EAAIP,EAAO,GAAK,EAChBQ,EAAIlhB,EAAQ,GAAgB,IAAVA,GAAe,EAAIA,EAAQ,EAAK,EAAI,EAmC1D,IAjCAA,EAAQuF,KAAKqK,IAAI5P,GAEbqhB,MAAMrhB,IAAUA,IAAU8P,KAC5B5M,EAAIme,MAAMrhB,GAAS,EAAI,EACvByG,EAAIqa,IAEJra,EAAIlB,KAAK+J,MAAM/J,KAAK+b,IAAIthB,GAASuF,KAAKgc,KAClCvhB,GAASmF,EAAII,KAAKgG,IAAI,GAAI9E,IAAM,IAClCA,IACAtB,GAAK,IAGLnF,GADEyG,EAAIsa,GAAS,EACNK,EAAKjc,EAELic,EAAK7b,KAAKgG,IAAI,EAAG,EAAIwV,IAEpB5b,GAAK,IACfsB,IACAtB,GAAK,GAGHsB,EAAIsa,GAASD,GACf5d,EAAI,EACJuD,EAAIqa,GACKra,EAAIsa,GAAS,GACtB7d,GAAMlD,EAAQmF,EAAK,GAAKI,KAAKgG,IAAI,EAAGoV,GACpCla,GAAQsa,IAER7d,EAAIlD,EAAQuF,KAAKgG,IAAI,EAAGwV,EAAQ,GAAKxb,KAAKgG,IAAI,EAAGoV,GACjDla,EAAI,IAIDka,GAAQ,EAAG7f,EAAOqD,EAAShH,GAAS,IAAJ+F,EAAU/F,GAAK8jB,EAAG/d,GAAK,IAAKyd,GAAQ,GAI3E,IAFAla,EAAKA,GAAKka,EAAQzd,EAClB2d,GAAQF,EACDE,EAAO,EAAG/f,EAAOqD,EAAShH,GAAS,IAAJsJ,EAAUtJ,GAAK8jB,EAAGxa,GAAK,IAAKoa,GAAQ,GAE1E/f,EAAOqD,EAAShH,EAAI8jB,IAAU,IAAJC,CAC5B,2BCjFA,IAUIM,EAVY,WAIf,GAAoB,oBAATC,KAAwB,OAAOA,KAC1C,GAAsB,oBAAXC,OAA0B,OAAOA,OAC5C,QAAsB,IAAXF,EAA0B,OAAOA,EAC5C,MAAM,IAAI/iB,MAAM,iCACjB,CAEakjB,GAEbplB,EAAOD,QAAUA,EAAUklB,EAAOI,MAG9BJ,EAAOI,QACVtlB,EAAA,QAAkBklB,EAAOI,MAAMC,KAAKL,IAGrCllB,EAAQwlB,QAAUN,EAAOM,QACzBxlB,EAAQylB,QAAUP,EAAOO,QACzBzlB,EAAQ0lB,SAAWR,EAAOQ,kDCE1B,SAASC,EAAWC,GAClB,GAAoB,iBAATA,EACT,MAAM,IAAIriB,UAAU,mCAAqC2U,KAAKC,UAAUyN,GAE5E,CAGA,SAASC,EAAqBD,EAAME,GAMlC,IALA,IAII5jB,EAJAiH,EAAM,GACN4c,EAAoB,EACpBC,GAAa,EACbC,EAAO,EAEFplB,EAAI,EAAGA,GAAK+kB,EAAKrkB,SAAUV,EAAG,CACrC,GAAIA,EAAI+kB,EAAKrkB,OACXW,EAAO0jB,EAAKxkB,WAAWP,OACpB,IAAa,KAATqB,EACP,MAEAA,EAAO,EAAQ,CACjB,GAAa,KAATA,EAAmB,CACrB,GAAI8jB,IAAcnlB,EAAI,GAAc,IAATolB,QAEpB,GAAID,IAAcnlB,EAAI,GAAc,IAATolB,EAAY,CAC5C,GAAI9c,EAAI5H,OAAS,GAA2B,IAAtBwkB,GAA8D,KAAnC5c,EAAI/H,WAAW+H,EAAI5H,OAAS,IAAsD,KAAnC4H,EAAI/H,WAAW+H,EAAI5H,OAAS,GAC1H,GAAI4H,EAAI5H,OAAS,EAAG,CAClB,IAAI2kB,EAAiB/c,EAAIjC,YAAY,KACrC,GAAIgf,IAAmB/c,EAAI5H,OAAS,EAAG,EACb,IAApB2kB,GACF/c,EAAM,GACN4c,EAAoB,GAGpBA,GADA5c,EAAMA,EAAInF,MAAM,EAAGkiB,IACK3kB,OAAS,EAAI4H,EAAIjC,YAAY,KAEvD8e,EAAYnlB,EACZolB,EAAO,EACP,QACF,CACF,MAAO,GAAmB,IAAf9c,EAAI5H,QAA+B,IAAf4H,EAAI5H,OAAc,CAC/C4H,EAAM,GACN4c,EAAoB,EACpBC,EAAYnlB,EACZolB,EAAO,EACP,QACF,CAEEH,IACE3c,EAAI5H,OAAS,EACf4H,GAAO,MAEPA,EAAM,KACR4c,EAAoB,EAExB,MACM5c,EAAI5H,OAAS,EACf4H,GAAO,IAAMyc,EAAK5hB,MAAMgiB,EAAY,EAAGnlB,GAEvCsI,EAAMyc,EAAK5hB,MAAMgiB,EAAY,EAAGnlB,GAClCklB,EAAoBllB,EAAImlB,EAAY,EAEtCA,EAAYnlB,EACZolB,EAAO,CACT,MAAoB,KAAT/jB,IAA+B,IAAV+jB,IAC5BA,EAEFA,GAAQ,CAEZ,CACA,OAAO9c,CACT,CAcA,IAAIgd,EAAQ,CAEVC,QAAS,WAKP,IAJA,IAEIC,EAFAC,EAAe,GACfC,GAAmB,EAGd1lB,EAAIiF,UAAUvE,OAAS,EAAGV,IAAM,IAAM0lB,EAAkB1lB,IAAK,CACpE,IAAI+kB,EACA/kB,GAAK,EACP+kB,EAAO9f,UAAUjF,SAELqE,IAARmhB,IACFA,EAAMG,EAAQH,OAChBT,EAAOS,GAGTV,EAAWC,GAGS,IAAhBA,EAAKrkB,SAIT+kB,EAAeV,EAAO,IAAMU,EAC5BC,EAA0C,KAAvBX,EAAKxkB,WAAW,GACrC,CAQA,OAFAklB,EAAeT,EAAqBS,GAAeC,GAE/CA,EACED,EAAa/kB,OAAS,EACjB,IAAM+kB,EAEN,IACAA,EAAa/kB,OAAS,EACxB+kB,EAEA,GAEX,EAEAG,UAAW,SAAmBb,GAG5B,GAFAD,EAAWC,GAES,IAAhBA,EAAKrkB,OAAc,MAAO,IAE9B,IAAImlB,EAAoC,KAAvBd,EAAKxkB,WAAW,GAC7BulB,EAAyD,KAArCf,EAAKxkB,WAAWwkB,EAAKrkB,OAAS,GAQtD,OAHoB,KAFpBqkB,EAAOC,EAAqBD,GAAOc,IAE1BnlB,QAAiBmlB,IAAYd,EAAO,KACzCA,EAAKrkB,OAAS,GAAKolB,IAAmBf,GAAQ,KAE9Cc,EAAmB,IAAMd,EACtBA,CACT,EAEAc,WAAY,SAAoBd,GAE9B,OADAD,EAAWC,GACJA,EAAKrkB,OAAS,GAA4B,KAAvBqkB,EAAKxkB,WAAW,EAC5C,EAEAW,KAAM,WACJ,GAAyB,IAArB+D,UAAUvE,OACZ,MAAO,IAET,IADA,IAAIqlB,EACK/lB,EAAI,EAAGA,EAAIiF,UAAUvE,SAAUV,EAAG,CACzC,IAAIwC,EAAMyC,UAAUjF,GACpB8kB,EAAWtiB,GACPA,EAAI9B,OAAS,SACA2D,IAAX0hB,EACFA,EAASvjB,EAETujB,GAAU,IAAMvjB,EAEtB,CACA,YAAe6B,IAAX0hB,EACK,IACFT,EAAMM,UAAUG,EACzB,EAEAC,SAAU,SAAkBpjB,EAAMqjB,GAIhC,GAHAnB,EAAWliB,GACXkiB,EAAWmB,GAEPrjB,IAASqjB,EAAI,MAAO,GAKxB,IAHArjB,EAAO0iB,EAAMC,QAAQ3iB,OACrBqjB,EAAKX,EAAMC,QAAQU,IAEF,MAAO,GAIxB,IADA,IAAIC,EAAY,EACTA,EAAYtjB,EAAKlC,QACa,KAA/BkC,EAAKrC,WAAW2lB,KADYA,GASlC,IALA,IAAIC,EAAUvjB,EAAKlC,OACf0lB,EAAUD,EAAUD,EAGpBG,EAAU,EACPA,EAAUJ,EAAGvlB,QACa,KAA3BulB,EAAG1lB,WAAW8lB,KADUA,GAW9B,IAPA,IACIC,EADQL,EAAGvlB,OACK2lB,EAGhB3lB,EAAS0lB,EAAUE,EAAQF,EAAUE,EACrCC,GAAiB,EACjBvmB,EAAI,EACDA,GAAKU,IAAUV,EAAG,CACvB,GAAIA,IAAMU,EAAQ,CAChB,GAAI4lB,EAAQ5lB,EAAQ,CAClB,GAAmC,KAA/BulB,EAAG1lB,WAAW8lB,EAAUrmB,GAG1B,OAAOimB,EAAG9iB,MAAMkjB,EAAUrmB,EAAI,GACzB,GAAU,IAANA,EAGT,OAAOimB,EAAG9iB,MAAMkjB,EAAUrmB,EAE9B,MAAWomB,EAAU1lB,IACoB,KAAnCkC,EAAKrC,WAAW2lB,EAAYlmB,GAG9BumB,EAAgBvmB,EACD,IAANA,IAGTumB,EAAgB,IAGpB,KACF,CACA,IAAIC,EAAW5jB,EAAKrC,WAAW2lB,EAAYlmB,GAE3C,GAAIwmB,IADSP,EAAG1lB,WAAW8lB,EAAUrmB,GAEnC,MACoB,KAAbwmB,IACPD,EAAgBvmB,EACpB,CAEA,IAAI6L,EAAM,GAGV,IAAK7L,EAAIkmB,EAAYK,EAAgB,EAAGvmB,GAAKmmB,IAAWnmB,EAClDA,IAAMmmB,GAAkC,KAAvBvjB,EAAKrC,WAAWP,KAChB,IAAf6L,EAAInL,OACNmL,GAAO,KAEPA,GAAO,OAMb,OAAIA,EAAInL,OAAS,EACRmL,EAAMoa,EAAG9iB,MAAMkjB,EAAUE,IAEhCF,GAAWE,EACoB,KAA3BN,EAAG1lB,WAAW8lB,MACdA,EACGJ,EAAG9iB,MAAMkjB,GAEpB,EAEAI,UAAW,SAAmB1B,GAC5B,OAAOA,CACT,EAEA2B,QAAS,SAAiB3B,GAExB,GADAD,EAAWC,GACS,IAAhBA,EAAKrkB,OAAc,MAAO,IAK9B,IAJA,IAAIW,EAAO0jB,EAAKxkB,WAAW,GACvBomB,EAAmB,KAATtlB,EACVI,GAAO,EACPmlB,GAAe,EACV5mB,EAAI+kB,EAAKrkB,OAAS,EAAGV,GAAK,IAAKA,EAEtC,GAAa,MADbqB,EAAO0jB,EAAKxkB,WAAWP,KAEnB,IAAK4mB,EAAc,CACjBnlB,EAAMzB,EACN,KACF,OAGF4mB,GAAe,EAInB,OAAa,IAATnlB,EAAmBklB,EAAU,IAAM,IACnCA,GAAmB,IAARllB,EAAkB,KAC1BsjB,EAAK5hB,MAAM,EAAG1B,EACvB,EAEAolB,SAAU,SAAkB9B,EAAM9Y,GAChC,QAAY5H,IAAR4H,GAAoC,iBAARA,EAAkB,MAAM,IAAIvJ,UAAU,mCACtEoiB,EAAWC,GAEX,IAGI/kB,EAHAwB,EAAQ,EACRC,GAAO,EACPmlB,GAAe,EAGnB,QAAYviB,IAAR4H,GAAqBA,EAAIvL,OAAS,GAAKuL,EAAIvL,QAAUqkB,EAAKrkB,OAAQ,CACpE,GAAIuL,EAAIvL,SAAWqkB,EAAKrkB,QAAUuL,IAAQ8Y,EAAM,MAAO,GACvD,IAAI+B,EAAS7a,EAAIvL,OAAS,EACtBqmB,GAAoB,EACxB,IAAK/mB,EAAI+kB,EAAKrkB,OAAS,EAAGV,GAAK,IAAKA,EAAG,CACrC,IAAIqB,EAAO0jB,EAAKxkB,WAAWP,GAC3B,GAAa,KAATqB,GAGA,IAAKulB,EAAc,CACjBplB,EAAQxB,EAAI,EACZ,KACF,OAEwB,IAAtB+mB,IAGFH,GAAe,EACfG,EAAmB/mB,EAAI,GAErB8mB,GAAU,IAERzlB,IAAS4K,EAAI1L,WAAWumB,IACR,KAAZA,IAGJrlB,EAAMzB,IAKR8mB,GAAU,EACVrlB,EAAMslB,GAId,CAGA,OADIvlB,IAAUC,EAAKA,EAAMslB,GAAmC,IAATtlB,IAAYA,EAAMsjB,EAAKrkB,QACnEqkB,EAAK5hB,MAAM3B,EAAOC,EAC3B,CACE,IAAKzB,EAAI+kB,EAAKrkB,OAAS,EAAGV,GAAK,IAAKA,EAClC,GAA2B,KAAvB+kB,EAAKxkB,WAAWP,IAGhB,IAAK4mB,EAAc,CACjBplB,EAAQxB,EAAI,EACZ,KACF,OACkB,IAATyB,IAGXmlB,GAAe,EACfnlB,EAAMzB,EAAI,GAId,OAAa,IAATyB,EAAmB,GAChBsjB,EAAK5hB,MAAM3B,EAAOC,EAE7B,EAEAulB,QAAS,SAAiBjC,GACxBD,EAAWC,GAQX,IAPA,IAAIkC,GAAY,EACZC,EAAY,EACZzlB,GAAO,EACPmlB,GAAe,EAGfO,EAAc,EACTnnB,EAAI+kB,EAAKrkB,OAAS,EAAGV,GAAK,IAAKA,EAAG,CACzC,IAAIqB,EAAO0jB,EAAKxkB,WAAWP,GAC3B,GAAa,KAATqB,GASS,IAATI,IAGFmlB,GAAe,EACfnlB,EAAMzB,EAAI,GAEC,KAATqB,GAEkB,IAAd4lB,EACFA,EAAWjnB,EACY,IAAhBmnB,IACPA,EAAc,IACK,IAAdF,IAGTE,GAAe,QArBb,IAAKP,EAAc,CACjBM,EAAYlnB,EAAI,EAChB,KACF,CAoBN,CAEA,OAAkB,IAAdinB,IAA4B,IAATxlB,GAEH,IAAhB0lB,GAEgB,IAAhBA,GAAqBF,IAAaxlB,EAAM,GAAKwlB,IAAaC,EAAY,EACjE,GAEFnC,EAAK5hB,MAAM8jB,EAAUxlB,EAC9B,EAEAoX,OAAQ,SAAgBuO,GACtB,GAAmB,OAAfA,GAA6C,iBAAfA,EAChC,MAAM,IAAI1kB,UAAU,0EAA4E0kB,GAElG,OAvVJ,SAAiBC,EAAKD,GACpB,IAAIlhB,EAAMkhB,EAAWlhB,KAAOkhB,EAAWnoB,KACnCqoB,EAAOF,EAAWE,OAASF,EAAWzV,MAAQ,KAAOyV,EAAWnb,KAAO,IAC3E,OAAK/F,EAGDA,IAAQkhB,EAAWnoB,KACdiH,EAAMohB,EAERphB,EA8UU,IA9UEohB,EALVA,CAMX,CA6UWC,CAAQ,EAAKH,EACtB,EAEA9E,MAAO,SAAeyC,GACpBD,EAAWC,GAEX,IAAInZ,EAAM,CAAE3M,KAAM,GAAIiH,IAAK,GAAIohB,KAAM,GAAIrb,IAAK,GAAI0F,KAAM,IACxD,GAAoB,IAAhBoT,EAAKrkB,OAAc,OAAOkL,EAC9B,IAEIpK,EAFAH,EAAO0jB,EAAKxkB,WAAW,GACvBslB,EAAsB,KAATxkB,EAEbwkB,GACFja,EAAI3M,KAAO,IACXuC,EAAQ,GAERA,EAAQ,EAaV,IAXA,IAAIylB,GAAY,EACZC,EAAY,EACZzlB,GAAO,EACPmlB,GAAe,EACf5mB,EAAI+kB,EAAKrkB,OAAS,EAIlBymB,EAAc,EAGXnnB,GAAKwB,IAASxB,EAEnB,GAAa,MADbqB,EAAO0jB,EAAKxkB,WAAWP,KAUV,IAATyB,IAGFmlB,GAAe,EACfnlB,EAAMzB,EAAI,GAEC,KAATqB,GAEkB,IAAd4lB,EAAiBA,EAAWjnB,EAA2B,IAAhBmnB,IAAmBA,EAAc,IACrD,IAAdF,IAGXE,GAAe,QAlBb,IAAKP,EAAc,CACjBM,EAAYlnB,EAAI,EAChB,KACF,CAwCN,OArBkB,IAAdinB,IAA4B,IAATxlB,GAEP,IAAhB0lB,GAEgB,IAAhBA,GAAqBF,IAAaxlB,EAAM,GAAKwlB,IAAaC,EAAY,GACvD,IAATzlB,IACiCmK,EAAI0b,KAAO1b,EAAI+F,KAAhC,IAAduV,GAAmBrB,EAAkCd,EAAK5hB,MAAM,EAAG1B,GAAgCsjB,EAAK5hB,MAAM+jB,EAAWzlB,KAG7G,IAAdylB,GAAmBrB,GACrBja,EAAI+F,KAAOoT,EAAK5hB,MAAM,EAAG8jB,GACzBrb,EAAI0b,KAAOvC,EAAK5hB,MAAM,EAAG1B,KAEzBmK,EAAI+F,KAAOoT,EAAK5hB,MAAM+jB,EAAWD,GACjCrb,EAAI0b,KAAOvC,EAAK5hB,MAAM+jB,EAAWzlB,IAEnCmK,EAAIK,IAAM8Y,EAAK5hB,MAAM8jB,EAAUxlB,IAG7BylB,EAAY,EAAGtb,EAAI1F,IAAM6e,EAAK5hB,MAAM,EAAG+jB,EAAY,GAAYrB,IAAYja,EAAI1F,IAAM,KAElF0F,CACT,EAEAyb,IAAK,IACLG,UAAW,IACXC,MAAO,KACPnC,MAAO,MAGTA,EAAMA,MAAQA,EAEdlmB,EAAOD,QAAUmmB,WC/gBjB,IAOIoC,EACAC,EARAhC,EAAUvmB,EAAOD,QAAU,CAAC,EAUhC,SAASyoB,IACL,MAAM,IAAItmB,MAAM,kCACpB,CACA,SAASumB,IACL,MAAM,IAAIvmB,MAAM,oCACpB,CAqBA,SAASwmB,EAAWC,GAChB,GAAIL,IAAqBM,WAErB,OAAOA,WAAWD,EAAK,GAG3B,IAAKL,IAAqBE,IAAqBF,IAAqBM,WAEhE,OADAN,EAAmBM,WACZA,WAAWD,EAAK,GAE3B,IAEI,OAAOL,EAAiBK,EAAK,EACjC,CAAE,MAAMze,GACJ,IAEI,OAAOoe,EAAiBthB,KAAK,KAAM2hB,EAAK,EAC5C,CAAE,MAAMze,GAEJ,OAAOoe,EAAiBthB,KAAK7G,KAAMwoB,EAAK,EAC5C,CACJ,CAGJ,EA5CC,WACG,IAEQL,EADsB,mBAAfM,WACYA,WAEAJ,CAE3B,CAAE,MAAOte,GACLoe,EAAmBE,CACvB,CACA,IAEQD,EADwB,mBAAjBM,aACcA,aAEAJ,CAE7B,CAAE,MAAOve,GACLqe,EAAqBE,CACzB,CACJ,CAnBA,GAwEA,IAEIK,EAFAC,EAAQ,GACRC,GAAW,EAEXC,GAAc,EAElB,SAASC,IACAF,GAAaF,IAGlBE,GAAW,EACPF,EAAaxnB,OACbynB,EAAQD,EAAa5d,OAAO6d,GAE5BE,GAAc,EAEdF,EAAMznB,QACN6nB,IAER,CAEA,SAASA,IACL,IAAIH,EAAJ,CAGA,IAAII,EAAUV,EAAWQ,GACzBF,GAAW,EAGX,IADA,IAAI/nB,EAAM8nB,EAAMznB,OACVL,GAAK,CAGP,IAFA6nB,EAAeC,EACfA,EAAQ,KACCE,EAAahoB,GACd6nB,GACAA,EAAaG,GAAYI,MAGjCJ,GAAc,EACdhoB,EAAM8nB,EAAMznB,MAChB,CACAwnB,EAAe,KACfE,GAAW,EAnEf,SAAyBM,GACrB,GAAIf,IAAuBM,aAEvB,OAAOA,aAAaS,GAGxB,IAAKf,IAAuBE,IAAwBF,IAAuBM,aAEvE,OADAN,EAAqBM,aACdA,aAAaS,GAExB,IAEI,OAAOf,EAAmBe,EAC9B,CAAE,MAAOpf,GACL,IAEI,OAAOqe,EAAmBvhB,KAAK,KAAMsiB,EACzC,CAAE,MAAOpf,GAGL,OAAOqe,EAAmBvhB,KAAK7G,KAAMmpB,EACzC,CACJ,CAIJ,CA0CIC,CAAgBH,EAlBhB,CAmBJ,CAgBA,SAASI,EAAKb,EAAKjjB,GACfvF,KAAKwoB,IAAMA,EACXxoB,KAAKuF,MAAQA,CACjB,CAWA,SAAS+jB,IAAQ,CA5BjBlD,EAAQmD,SAAW,SAAUf,GACzB,IAAIgB,EAAO,IAAI3nB,MAAM6D,UAAUvE,OAAS,GACxC,GAAIuE,UAAUvE,OAAS,EACnB,IAAK,IAAIV,EAAI,EAAGA,EAAIiF,UAAUvE,OAAQV,IAClC+oB,EAAK/oB,EAAI,GAAKiF,UAAUjF,GAGhCmoB,EAAMpnB,KAAK,IAAI6nB,EAAKb,EAAKgB,IACJ,IAAjBZ,EAAMznB,QAAiB0nB,GACvBN,EAAWS,EAEnB,EAOAK,EAAKrmB,UAAUkmB,IAAM,WACjBlpB,KAAKwoB,IAAI9e,MAAM,KAAM1J,KAAKuF,MAC9B,EACA6gB,EAAQqD,MAAQ,UAChBrD,EAAQsD,SAAU,EAClBtD,EAAQuD,IAAM,CAAC,EACfvD,EAAQwD,KAAO,GACfxD,EAAQyD,QAAU,GAClBzD,EAAQ0D,SAAW,CAAC,EAIpB1D,EAAQ2D,GAAKT,EACblD,EAAQ4D,YAAcV,EACtBlD,EAAQ6D,KAAOX,EACflD,EAAQ8D,IAAMZ,EACdlD,EAAQ+D,eAAiBb,EACzBlD,EAAQgE,mBAAqBd,EAC7BlD,EAAQiE,KAAOf,EACflD,EAAQkE,gBAAkBhB,EAC1BlD,EAAQmE,oBAAsBjB,EAE9BlD,EAAQoE,UAAY,SAAUpY,GAAQ,MAAO,EAAG,EAEhDgU,EAAQqE,QAAU,SAAUrY,GACxB,MAAM,IAAIrQ,MAAM,mCACpB,EAEAqkB,EAAQH,IAAM,WAAc,MAAO,GAAI,EACvCG,EAAQsE,MAAQ,SAAU/jB,GACtB,MAAM,IAAI5E,MAAM,iCACpB,EACAqkB,EAAQuE,MAAQ,WAAa,OAAO,CAAG,WCvLvC,MAAMC,EAAW,wBACXC,EAAW,+EAMZnjB,OAAOI,UAAYkd,OAAOld,WAC3BJ,OAAOI,SAAWkd,OAAOld,WAExBJ,OAAOojB,YAAc9F,OAAO8F,aAC7BpjB,OAAOojB,WAAa9F,OAAO8F,YAI/B,MAAMC,EAAW,CACb1M,KAAO,EACPC,cAAc,EACd0M,aAAc,IACdC,WAAW,GAwGfprB,EAAOD,QApGP,SAAkBuI,EAAKmO,EAAU,CAAC,GAS9B,GADAA,EAAUxT,OAAOyT,OAAO,CAAC,EAAGwU,EAAUzU,IAClCnO,GAAsB,iBAARA,EAAmB,OAAOA,EAE5C,IAAI+iB,EAAc/iB,EAAIwD,OAKtB,QAAwB7G,IAArBwR,EAAQ6U,UAA0B7U,EAAQ6U,SAASC,KAAKF,GAAa,OAAO/iB,EAC1E,GAAImO,EAAQ+H,KAAOuM,EAASQ,KAAKF,GAClC,OAAOxjB,OAAOI,SAASojB,EAAY,IAKlC,CAED,MAAM/V,EAAQ0V,EAAS9V,KAAKmW,GAC5B,GAAG/V,EAAM,CACL,MAAMkW,EAAOlW,EAAM,GACbmJ,EAAenJ,EAAM,GAC3B,IAAImW,GA6DGC,EA7D2BpW,EAAM,MA8DV,IAAzBoW,EAAOvpB,QAAQ,MAEV,OADdupB,EAASA,EAAO7f,QAAQ,MAAO,KACX6f,EAAS,IACP,MAAdA,EAAO,GAAaA,EAAS,IAAIA,EACL,MAA5BA,EAAOA,EAAOpqB,OAAO,KAAaoqB,EAASA,EAAOxjB,OAAO,EAAEwjB,EAAOpqB,OAAO,IAC1EoqB,GAEJA,EAlEC,MAAMN,EAAY9V,EAAM,IAAMA,EAAM,GACpC,IAAImB,EAAQgI,cAAgBA,EAAand,OAAS,GAAKkqB,GAA0B,MAAlBH,EAAW,GAAY,OAAO/iB,EACxF,IAAImO,EAAQgI,cAAgBA,EAAand,OAAS,IAAMkqB,GAA0B,MAAlBH,EAAW,GAAY,OAAO/iB,EAC/F,CACA,MAAMhG,EAAMuF,OAAOwjB,GACbK,EAAS,GAAKppB,EACpB,OAA8B,IAA3BopB,EAAO7I,OAAO,SAGRuI,EAFF3U,EAAQ2U,UAAkB9oB,EACjBgG,GAIsB,IAA7B+iB,EAAWlpB,QAAQ,KAQV,MAAXupB,GAAyC,KAAtBD,GACdC,IAAWD,GACVD,GAAQE,IAAW,IAAID,EAFyBnpB,EAG7CgG,EAGbmW,EAKIgN,IAAsBC,GACjBF,EAAKC,IAAsBC,EADKppB,EAE5BgG,EAGb+iB,IAAeK,GACVL,IAAeG,EAAKE,EADKppB,EAO1BgG,CACX,CAGJ,CACI,OAAOA,CAEf,CAQJ,IAAmBojB,CAPnB,ugDC1GA,YAGA,SAKA,mBAAsBC,EAAmBlV,GAAsB,wGAEzDmV,EAAM,kFAA2ED,EAAU7f,OAAM,qCACjG6f,EAAU9P,WAAW,QAIrB+P,EAFqB,oBAAXzG,aAA6C,IAAZoB,IAA4B9P,aAAO,EAAPA,EAASoV,MAE1E,0FAAmFF,EAAU7f,QAE7F,sDAA+C6f,EAAU7f,SAK/DggB,EAAO,oBAGE,iCAAM,aAAMF,WAChB,UADPG,EAAW,UACWvI,sBAAtBsI,EAAO,sBAEP,iBAAM,IAAI5pB,MAAM,wCAAiCypB,EAAS,gBAAQC,EAAG,gBAAQ,WAE/E,IAAKG,EAASC,KAAOF,EAAKxqB,OACxB,MAAM,IAAIY,MAAM,0DAAmDypB,EAAS,gBAAQC,IAG9E,UAAM,aAAUE,WAAxB,MAAO,CAAP,EAAQ,SAAuB,UAChC,EAGY,EAAAG,YAAc,SAACN,GAC1B,QAAIA,EAAU9P,WAAW,UAGrB8P,EAAUrqB,OAAS,IAAMqqB,EAAUrW,MAAM,oBAI/C,4/CC9CA,aACA,SAyDS,EAAA4W,UAzDF,UAkDP,mBAAsBjZ,EAAewD,GAAsB,mGACpDA,aAAO,EAAPA,EAAS0V,aAAY,IAAAF,aAAYhZ,GAAlC,MACK,IAAM,aAAUA,EAAOwD,WAA9B,MAAO,CAAP,EAAO,iBAET,MAAO,CAAP,GAAO,aAAUxD,EAAOwD,GAAS,UAClC,+ECxDD,aAGA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SAKA,mBAAgB2V,EAAcC,GAC5B,IAAMF,GAAWE,aAAI,EAAJA,EAAMF,WAAY,GAC7BG,EAAaH,EAAS1Y,MAAM,EAAAwU,KAAKrQ,OAASuU,EAEhD,IAAKC,EACH,MAAMlqB,MAAM,qCAKd,IAAMqqB,EAAYH,EAAKlV,UAAU,EAAGkV,EAAKvJ,OAAO,OAE1C2J,EADgBD,EAAU1gB,QAAQ,cAAe,IAAIvK,OACvBirB,EAAUjrB,OAAS,GACjDiR,EAAO4Z,GAAYG,EAAaA,EAAWpV,UAAU,EAAGoV,EAAWzJ,OAAO,QAAU,WAKtF4J,GAAc,EAClB,IACE,IAAM,EAAgBxU,KAAKiL,MAAMkJ,GAC7B,CAAC,QAAS,cAAe,WAAWM,OAAM,SAAAC,GAAK,YAA4B,IAArB,EAAcA,EAArB,MACjDF,GAAc,GAEhB,MAAOG,IAIT,IACIC,EADE7M,EAASoM,EAAKlV,UAAU,EAAG,KAEjC,QAAQ,GAEN,KAAK8I,EAAO5T,SAAS,mCACrB,KAAKggB,EAAKvQ,WAAW,YACnBgR,GAAO,aAAUT,GACjB,MAGF,KAAKA,EAAKvQ,WAAW,KACrB,KAAKuQ,EAAKvQ,WAAW,KACrB,KAAKsQ,EAAS1O,SAAS,QACvB,KAAK0O,EAAS1O,SAAS,OACvB,KAAK0O,EAAS1O,SAAS,QACvB,KAAK0O,EAAS1O,SAAS,UACrBoP,GAAO,aAAWT,EAAMD,GACxB,MAGF,KAAKC,EAAKhgB,SAAS,UAAYggB,EAAKhgB,SAAS,UAC7C,KAAK+f,EAAS1O,SAAS,OACvB,KAAK0O,EAAS1O,SAAS,QACvB,KAAK0O,EAAS1O,SAAS,YACvB,KAAK0O,EAAS1O,SAAS,QACrBoP,GAAO,aAAaT,EAAMD,GAC1B,MAGF,KAAKA,EAAS1O,SAAS,QACrBoP,GAAO,aAAcR,GACrB,MAGF,KAAKrM,EAAO5T,SAAS,yBACrB,KAAK+f,EAAS1O,SAAS,QACrBoP,GAAO,aAAgBT,EAAMD,GAC7B,MAGF,KAAKnM,EAAO5T,SAAS,uBACrB,KAAK4T,EAAO5T,SAAS,eACnBygB,GAAO,aAAcT,GACrB,MAGF,KAAKK,EACHI,GAAO,aAAeT,GACtB,MAGF,KAAKpM,EAAO5T,SAAS,OACnBygB,GAAO,aAAUT,EAAMD,GACvB,MAGF,KAAKK,EACK,IAAAM,GAAQ,IAAAC,YAAWX,GAAK,IAChCS,EAAO,CAAC,CAAEG,YAAa,GAAIza,KAAI,EAAEua,IAAG,EAAE3nB,MAAM,IAAA8nB,WAAUH,KACtD,MAGF,QACE,MAAM5qB,MAAM,UAAGiqB,EAAQ,sCAA8BC,IAIzD,OAAOS,EAAK1U,KAAI,SAAA+U,GAAK,OACnBF,YAAaE,EAAEF,YACZG,MAAK,SAACpiB,EAAGlG,GAAM,OAAAkG,EAAE3I,MAAQyC,EAAEzC,OAAS2I,EAAE1I,IAAMwC,EAAExC,GAA/B,IACf8V,KAAI,SAAApN,GAAK,OACRqiB,MAAOriB,EAAEqiB,MACTC,UAAWtiB,EAAEsiB,UACbhrB,IAAK0I,EAAE1I,IACPkQ,KAAMxH,EAAEwH,KACRnQ,MAAO2I,EAAE3I,MACT+C,KAAM4F,EAAE5F,KANA,IAQZoN,KAAM2a,EAAE3a,KACRua,IAAKI,EAAEJ,IACP3nB,KAAM+nB,EAAE/nB,KAbW,GAetB,8TC7HD,aAKA,mBAAgBqe,GACd,IAAM8J,EAAWrV,KAAKiL,MAAMM,GACpBsJ,GAAQ,IAAAC,YAAWO,EAASC,OAAM,IAG1C,GAAIT,EAAIxrB,OAAS,EACf,MAAM,IAAIY,MAAM,0CAGlB,MAAO,CACL,CACE8qB,YAAaM,EAASN,YAAY7U,KAAI,SAAApN,GAAK,cACtCA,GAAC,CACJsiB,WAAW,IAAAG,gBAAeziB,EAAE0iB,SAFa,IAI3Clb,KAAM+a,EAAS/a,MAAQ+a,EAASI,IAChCZ,IAAKA,EACL3nB,MAAM,IAAA8nB,WAAUH,IAGrB,+EC1BD,aAGA,SAOA,mBAAgBV,GACd,IAKMuB,EAAiB,IAAI,EAAAxZ,UAAU,CACnC/O,QAAS,SAAAmN,GACP,MAAO,CAAC,WAAY,YAAa,aAAanG,SAASmG,EACzD,EACA4L,gBAAgB,IACf+E,MAAMkJ,GAGDwB,EAASD,EAAeE,OAAOC,UAAS,KAC3CF,GAdQ,SAAC9W,GACZ,MAAM,IAAI5U,MAAM,8BAaF,6BAZhB,CAYW6rB,GAGH,IAAAC,EAAmCJ,EAAI,SAA7BK,EAAyBL,EAAI,UAAlBM,EAAcN,EAAI,UAEzCrb,GAAO,IAAA4b,cAAaF,GAGpBjB,EAAcgB,EACjB7V,KAAI,SAAC,OAAEiW,EAAO,UACb,IAAKA,EAAS,OAAO,KAEb,IAAAf,EAAsCe,EAAO,UAAlCC,EAA2BD,EAAO,OAA1BE,EAAmBF,EAAO,SAAhBjpB,EAASipB,EAAO,KAErD,MAAO,CACLf,WAAW,IAAAG,gBAAeH,GAC1BhrB,KAAMgsB,EACN9b,KAAM,UAAG8a,EAAS,YAAIiB,GACtBlsB,OAAQksB,GAAY,EACpBnpB,KAAMA,QAAQF,EAElB,IACCspB,QAAO,SAAAxjB,GAAK,OAAAA,CAAA,IAGP+hB,GAAQ,IAAAC,YAAWmB,EAAU,GAAGM,UAAS,IAEjD,MAAO,CACL,CACExB,YAAaA,EACbza,KAAI,EACJua,IAAG,EACH3nB,MAAM,IAAA8nB,WAAUH,IAGrB,+EC3DD,aAEA,mBAAgBtJ,EAAc2I,GAE5B,GAAI3I,EAAK1X,OAAO+P,WAAW,KACzB,OAAO2H,EACJ/P,MAAM,KACN0E,KAAI,SAAAC,GAKH,IAAM0U,EAAM1U,EAAElQ,OAAOkQ,EAAEjW,QAAQ,MAAOiW,EAAE9W,QAAQuK,QAAQ,MAAO,IAO/D,MAAO,CACLmhB,YAAa,GACbza,KAJW6F,EAAElB,UAAU,EAAGkB,EAAEyK,OAAO,UAAUhX,QAAQ,MAAO,IAK5DihB,IAAG,EACH3nB,MAAM,IAAA8nB,WAAUH,GAEpB,IACCyB,QAAO,SAAArB,GAAK,OAAAA,EAAE3a,MAAQ2a,EAAEJ,GAAZ,IAGjB,GAAItJ,EAAK1X,OAAO+P,WAAW,KAAM,CAK/B,IAAM,EAAO2H,EAAKtM,UAAU,EAAGsM,EAAKX,OAAO,UAAUhX,QAAQ,MAAO,IAC9D4iB,EAAmBjL,EAAKrhB,QAAQ,KAAMqhB,EAAKvc,YAAY,MACvD,EAAMuc,EAAKtM,UAAUuX,EAAkBjL,EAAKliB,QAClD,MAAO,CACL,CACE0rB,YAAa,GACbza,KAAI,EACJua,IAAG,EACH3nB,MAAM,IAAA8nB,WAAU,KAOtB,IAAMyB,EAAWvC,EAASllB,YAAY,MAAQklB,EAAS7qB,OAEjDwrB,EAAMtJ,EACZ,MAAO,CACL,CACEwJ,YAAa,GACbza,KALS4Z,EAASjV,UAAU,EAAGwX,IAAa,WAM5C5B,IAAG,EACH3nB,MAAM,IAAA8nB,WAAUH,IAGrB,+EC5DD,aAGM6B,EAAa,IAAIC,IAAI,CAAC,OAAQ,UAAW,OAAQ,UAAW,aAAc,QAAS,WAAY,cAG/FC,EAAc,IAAID,IAAI,CAAC,mBAAoB,mBAAoB,eAWrE,mBAAgBE,EAAmB3C,GACjC,OAAA2C,EACGrb,MAAM,WACN8a,QAAO,SAAAQ,GAAK,OAAAA,EAAEztB,OAAS,CAAX,IACZ6W,KAAI,SAAAiU,GAGH,IAMI4C,EANe5C,EAAKlV,UAAUkV,EAAKjqB,QAAQ,SAAUiqB,EAAKvJ,OAAO,WACzCpP,MAAM,WAAW8a,QAAO,SAAAU,GAAK,OAAAA,CAAA,IAA5C,GAMb,GACkB,aAAfD,GAA6B5C,EAAKhgB,SAAS,aAC5CvE,OAAOI,SAAS+mB,EAAY,IAC5B,CAEA,IAAIE,GAAgB,EACpB,GAAI9C,EAAKhgB,SAAS,aAAc,CAE9B,IAAMuf,EAAYS,EACflV,UAAUkV,EAAKjqB,QAAQ,aAAciqB,EAAKjqB,QAAQ,KAAMiqB,EAAKjqB,QAAQ,eACrE0J,QAAQ,IAAK,IACb4H,MAAM,UACN8a,QAAO,SAAAxjB,GAAK,MAAM,cAANA,CAAA,IACZ6M,MACC+T,IACFqD,EAAarD,EACbuD,GAAgB,IAKfA,GAAiB/C,EACpB6C,EAAa7C,EACVjV,UAAU,EAAGlO,KAAK4C,IAAIugB,EAAStJ,OAAO,YAAasJ,EAASllB,YAAY,OACxE4E,QAAQ,QAAS,IACVqjB,IACVF,EAAa,WAUjB,IACIlC,EADaV,EAAKlV,UAAUkV,EAAKnlB,YAAY,UAAY,EAAiBmlB,EAAK9qB,QAChEuK,QAAQ,YAAa,IACrCihB,GAAQ,IAAAC,YAAWD,GAAI,IAc1B,IAAME,EAA4B,GAElC,GAAIZ,EAAKjqB,QAAQ,YAAa,CAC5B,IAAMgtB,EAAgB/C,EAAKjqB,QAAQ,YAC7BitB,EAAoBhD,EAAKjqB,QAAQ,KAAMgtB,GACzCE,EAAcjD,EAAKnlB,YAAY,UAI/BmlB,EAAKhgB,SAAS,YAChBijB,EAAcrmB,KAAKC,IAAIomB,EAAajD,EAAKjqB,QAAQ,YAE7BiqB,EACnBlV,UAAUkY,EAAmBC,GAC7B5b,MAAM,MACN8a,QAAO,SAAAe,GAAK,OAAAA,CAAA,IAEDC,SAAQ,SAAAD,GAEpB,IAAME,EAAWF,EAAE7b,MAAM,WAAW8a,QAAO,SAAAkB,GAAK,OAAAA,CAAA,IAChD,GAAID,EAASluB,OAAS,EAAG,CAEhB,IAAA6D,EAAqBqqB,EAAQ,GAAvBE,EAAeF,EAAQ,GAC9BG,EAAa,OACbtC,EAAYiC,EAAEljB,SAAS,eAAiB,EAAI,EAG9C,EAAe,CAAC,EAAG,GAAlBhK,EAAK,KAAEC,EAAG,KACTutB,EAAcD,EAAWza,KAAKwa,GAEpC,GAAIE,EAAa,CAKfvtB,GAAe,GAHfD,GAASwtB,EAAY,GAAM,EAAI9C,EAAIxrB,SAGfwrB,EAAIxrB,OACxB,IAAMuuB,EAAYF,EAAWza,KAAKwa,GAC9BG,IACFxtB,GAAOwtB,EAAU,GAAK/C,EAAIxrB,QAIjB,WAAT6D,GAEF6nB,EAAYrrB,KAAK,CACf0rB,UAAS,EAEThrB,IAAG,EACHkQ,KAAM,GACNnQ,MAAK,EACL+C,KAAI,SAGH,GAAwB,IAApBqqB,EAASluB,QAIdkuB,EAAS,GAAG3T,WAAW,KAAM,CAC1B,IAAAiU,EAAON,EAAQ,GAGd,GAFNM,EAAMA,EAAIjkB,QAAQ,QAAS,KAEK4H,MAAM,KAA/BwD,EAAO,KAAEuG,EAAQ,KAGlBuS,EAAU/C,EAAY1rB,OAAS,EACjCqtB,EAAWqB,IAAI/Y,EAAQhR,eAErB8pB,GAAW,IAAM/C,EAAY+C,GAASxd,OACxCya,EAAY+C,GAASxd,KAAOiL,EAAS1R,QAE9B+iB,EAAYmB,IAAI/Y,IAErB8Y,GAAW,IACb/C,EAAY+C,GAAS3C,MAAQ5P,GAKvC,IAGF,MAAO,CACLwP,YAAaA,EACbza,KAAMyc,EAAWljB,QAAUqgB,EAC3B8D,QAnFc,GAoFdnD,IAAKA,EACL3nB,MAAM,IAAA8nB,WAAUH,GAEpB,GAAE,+EC5KN,aAGA,SAOA,mBAAgBoD,GAEd,IAAMC,EAAaD,EAAKrkB,QAAQ,OAAQ,KAQhCihB,EALW,IAAI,EAAA3Y,UAAU,CAC/BgK,gBAAgB,IACf+E,MAAMiN,GAGiB,IAClBnC,EAA6BlB,EAAG,SAAtBva,EAAmBua,EAAG,KAAhBsD,EAAatD,EAAG,SAGpCkC,EAAa,UACbzc,IACFyc,EAAazc,GAIP,IAAK8d,GAAc,IAAAtD,YAAWqD,GAAS,IAC/C,IAAKC,EAAW,MAAO,GAGvB,IAAMrD,EAA4B,GAmBlC,OAlBIgB,GAAYA,EAASI,SACvBJ,EAASI,QAAQmB,SAAQ,SAAAnB,GACvB,GAAKA,EAAL,CAEQ,IAAArB,EAAsCqB,EAAO,WAAjCkC,EAA0BlC,EAAO,MAA1BmC,EAAmBnC,EAAO,SAAhBjpB,EAASipB,EAAO,KACjDmC,GAAYA,EAASC,cAAgBD,EAASluB,KAChD2qB,EAAYrrB,KAAK,CACf0rB,UAAWN,GAAc,EAAI,EAE7B1qB,KAAMkuB,EAASluB,KAAO,EACtBkQ,KAAM+d,GAAS,WACfluB,OAAQmuB,EAASC,aAAe,GAAK,EACrCrrB,KAAMA,GAAQ,OAVE,CAatB,IAGK,CACL,CACE6nB,YAAaA,EACbza,KAAMyc,EACNlC,IAAKuD,EACLlrB,MAAM,IAAA8nB,WAAUoD,IAGrB,+EC5DD,aACA,SAMA,mBAAgBI,EAActE,GAC5B,OAAAsE,EAAKrkB,SAAS,kBAAmB,aAAOqkB,IAAQ,aAAOA,EAAMtE,EAAS,+ECTxE,aAGA,SAsBA,mBAAgBsE,GAEd,IAAMN,EAAaM,EAAK5kB,QAAQ,OAAQ,KAGlC6kB,EAAa,IAAI,EAAAvc,UAAU,CAC/BoF,kBAAkB,EAClBnU,QAAS,SAAAmN,GACP,OACE,WACA,aACA,eACA,cACA,sBACA,qBACA,qBACA,WACA,YACA,cACAnG,SAASmG,EAXX,EAYF4L,gBAAgB,IACf+E,MAAMiN,GAELQ,EAAM,KACND,EAAWC,MAAQA,EAAQD,EAAU,KAGjC,IAAAE,EAA6BD,EAAG,WAApBE,EAAiBF,EAAG,aACxC,GAAIC,GAAcA,EAAWtvB,OAAQ,CAEnC,IAAM,EAAW,GAgBjB,GAfAsvB,EAAWrB,SAAQ,SAAC,OAAEuB,EAAS,YACzBA,GAAaA,EAAUxvB,QACzBwvB,EAAUvB,SAAQ,SAAC,OAAgBwB,EAAkB,eACnD,EAASpvB,KAEPqvB,EAAmBD,EAAmB,GAAI,CACxC3E,KAAMqE,EACNQ,QAAQ,IAGd,GAEJ,IAGI,EAAS3vB,OAAQ,OAAO,OACvB,GAAIuvB,GAAgBA,EAAavvB,OAAQ,CAE9C,IAAM4vB,EAAYF,EAAmBH,EAAa,GAAI,CACpDzE,KAAMqE,EACNQ,QAAQ,IAGV,GAAIC,EAAW,MAAO,CAACA,GAMzB,IAAMC,EAA0B,GAChCC,EAAsBD,EAAyBR,GAG/C,IAAMU,EAAuBF,EAC1BhZ,KAAI,SAAA+U,GACH,OAAA8D,EAAmB9D,EAAG,CACpBd,KAAMqE,EACNQ,QAAQ,GAFV,IAKD1C,QAAO,SAAArB,GAAK,QAAEA,CAAF,IACf,GAAImE,EAAc/vB,OAAQ,OAAO+vB,EAGjC,IAAMC,EAAyB,GAE/B,OADAC,EAAkBD,EAAwBX,GACnCW,EAAuBnZ,KAAI,SAAA+U,GAAK,OAAAsE,EAAetE,EAAGuD,EAAlB,IAAyBlC,QAAO,SAAArB,GAAK,OAAAA,CAAA,GAC7E,EAOD,IAAMqE,EAAoB,SAACE,EAAKC,GAC9BzuB,OAAO4R,KAAK6c,GAAKnC,SAAQ,SAAA5C,GACb,aAANA,GAAoB+E,EAAI/E,GAAGrrB,QAAQmwB,EAAI9vB,KAAI,MAAR8vB,EAAYC,EAAI/E,IACnD3qB,MAAMoD,QAAQssB,EAAI/E,KACpB+E,EAAI/E,GAAG4C,SAAQ,SAAAoC,GACbJ,EAAkBE,EAAKE,EACzB,GAEJ,GACF,EAOMX,EAAqB,SAACH,EAAcpa,GAChC,MAAmBA,EAAO,OAA1Bwa,OAAM,IAAG,GAAK,EAEdW,EAA6Cf,EAAY,WAA7CgB,EAAiChB,EAAY,UAAlCiB,EAAsBjB,EAAY,YAArBte,EAASse,EAAY,KAG7D7B,EAAa,UACjB,GAAIzc,EACFyc,EAAazc,OACR,GAAIsf,EACT7C,EAAa6C,OACR,GAAIZ,EAGT,OAAO,KAIT,IAAInE,EAAM,GACNgF,GAAeA,EAAY,GAAGC,cAChCjF,EAAMgF,EAAY,GAAGC,YAAYC,aAG3B,IAAK3B,GAAc,IAAAtD,YAAWD,GAAI,IAC1C,IAAKuD,EAAW,OAAO,KAGvB,IAAMrD,EAA4B,GAoBlC,OAnBI4E,GACFA,EAAWrC,SAAQ,SAAC,OAAE0C,EAAkB,qBACtC,GAAKA,GAAuBA,EAAmB,GAA/C,CAEM,MAA6CA,EAAmB,GAA9DC,EAAM,SAAEC,EAAQ,WAAE1E,EAAM,SAAE2E,EAAY,eAC9C,GAAIA,GAAgBA,EAAavB,cAAgBuB,EAAavB,aAAa,GAAI,CACvE,MAAqDuB,EAAavB,aAAa,GAAlEwB,EAAK,YAAQC,EAAO,OAAQC,EAAO,OAEtDvF,EAAYrrB,KAAK,CACf0rB,UAAsB,MAAXI,EAAiB,GAAK,EACjCprB,IAAK6vB,EAAS,GAAK,EACnB3f,KAAM+f,GAAWD,GAAS,WAC1BjwB,MAAO+vB,EAAW,GAAK,EACvBhtB,KAAMotB,EAAQ,eAAiB,QAXsB,CAc3D,IAGK,CACLvF,YAAaA,EACbza,KAAMyc,EACNlC,IAAKuD,EACLlrB,MAAM,IAAA8nB,WAAUH,GAEpB,EAOM0E,EAAiB,SAACgB,EAAKpG,GAE3B,IAAM7Z,EAAOigB,EAAIX,WAAaW,EAAI5I,OAAS,UAGrC6I,EAAUD,EAAIE,SAAS,IAAM,GAE7B,GAAmB,IAAA3F,YAAW0F,GAA5BE,EAAO,UAAE7F,EAAG,MAMpB,MAAO,CAAEE,YAAa,GAAI4F,SAFTxG,EAAKvJ,OAAO,YAAc,EAEP8P,QAAO,EAAEpgB,KAAI,EAAEua,IAAG,EAAE3nB,MAAM,IAAA8nB,WAAUH,GAC1E,EAQMsE,EAAwB,SAACK,EAAYC,GACzCzuB,OAAO4R,KAAK6c,GAAKnC,SAAQ,SAAA5C,GACb,iBAANA,GAAwB+E,EAAI/E,GAAGrrB,QAAQmwB,EAAI9vB,KAAI,MAAR8vB,EAAYC,EAAI/E,IACvD3qB,MAAMoD,QAAQssB,EAAI/E,KACpB+E,EAAI/E,GAAG4C,SAAQ,SAAAoC,GACbP,EAAsBK,EAAKE,EAC7B,GAEJ,GACF,+ECzNA,aAGA,SAUA,mBAAgBlB,EAActE,GAE5B,IAAMgE,EAAaM,EAAK5kB,QAAQ,OAAQ,KAGlC6kB,EAAa,IAAI,EAAAvc,UAAU,CAC/BoF,kBAAkB,EAClBnU,QAAS,SAAAmN,GACP,OAAC,WAAY,sBAAuB,qBAAsB,qBAAsB,YAAYnG,SAASmG,EAArG,EACF4L,gBAAgB,IACf+E,MAAMiN,GAET,IACE,IAAM0C,EAAUC,EAAWpC,EAAYvE,GAEvC,GAAI0G,EAAQvxB,OACV,OAAOuxB,EAEP,MAAM,IAAI3wB,MAAM,0BAElB,MAAO4U,GACP,MAAM,IAAI5U,MAAM,wCAAiC4U,IAEpD,EAED,IAAMgc,EAAa,SAACpC,EAAYvE,GAC9B,IAAIwE,EAAM,KAKV,GAJID,EAAWC,MACVA,EAAQD,EAAU,MAGlBC,EACH,MAAM,IAAIzuB,MAAM,wBAIV,IAAA6wB,EAAkCpC,EAAG,oBAAhBqC,EAAarC,EAAG,SAC7C,IAAKoC,IAAwBC,EAC3B,MAAM,IAAI9wB,MAAM,+DAIlB,IAAM+wB,EAAS,SAACC,GACd,IAAMC,EAAaD,EAEfF,EAASI,MACP,SAAAzO,GACE,OAACA,EAAE0O,oBAAsB1O,EAAE0O,mBAAmB/xB,QAAUqjB,EAAE0O,mBAAmB,gBAAkBH,GAC/FvO,EAAE,aAAeuO,CADjB,IAGJF,EAAS,GAEb,GAAIG,GAAcA,EAAWT,SAAU,CAC7B,OAAQ,IAAA3F,YAAWoG,EAAWT,SAAS,IAAM,IAAG,IACxD,MAAO,CACL1F,YAAa,GACbza,KAAM4gB,EAAWtB,UACjB/E,IAAG,EACH3nB,MAAM,IAAA8nB,WAAU,IAGpB,OAAO,IACT,EAGM4F,EAAiB,GAEvBE,SAAAA,EAAqBxD,SAAQ,SAAC3mB,EAAGhI,GAE/B,GAAKgI,EAAEwnB,SAAP,CAIQ,IAAAyB,EAA4CjpB,EAAC,UAAlCwnB,EAAiCxnB,EAAC,SAAxB0qB,EAAuB1qB,EAAC,mBAC/C2J,EAAOsf,GAAa,UAAG1F,EAAQ,YAAIvrB,EAAI,GAEvCosB,EAA4B,IACjCsG,GAAsB,IAAI/D,SAAQ,SAAC,OAC5BgE,EADgD,qBACvB,GACzBlB,EAAQkB,EAAI1B,UAGZlf,EAFY4gB,EAAIhD,SAAQ,MAG1B5d,GACFqa,EAAYrrB,KAAK,CACfU,IAAKsQ,EAAMtQ,IAAM,EACjBkQ,KAAM8f,EACNjwB,MAAOuQ,EAAMvQ,MAAQ,GAG3B,IAEA,IAAM0qB,EAAMmG,EAAO7C,EAAS,eAExBtD,GACF+F,EAAQlxB,KAAK,CACXqrB,YAAW,EACXza,KAAI,EACJua,IAAKA,EAAIA,IACT3nB,KAAM2nB,EAAI3nB,OAGhB,IAGA,IAAM2nB,EAAMmG,IAIZ,OAHKJ,EAAQvxB,QAAUwrB,GACrB+F,EAAQlxB,KAAKmrB,GAER+F,CACT,+EC1HA,aAGMW,EAAc,CAAC,OAAQ,UAAW,OAAQ,UAAW,aAAc,QAAS,YAG5EC,EAAe,CAAC,mBAAoB,mBAAoB,cAQ9D,mBAAgB3E,EAAmB3C,GACjC,OAAA2C,EAAUrb,MAAM,WAAW0E,KAAI,SAAAiU,GAI7B,IASIU,EATaV,EACdlV,UACCkV,EAAKvJ,OAAO,gDAEVuJ,EAAK9W,MAAM,gDAAgD,GAAGhU,OAChE8qB,EAAK9qB,QAENgU,MAAM,0BAA0B,GAGhCwX,GAAQ,IAAAC,YAAWD,GAAI,IAG1B,IAAIkC,EAAa7C,EAAS7qB,OAAS,EAAI6qB,EAAW,UAElD,IAAKC,EAAKjqB,QAAQ,SAAU,CAC1B,IAAMuxB,EAAatH,EAAKlV,UAAUkV,EAAKjqB,QAAQ,SAAUiqB,EAAKvJ,OAAO,WACjE6Q,GAAcA,EAAWjgB,MAAM,aAEjCub,EADiB0E,EAAWjgB,MAAM,WAAW8a,QAAO,SAAAU,GAAK,OAAAA,CAAA,IAA5C,IAKjB,GACkB,aAAfD,GAA6B5C,EAAKhgB,SAAS,aAC5CvE,OAAOI,SAAS+mB,EAAY,IAC5B,CAEA,IAAIE,GAAgB,EACpB,GAAI9C,EAAKhgB,SAAS,aAAc,CAE9B,IAAMuf,EAAYS,EACflV,UAAUkV,EAAKjqB,QAAQ,aAAciqB,EAAKjqB,QAAQ,KAAMiqB,EAAKjqB,QAAQ,eACrE0J,QAAQ,IAAK,IACb4H,MAAM,UACN8a,QAAO,SAAAxjB,GAAK,MAAM,cAANA,CAAA,IACZ6M,MACC+T,IACFqD,EAAarD,EACbuD,GAAgB,IAKfA,GAAiB/C,EACpB6C,EAAa7C,EACVjV,UAAU,EAAGlO,KAAK4C,IAAIugB,EAAStJ,OAAO,YAAasJ,EAASllB,YAAY,OACxE4E,QAAQ,QAAS,IACVqjB,IACVF,EAAa,WAiBjB,IAAMhC,EAA4B,GAClC,GAAIZ,EAAKjqB,QAAQ,YAAa,CAC5B,IAAMgtB,EAAgB/C,EAAKjqB,QAAQ,YAC7BitB,EAAoBhD,EAAKjqB,QAAQ,KAAMgtB,GACzCE,EAAcjD,EAAKnlB,YAAY,UAI/BmlB,EAAKhgB,SAAS,YAChBijB,EAAcrmB,KAAKC,IAAIomB,EAAajD,EAAKjqB,QAAQ,YAE7BiqB,EACnBlV,UAAUkY,EAAmBC,GAC7B5b,MAAM,MACN8a,QAAO,SAAAe,GAAK,OAAAA,CAAA,IAEDC,SAAQ,SAAAD,GAEpB,IAAME,EAAWF,EAAE7b,MAAM,WAAW8a,QAAO,SAAAkB,GAAK,OAAAA,CAAA,IAChD,GAAID,EAASluB,OAAS,EAAG,CAEhB,IAAA6D,EAAqBqqB,EAAQ,GAAvBE,EAAeF,EAAQ,GAC9BG,EAAa,OACbtC,EAAYiC,EAAEljB,SAAS,eAAiB,EAAI,EAG9C,EAAe,CAAC,EAAG,GAAlBhK,EAAK,KAAEC,EAAG,KACTutB,EAAcD,EAAWza,KAAKwa,GAEpC,GAAIE,EAAa,CAEfxtB,GAASwtB,EAAY,GAAM,EAAI9C,EAAIxrB,OACnC,IAAMuuB,EAAYF,EAAWza,KAAKwa,GAC9BG,IACFxtB,GAAOwtB,EAAU,GAAK/C,EAAIxrB,QAIjB,WAAT6D,GAGF6nB,EAAYrrB,KAAK,CACf0rB,UAAS,EACThrB,IAAG,EACHkQ,KAAM,GACNnQ,MAAK,EACL+C,KAAI,SAGH,GAAwB,IAApBqqB,EAASluB,OAAc,CAI3B,IAAAwuB,EAAON,EAAQ,GAGd,GAFNM,EAAMA,EAAIjkB,QAAQ,QAAS,KAEK4H,MAAM,KAA/BwD,EAAO,KAAEuG,EAAQ,KAGlBmW,EAAe3G,EAAY1rB,OAAS,EACtCkyB,EAAYpnB,SAAS6K,GAEnB0c,GAAgB,IAAM3G,EAAYA,EAAY1rB,OAAS,GAAGiR,OAE5Dya,EAAYA,EAAY1rB,OAAS,GAAGiR,KAAOiL,EAAS1R,QAE7C2nB,EAAarnB,SAAS6K,IAE3B0c,GAAgB,IAElB3G,EAAYA,EAAY1rB,OAAS,GAAG8rB,MAAQ5P,GAIpD,IAGF,MAAO,CACLwP,YAAaA,EACbza,KAAMyc,EAAWljB,QAAUqgB,EAC3BW,IAAKA,EACL3nB,MAAM,IAAA8nB,WAAUH,GAEpB,GAAE,0UCzKJ,aACA,SAGA,SAQA,mBAAgBrW,SACd,IAAKA,IAAYA,EAAQmd,OACvB,MAAM,IAAI1xB,MAAM,sDAGlB,IAAMiqB,GAAW1V,aAAO,EAAPA,EAAS0V,WAAY,GAChCW,EAAM,CACVE,YAAa,GACb4F,UAAU,EACVrgB,KAAM,GACNua,IAAK,GACL3nB,KAAM,WAGFZ,EAAS3B,EAAOY,KAAKiT,EAAQmd,QAG/BhsB,EAAS,EAGPN,EAAO,SAAC7B,GACZ,IAAMrD,EAAQwF,EAEd,OADAA,GAAUnC,EACHlB,EAAOkJ,SAASrL,EAAOwF,EAChC,EAGMisB,EAAU,SAACpuB,EAAcquB,GAAwB,OAAAxsB,EAAK7B,GAAME,SAASmuB,EAApB,EAGvDxsB,EAAK,GAGL,IAAMhG,EAASgG,EAAK,GAAGiH,eACjBqb,EAAQiK,EAAQ,EAAG,SACzB,GAAe,KAAXvyB,GAA2B,aAAVsoB,EACnB,MAAM,IAAI1nB,MAAM,mDAA4CZ,EAAM,kBAAUsoB,IAS9E,IANAtiB,EAAK,GACLA,EAAK,GACLA,EAAK,GAIEM,EAASrD,EAAOjD,QAAQ,CAoB7B,IAAMyyB,EAAWzsB,EAAK,GAChB0sB,EAAY1sB,EAAK,GAAGiH,eACpB0lB,EAAMF,EAASpuB,WAAWxE,WAAW,GAC3C,GAAY,IAAR8yB,EAAW,CAEb3sB,EAAK,GAEL,IAAM7B,EAAOuuB,EAAY,EACzB,GAAIvuB,EAAO,EAAG,MAAM,IAAIvD,MAAM,gDAC9B4qB,EAAIA,IAAM+G,EAAQpuB,EAAM,cACnB,GAAY,KAARwuB,EAAY,CAErB,IAAMC,EAAML,EAAQG,EAAW,QACrB,IAAI,EAAA7f,UAAU,CACtBiF,oBAAqB,GACrBG,kBAAkB,EAClBnU,QAAS,SAAAmN,GAAQ,MAAS,MAATA,GAAyB,YAATA,CAAhB,EACjB4L,gBAAgB,IACf+E,MAAMgR,GAEPC,SAASC,QAAQ7E,SAAQ,SAAAnB,GACzB,IAAIiG,EAAW,EACXC,EAAS,EAEP,EADYlG,EAAQmG,QAAQ,GAAE,MACT9gB,MAAM,KAA1BrR,EAAK,KAAEC,EAAG,KACjBgyB,EAAwB,IAAbA,GAAkBjyB,EAAQ4G,KAAKC,IAAIorB,GAAWjyB,GACzDkyB,EAAStrB,KAAK4C,IAAI0oB,GAASjyB,GAG3ByqB,EAAIE,YAAYrrB,KAAK,CACnB0rB,WAAW,IAAAG,gBACT,CACE,EAAK,OACL,EAAK,EACL,GAAM,EACN,EAAK,gBACLvoB,UAAW,QACXmpB,EAAQoG,iBAEZnyB,IAAKiyB,EAAS,EACd/hB,KAAM6b,EAAQ7b,KACdnQ,MAAOiyB,EAAW,EAClBlvB,KAAMipB,EAAQjpB,MAElB,SAGAmC,EAAK0sB,GAIT,MAAO,QAEAlH,GAAG,CAENva,MAA+B,QAAzB,EAAA4Z,EAAS1Y,MAAM,EAAAwU,KAAKrQ,aAAK,eAAE/L,QAAQ,OAAQ,MAAOsgB,EACxDhnB,MAAM,IAAA8nB,WAAUH,EAAIA,OAGzB,iKCvID,IAAM2H,EAAO,CACXC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACH3qB,EAAG,IACHlG,EAAG,IACH+D,EAAG,IACH8b,EAAG,IACHiR,EAAG,IACH1G,EAAG,IACHtC,EAAG,IACHhmB,EAAG,IACHD,EAAG,IACH4oB,EAAG,IACH3K,EAAG,IACHvM,EAAG,IACHwd,EAAG,IACHjhB,EAAG,IACHkhB,EAAG,IACH7qB,EAAG,IACHC,EAAG,KAMQ,EAAA8hB,WAAa,SAAC+I,GACzB,IAAKA,EACH,MAAO,CAAEnD,QAAS,GAAI7F,IAAK,IAM7B,IAFA,IAAIA,EAAM,GACN6F,EAAU,GACL/xB,EAAI,EAAGm1B,EAAaD,EAAQx0B,OAAQV,EAAIm1B,EAAYn1B,GAAK,EAC5D6zB,EAAKqB,EAAQl1B,MACfksB,GAAOgJ,EAAQl1B,GACf+xB,GAAW8B,EAAKqB,EAAQl1B,KAG5B,MAAO,CAAE+xB,QAAO,EAAE7F,IAAG,EACvB,EAKa,EAAAkJ,kBAAoB,SAACC,GAEhC,OADoB,IAAAlJ,YAAWkJ,GAAS,QACzBxiB,MAAM,IAAIyiB,UAAUp0B,KAAK,GAC1C,EAEa,EAAAqsB,aAAe,SAACttB,GAC3B,GAAKmB,MAAMoD,QAAQvE,GACnB,OAAOA,EAAI,EACb,EAEA,IAAMs1B,EAAM,IAAIvH,IAAI,CAAC,MAAO,MAAO,UAAW,UAAW,MAAO,MAAO,MAAO,MAAO,IAAK,IACpFwH,EAAM,IAAIxH,IAAI,CAAC,MAAO,MAAO,UAAW,UAAW,SAAU,SAAU,MAAO,IAUvE,EAAApB,eAAiB,SAACH,GAC7B,OAAKA,EAGD8I,EAAInG,IAAI3C,GACH,EAEL+I,EAAIpG,IAAI3C,IACF,EAEH,EARE,CASX,EAQA,IAmEMgJ,EAAar0B,MAAMwB,KAAK,IAAIorB,IAAI3rB,OAAOqzB,OAnE5B,CACfwDhE,UAAUx0B,KAAK,IACxEy4B,EAAiB,IAAI9lB,OAAO,YAAK4hB,EAAU,OAAO,KAG3C,EAAApJ,UAAY,SAACH,GACxB,MAAI,eAAevB,KAAKuB,GACf,MACE,eAAevB,KAAKuB,GACtB,MACEyN,EAAehP,KAAKuB,GACtB,KAEF,SACT,ICpLI0N,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBz1B,IAAjB01B,EACH,OAAOA,EAAa56B,QAGrB,IAAIC,EAASw6B,EAAyBE,GAAY,CAGjD36B,QAAS,CAAC,GAOX,OAHA66B,EAAoBF,GAAU1zB,KAAKhH,EAAOD,QAASC,EAAQA,EAAOD,QAAS06B,GAGpEz6B,EAAOD,OACf,CCnB0B06B,CAAoB,WDF1CD","sources":["webpack://seqparse/webpack/universalModuleDefinition","webpack://seqparse/./node_modules/base64-js/index.js","webpack://seqparse/./node_modules/buffer/index.js","webpack://seqparse/./node_modules/fast-xml-parser/src/fxp.js","webpack://seqparse/./node_modules/fast-xml-parser/src/util.js","webpack://seqparse/./node_modules/fast-xml-parser/src/validator.js","webpack://seqparse/./node_modules/fast-xml-parser/src/xmlbuilder/json2xml.js","webpack://seqparse/./node_modules/fast-xml-parser/src/xmlbuilder/orderedJs2Xml.js","webpack://seqparse/./node_modules/fast-xml-parser/src/xmlparser/DocTypeReader.js","webpack://seqparse/./node_modules/fast-xml-parser/src/xmlparser/OptionsBuilder.js","webpack://seqparse/./node_modules/fast-xml-parser/src/xmlparser/OrderedObjParser.js","webpack://seqparse/./node_modules/fast-xml-parser/src/xmlparser/XMLParser.js","webpack://seqparse/./node_modules/fast-xml-parser/src/xmlparser/node2json.js","webpack://seqparse/./node_modules/fast-xml-parser/src/xmlparser/xmlNode.js","webpack://seqparse/./node_modules/ieee754/index.js","webpack://seqparse/./node_modules/node-fetch/browser.js","webpack://seqparse/./node_modules/path-browserify/index.js","webpack://seqparse/./node_modules/process/browser.js","webpack://seqparse/./node_modules/strnum/strnum.js","webpack://seqparse/./src/fetchFile.ts","webpack://seqparse/./src/index.ts","webpack://seqparse/./src/parseFile.ts","webpack://seqparse/./src/parsers/benchling.ts","webpack://seqparse/./src/parsers/biobrick.ts","webpack://seqparse/./src/parsers/fasta.ts","webpack://seqparse/./src/parsers/genbank.ts","webpack://seqparse/./src/parsers/jbei.ts","webpack://seqparse/./src/parsers/sbol.ts","webpack://seqparse/./src/parsers/sbol.v1.ts","webpack://seqparse/./src/parsers/sbol.v2.ts","webpack://seqparse/./src/parsers/seqbuilder.ts","webpack://seqparse/./src/parsers/snapgene.ts","webpack://seqparse/./src/utils.ts","webpack://seqparse/webpack/bootstrap","webpack://seqparse/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"seqparse\"] = factory();\n\telse\n\t\troot[\"seqparse\"] = factory();\n})(this, () => {\nreturn ","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","'use strict';\n\nconst validator = require('./validator');\nconst XMLParser = require('./xmlparser/XMLParser');\nconst XMLBuilder = require('./xmlbuilder/json2xml');\n\nmodule.exports = {\n  XMLParser: XMLParser,\n  XMLValidator: validator,\n  XMLBuilder: XMLBuilder\n}","'use strict';\n\nconst nameStartChar = ':A-Za-z_\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD';\nconst nameChar = nameStartChar + '\\\\-.\\\\d\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040';\nconst nameRegexp = '[' + nameStartChar + '][' + nameChar + ']*'\nconst regexName = new RegExp('^' + nameRegexp + '$');\n\nconst getAllMatches = function(string, regex) {\n  const matches = [];\n  let match = regex.exec(string);\n  while (match) {\n    const allmatches = [];\n    allmatches.startIndex = regex.lastIndex - match[0].length;\n    const len = match.length;\n    for (let index = 0; index < len; index++) {\n      allmatches.push(match[index]);\n    }\n    matches.push(allmatches);\n    match = regex.exec(string);\n  }\n  return matches;\n};\n\nconst isName = function(string) {\n  const match = regexName.exec(string);\n  return !(match === null || typeof match === 'undefined');\n};\n\nexports.isExist = function(v) {\n  return typeof v !== 'undefined';\n};\n\nexports.isEmptyObject = function(obj) {\n  return Object.keys(obj).length === 0;\n};\n\n/**\n * Copy all the properties of a into b.\n * @param {*} target\n * @param {*} a\n */\nexports.merge = function(target, a, arrayMode) {\n  if (a) {\n    const keys = Object.keys(a); // will return an array of own properties\n    const len = keys.length; //don't make it inline\n    for (let i = 0; i < len; i++) {\n      if (arrayMode === 'strict') {\n        target[keys[i]] = [ a[keys[i]] ];\n      } else {\n        target[keys[i]] = a[keys[i]];\n      }\n    }\n  }\n};\n/* exports.merge =function (b,a){\n  return Object.assign(b,a);\n} */\n\nexports.getValue = function(v) {\n  if (exports.isExist(v)) {\n    return v;\n  } else {\n    return '';\n  }\n};\n\n// const fakeCall = function(a) {return a;};\n// const fakeCallNoReturn = function() {};\n\nexports.isName = isName;\nexports.getAllMatches = getAllMatches;\nexports.nameRegexp = nameRegexp;\n","'use strict';\n\nconst util = require('./util');\n\nconst defaultOptions = {\n  allowBooleanAttributes: false, //A tag can have attributes without any value\n  unpairedTags: []\n};\n\n//const tagsPattern = new RegExp(\"<\\\\/?([\\\\w:\\\\-_\\.]+)\\\\s*\\/?>\",\"g\");\nexports.validate = function (xmlData, options) {\n  options = Object.assign({}, defaultOptions, options);\n\n  //xmlData = xmlData.replace(/(\\r\\n|\\n|\\r)/gm,\"\");//make it single line\n  //xmlData = xmlData.replace(/(^\\s*<\\?xml.*?\\?>)/g,\"\");//Remove XML starting tag\n  //xmlData = xmlData.replace(/(<!DOCTYPE[\\s\\w\\\"\\.\\/\\-\\:]+(\\[.*\\])*\\s*>)/g,\"\");//Remove DOCTYPE\n  const tags = [];\n  let tagFound = false;\n\n  //indicates that the root tag has been closed (aka. depth 0 has been reached)\n  let reachedRoot = false;\n\n  if (xmlData[0] === '\\ufeff') {\n    // check for byte order mark (BOM)\n    xmlData = xmlData.substr(1);\n  }\n  \n  for (let i = 0; i < xmlData.length; i++) {\n\n    if (xmlData[i] === '<' && xmlData[i+1] === '?') {\n      i+=2;\n      i = readPI(xmlData,i);\n      if (i.err) return i;\n    }else if (xmlData[i] === '<') {\n      //starting of tag\n      //read until you reach to '>' avoiding any '>' in attribute value\n      let tagStartPos = i;\n      i++;\n      \n      if (xmlData[i] === '!') {\n        i = readCommentAndCDATA(xmlData, i);\n        continue;\n      } else {\n        let closingTag = false;\n        if (xmlData[i] === '/') {\n          //closing tag\n          closingTag = true;\n          i++;\n        }\n        //read tagname\n        let tagName = '';\n        for (; i < xmlData.length &&\n          xmlData[i] !== '>' &&\n          xmlData[i] !== ' ' &&\n          xmlData[i] !== '\\t' &&\n          xmlData[i] !== '\\n' &&\n          xmlData[i] !== '\\r'; i++\n        ) {\n          tagName += xmlData[i];\n        }\n        tagName = tagName.trim();\n        //console.log(tagName);\n\n        if (tagName[tagName.length - 1] === '/') {\n          //self closing tag without attributes\n          tagName = tagName.substring(0, tagName.length - 1);\n          //continue;\n          i--;\n        }\n        if (!validateTagName(tagName)) {\n          let msg;\n          if (tagName.trim().length === 0) {\n            msg = \"Invalid space after '<'.\";\n          } else {\n            msg = \"Tag '\"+tagName+\"' is an invalid name.\";\n          }\n          return getErrorObject('InvalidTag', msg, getLineNumberForPosition(xmlData, i));\n        }\n\n        const result = readAttributeStr(xmlData, i);\n        if (result === false) {\n          return getErrorObject('InvalidAttr', \"Attributes for '\"+tagName+\"' have open quote.\", getLineNumberForPosition(xmlData, i));\n        }\n        let attrStr = result.value;\n        i = result.index;\n\n        if (attrStr[attrStr.length - 1] === '/') {\n          //self closing tag\n          const attrStrStart = i - attrStr.length;\n          attrStr = attrStr.substring(0, attrStr.length - 1);\n          const isValid = validateAttributeString(attrStr, options);\n          if (isValid === true) {\n            tagFound = true;\n            //continue; //text may presents after self closing tag\n          } else {\n            //the result from the nested function returns the position of the error within the attribute\n            //in order to get the 'true' error line, we need to calculate the position where the attribute begins (i - attrStr.length) and then add the position within the attribute\n            //this gives us the absolute index in the entire xml, which we can use to find the line at last\n            return getErrorObject(isValid.err.code, isValid.err.msg, getLineNumberForPosition(xmlData, attrStrStart + isValid.err.line));\n          }\n        } else if (closingTag) {\n          if (!result.tagClosed) {\n            return getErrorObject('InvalidTag', \"Closing tag '\"+tagName+\"' doesn't have proper closing.\", getLineNumberForPosition(xmlData, i));\n          } else if (attrStr.trim().length > 0) {\n            return getErrorObject('InvalidTag', \"Closing tag '\"+tagName+\"' can't have attributes or invalid starting.\", getLineNumberForPosition(xmlData, tagStartPos));\n          } else {\n            const otg = tags.pop();\n            if (tagName !== otg.tagName) {\n              let openPos = getLineNumberForPosition(xmlData, otg.tagStartPos);\n              return getErrorObject('InvalidTag',\n                \"Expected closing tag '\"+otg.tagName+\"' (opened in line \"+openPos.line+\", col \"+openPos.col+\") instead of closing tag '\"+tagName+\"'.\",\n                getLineNumberForPosition(xmlData, tagStartPos));\n            }\n\n            //when there are no more tags, we reached the root level.\n            if (tags.length == 0) {\n              reachedRoot = true;\n            }\n          }\n        } else {\n          const isValid = validateAttributeString(attrStr, options);\n          if (isValid !== true) {\n            //the result from the nested function returns the position of the error within the attribute\n            //in order to get the 'true' error line, we need to calculate the position where the attribute begins (i - attrStr.length) and then add the position within the attribute\n            //this gives us the absolute index in the entire xml, which we can use to find the line at last\n            return getErrorObject(isValid.err.code, isValid.err.msg, getLineNumberForPosition(xmlData, i - attrStr.length + isValid.err.line));\n          }\n\n          //if the root level has been reached before ...\n          if (reachedRoot === true) {\n            return getErrorObject('InvalidXml', 'Multiple possible root nodes found.', getLineNumberForPosition(xmlData, i));\n          } else if(options.unpairedTags.indexOf(tagName) !== -1){\n            //don't push into stack\n          } else {\n            tags.push({tagName, tagStartPos});\n          }\n          tagFound = true;\n        }\n\n        //skip tag text value\n        //It may include comments and CDATA value\n        for (i++; i < xmlData.length; i++) {\n          if (xmlData[i] === '<') {\n            if (xmlData[i + 1] === '!') {\n              //comment or CADATA\n              i++;\n              i = readCommentAndCDATA(xmlData, i);\n              continue;\n            } else if (xmlData[i+1] === '?') {\n              i = readPI(xmlData, ++i);\n              if (i.err) return i;\n            } else{\n              break;\n            }\n          } else if (xmlData[i] === '&') {\n            const afterAmp = validateAmpersand(xmlData, i);\n            if (afterAmp == -1)\n              return getErrorObject('InvalidChar', \"char '&' is not expected.\", getLineNumberForPosition(xmlData, i));\n            i = afterAmp;\n          }else{\n            if (reachedRoot === true && !isWhiteSpace(xmlData[i])) {\n              return getErrorObject('InvalidXml', \"Extra text at the end\", getLineNumberForPosition(xmlData, i));\n            }\n          }\n        } //end of reading tag text value\n        if (xmlData[i] === '<') {\n          i--;\n        }\n      }\n    } else {\n      if ( isWhiteSpace(xmlData[i])) {\n        continue;\n      }\n      return getErrorObject('InvalidChar', \"char '\"+xmlData[i]+\"' is not expected.\", getLineNumberForPosition(xmlData, i));\n    }\n  }\n\n  if (!tagFound) {\n    return getErrorObject('InvalidXml', 'Start tag expected.', 1);\n  }else if (tags.length == 1) {\n      return getErrorObject('InvalidTag', \"Unclosed tag '\"+tags[0].tagName+\"'.\", getLineNumberForPosition(xmlData, tags[0].tagStartPos));\n  }else if (tags.length > 0) {\n      return getErrorObject('InvalidXml', \"Invalid '\"+\n          JSON.stringify(tags.map(t => t.tagName), null, 4).replace(/\\r?\\n/g, '')+\n          \"' found.\", {line: 1, col: 1});\n  }\n\n  return true;\n};\n\nfunction isWhiteSpace(char){\n  return char === ' ' || char === '\\t' || char === '\\n'  || char === '\\r';\n}\n/**\n * Read Processing insstructions and skip\n * @param {*} xmlData\n * @param {*} i\n */\nfunction readPI(xmlData, i) {\n  const start = i;\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] == '?' || xmlData[i] == ' ') {\n      //tagname\n      const tagname = xmlData.substr(start, i - start);\n      if (i > 5 && tagname === 'xml') {\n        return getErrorObject('InvalidXml', 'XML declaration allowed only at the start of the document.', getLineNumberForPosition(xmlData, i));\n      } else if (xmlData[i] == '?' && xmlData[i + 1] == '>') {\n        //check if valid attribut string\n        i++;\n        break;\n      } else {\n        continue;\n      }\n    }\n  }\n  return i;\n}\n\nfunction readCommentAndCDATA(xmlData, i) {\n  if (xmlData.length > i + 5 && xmlData[i + 1] === '-' && xmlData[i + 2] === '-') {\n    //comment\n    for (i += 3; i < xmlData.length; i++) {\n      if (xmlData[i] === '-' && xmlData[i + 1] === '-' && xmlData[i + 2] === '>') {\n        i += 2;\n        break;\n      }\n    }\n  } else if (\n    xmlData.length > i + 8 &&\n    xmlData[i + 1] === 'D' &&\n    xmlData[i + 2] === 'O' &&\n    xmlData[i + 3] === 'C' &&\n    xmlData[i + 4] === 'T' &&\n    xmlData[i + 5] === 'Y' &&\n    xmlData[i + 6] === 'P' &&\n    xmlData[i + 7] === 'E'\n  ) {\n    let angleBracketsCount = 1;\n    for (i += 8; i < xmlData.length; i++) {\n      if (xmlData[i] === '<') {\n        angleBracketsCount++;\n      } else if (xmlData[i] === '>') {\n        angleBracketsCount--;\n        if (angleBracketsCount === 0) {\n          break;\n        }\n      }\n    }\n  } else if (\n    xmlData.length > i + 9 &&\n    xmlData[i + 1] === '[' &&\n    xmlData[i + 2] === 'C' &&\n    xmlData[i + 3] === 'D' &&\n    xmlData[i + 4] === 'A' &&\n    xmlData[i + 5] === 'T' &&\n    xmlData[i + 6] === 'A' &&\n    xmlData[i + 7] === '['\n  ) {\n    for (i += 8; i < xmlData.length; i++) {\n      if (xmlData[i] === ']' && xmlData[i + 1] === ']' && xmlData[i + 2] === '>') {\n        i += 2;\n        break;\n      }\n    }\n  }\n\n  return i;\n}\n\nconst doubleQuote = '\"';\nconst singleQuote = \"'\";\n\n/**\n * Keep reading xmlData until '<' is found outside the attribute value.\n * @param {string} xmlData\n * @param {number} i\n */\nfunction readAttributeStr(xmlData, i) {\n  let attrStr = '';\n  let startChar = '';\n  let tagClosed = false;\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] === doubleQuote || xmlData[i] === singleQuote) {\n      if (startChar === '') {\n        startChar = xmlData[i];\n      } else if (startChar !== xmlData[i]) {\n        //if vaue is enclosed with double quote then single quotes are allowed inside the value and vice versa\n      } else {\n        startChar = '';\n      }\n    } else if (xmlData[i] === '>') {\n      if (startChar === '') {\n        tagClosed = true;\n        break;\n      }\n    }\n    attrStr += xmlData[i];\n  }\n  if (startChar !== '') {\n    return false;\n  }\n\n  return {\n    value: attrStr,\n    index: i,\n    tagClosed: tagClosed\n  };\n}\n\n/**\n * Select all the attributes whether valid or invalid.\n */\nconst validAttrStrRegxp = new RegExp('(\\\\s*)([^\\\\s=]+)(\\\\s*=)?(\\\\s*([\\'\"])(([\\\\s\\\\S])*?)\\\\5)?', 'g');\n\n//attr, =\"sd\", a=\"amit's\", a=\"sd\"b=\"saf\", ab  cd=\"\"\n\nfunction validateAttributeString(attrStr, options) {\n  //console.log(\"start:\"+attrStr+\":end\");\n\n  //if(attrStr.trim().length === 0) return true; //empty string\n\n  const matches = util.getAllMatches(attrStr, validAttrStrRegxp);\n  const attrNames = {};\n\n  for (let i = 0; i < matches.length; i++) {\n    if (matches[i][1].length === 0) {\n      //nospace before attribute name: a=\"sd\"b=\"saf\"\n      return getErrorObject('InvalidAttr', \"Attribute '\"+matches[i][2]+\"' has no space in starting.\", getPositionFromMatch(matches[i]))\n    } else if (matches[i][3] !== undefined && matches[i][4] === undefined) {\n      return getErrorObject('InvalidAttr', \"Attribute '\"+matches[i][2]+\"' is without value.\", getPositionFromMatch(matches[i]));\n    } else if (matches[i][3] === undefined && !options.allowBooleanAttributes) {\n      //independent attribute: ab\n      return getErrorObject('InvalidAttr', \"boolean attribute '\"+matches[i][2]+\"' is not allowed.\", getPositionFromMatch(matches[i]));\n    }\n    /* else if(matches[i][6] === undefined){//attribute without value: ab=\n                    return { err: { code:\"InvalidAttr\",msg:\"attribute \" + matches[i][2] + \" has no value assigned.\"}};\n                } */\n    const attrName = matches[i][2];\n    if (!validateAttrName(attrName)) {\n      return getErrorObject('InvalidAttr', \"Attribute '\"+attrName+\"' is an invalid name.\", getPositionFromMatch(matches[i]));\n    }\n    if (!attrNames.hasOwnProperty(attrName)) {\n      //check for duplicate attribute.\n      attrNames[attrName] = 1;\n    } else {\n      return getErrorObject('InvalidAttr', \"Attribute '\"+attrName+\"' is repeated.\", getPositionFromMatch(matches[i]));\n    }\n  }\n\n  return true;\n}\n\nfunction validateNumberAmpersand(xmlData, i) {\n  let re = /\\d/;\n  if (xmlData[i] === 'x') {\n    i++;\n    re = /[\\da-fA-F]/;\n  }\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] === ';')\n      return i;\n    if (!xmlData[i].match(re))\n      break;\n  }\n  return -1;\n}\n\nfunction validateAmpersand(xmlData, i) {\n  // https://www.w3.org/TR/xml/#dt-charref\n  i++;\n  if (xmlData[i] === ';')\n    return -1;\n  if (xmlData[i] === '#') {\n    i++;\n    return validateNumberAmpersand(xmlData, i);\n  }\n  let count = 0;\n  for (; i < xmlData.length; i++, count++) {\n    if (xmlData[i].match(/\\w/) && count < 20)\n      continue;\n    if (xmlData[i] === ';')\n      break;\n    return -1;\n  }\n  return i;\n}\n\nfunction getErrorObject(code, message, lineNumber) {\n  return {\n    err: {\n      code: code,\n      msg: message,\n      line: lineNumber.line || lineNumber,\n      col: lineNumber.col,\n    },\n  };\n}\n\nfunction validateAttrName(attrName) {\n  return util.isName(attrName);\n}\n\n// const startsWithXML = /^xml/i;\n\nfunction validateTagName(tagname) {\n  return util.isName(tagname) /* && !tagname.match(startsWithXML) */;\n}\n\n//this function returns the line number for the character at the given index\nfunction getLineNumberForPosition(xmlData, index) {\n  const lines = xmlData.substring(0, index).split(/\\r?\\n/);\n  return {\n    line: lines.length,\n\n    // column number is last line's length + 1, because column numbering starts at 1:\n    col: lines[lines.length - 1].length + 1\n  };\n}\n\n//this function returns the position of the first character of match within attrStr\nfunction getPositionFromMatch(match) {\n  return match.startIndex + match[1].length;\n}\n","'use strict';\n//parse Empty Node as self closing node\nconst buildFromOrderedJs = require('./orderedJs2Xml');\n\nconst defaultOptions = {\n  attributeNamePrefix: '@_',\n  attributesGroupName: false,\n  textNodeName: '#text',\n  ignoreAttributes: true,\n  cdataPropName: false,\n  format: false,\n  indentBy: '  ',\n  suppressEmptyNode: false,\n  suppressUnpairedNode: true,\n  suppressBooleanAttributes: true,\n  tagValueProcessor: function(key, a) {\n    return a;\n  },\n  attributeValueProcessor: function(attrName, a) {\n    return a;\n  },\n  preserveOrder: false,\n  commentPropName: false,\n  unpairedTags: [],\n  entities: [\n    { regex: new RegExp(\"&\", \"g\"), val: \"&amp;\" },//it must be on top\n    { regex: new RegExp(\">\", \"g\"), val: \"&gt;\" },\n    { regex: new RegExp(\"<\", \"g\"), val: \"&lt;\" },\n    { regex: new RegExp(\"\\'\", \"g\"), val: \"&apos;\" },\n    { regex: new RegExp(\"\\\"\", \"g\"), val: \"&quot;\" }\n  ],\n  processEntities: true,\n  stopNodes: [],\n  // transformTagName: false,\n  // transformAttributeName: false,\n};\n\nfunction Builder(options) {\n  this.options = Object.assign({}, defaultOptions, options);\n  if (this.options.ignoreAttributes || this.options.attributesGroupName) {\n    this.isAttribute = function(/*a*/) {\n      return false;\n    };\n  } else {\n    this.attrPrefixLen = this.options.attributeNamePrefix.length;\n    this.isAttribute = isAttribute;\n  }\n\n  this.processTextOrObjNode = processTextOrObjNode\n\n  if (this.options.format) {\n    this.indentate = indentate;\n    this.tagEndChar = '>\\n';\n    this.newLine = '\\n';\n  } else {\n    this.indentate = function() {\n      return '';\n    };\n    this.tagEndChar = '>';\n    this.newLine = '';\n  }\n\n  if (this.options.suppressEmptyNode) {\n    this.buildTextNode = buildEmptyTextNode;\n    this.buildObjNode = buildEmptyObjNode;\n  } else {\n    this.buildTextNode = buildTextValNode;\n    this.buildObjNode = buildObjectNode;\n  }\n\n  this.buildTextValNode = buildTextValNode;\n  this.buildObjectNode = buildObjectNode;\n\n  this.replaceEntitiesValue = replaceEntitiesValue;\n  this.buildAttrPairStr = buildAttrPairStr;\n}\n\nBuilder.prototype.build = function(jObj) {\n  if(this.options.preserveOrder){\n    return buildFromOrderedJs(jObj, this.options);\n  }else {\n    if(Array.isArray(jObj) && this.options.arrayNodeName && this.options.arrayNodeName.length > 1){\n      jObj = {\n        [this.options.arrayNodeName] : jObj\n      }\n    }\n    return this.j2x(jObj, 0).val;\n  }\n};\n\nBuilder.prototype.j2x = function(jObj, level) {\n  let attrStr = '';\n  let val = '';\n  for (let key in jObj) {\n    if (typeof jObj[key] === 'undefined') {\n      // supress undefined node\n    } else if (jObj[key] === null) {\n      if(key[0] === \"?\") val += this.indentate(level) + '<' + key + '?' + this.tagEndChar;\n      else val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n      // val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n    } else if (jObj[key] instanceof Date) {\n      val += this.buildTextNode(jObj[key], key, '', level);\n    } else if (typeof jObj[key] !== 'object') {\n      //premitive type\n      const attr = this.isAttribute(key);\n      if (attr) {\n        attrStr += this.buildAttrPairStr(attr, '' + jObj[key]);\n      }else {\n        //tag value\n        if (key === this.options.textNodeName) {\n          let newval = this.options.tagValueProcessor(key, '' + jObj[key]);\n          val += this.replaceEntitiesValue(newval);\n        } else {\n          val += this.buildTextNode(jObj[key], key, '', level);\n        }\n      }\n    } else if (Array.isArray(jObj[key])) {\n      //repeated nodes\n      const arrLen = jObj[key].length;\n      for (let j = 0; j < arrLen; j++) {\n        const item = jObj[key][j];\n        if (typeof item === 'undefined') {\n          // supress undefined node\n        } else if (item === null) {\n          if(key[0] === \"?\") val += this.indentate(level) + '<' + key + '?' + this.tagEndChar;\n          else val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n          // val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n        } else if (typeof item === 'object') {\n          val += this.processTextOrObjNode(item, key, level)\n        } else {\n          val += this.buildTextNode(item, key, '', level);\n        }\n      }\n    } else {\n      //nested node\n      if (this.options.attributesGroupName && key === this.options.attributesGroupName) {\n        const Ks = Object.keys(jObj[key]);\n        const L = Ks.length;\n        for (let j = 0; j < L; j++) {\n          attrStr += this.buildAttrPairStr(Ks[j], '' + jObj[key][Ks[j]]);\n        }\n      } else {\n        val += this.processTextOrObjNode(jObj[key], key, level)\n      }\n    }\n  }\n  return {attrStr: attrStr, val: val};\n};\n\nfunction buildAttrPairStr(attrName, val){\n  val = this.options.attributeValueProcessor(attrName, '' + val);\n  val = this.replaceEntitiesValue(val);\n  if (this.options.suppressBooleanAttributes && val === \"true\") {\n    return ' ' + attrName;\n  } else return ' ' + attrName + '=\"' + val + '\"';\n}\n\nfunction processTextOrObjNode (object, key, level) {\n  const result = this.j2x(object, level + 1);\n  if (object[this.options.textNodeName] !== undefined && Object.keys(object).length === 1) {\n    return this.buildTextNode(object[this.options.textNodeName], key, result.attrStr, level);\n  } else {\n    return this.buildObjNode(result.val, key, result.attrStr, level);\n  }\n}\n\nfunction buildObjectNode(val, key, attrStr, level) {\n  let tagEndExp = '</' + key + this.tagEndChar;\n  let piClosingChar = \"\";\n  \n  if(key[0] === \"?\") {\n    piClosingChar = \"?\";\n    tagEndExp = \"\";\n  }\n\n  if (attrStr && val.indexOf('<') === -1) {\n    return ( this.indentate(level) + '<' +  key + attrStr + piClosingChar + '>' + val + tagEndExp );\n  } else if (this.options.commentPropName !== false && key === this.options.commentPropName && piClosingChar.length === 0) {\n    return this.indentate(level) + `<!--${val}-->` + this.newLine;\n  }else {\n    return (\n      this.indentate(level) + '<' + key + attrStr + piClosingChar + this.tagEndChar +\n      val +\n      this.indentate(level) + tagEndExp    );\n  }\n}\n\nfunction buildEmptyObjNode(val, key, attrStr, level) {\n  if (val !== '') {\n    return this.buildObjectNode(val, key, attrStr, level);\n  } else {\n    if(key[0] === \"?\") return  this.indentate(level) + '<' + key + attrStr+ '?' + this.tagEndChar;\n    else return  this.indentate(level) + '<' + key + attrStr + '/' + this.tagEndChar;\n  }\n}\n\nfunction buildTextValNode(val, key, attrStr, level) {\n  if (this.options.cdataPropName !== false && key === this.options.cdataPropName) {\n    return this.indentate(level) + `<![CDATA[${val}]]>` +  this.newLine;\n  }else if (this.options.commentPropName !== false && key === this.options.commentPropName) {\n    return this.indentate(level) + `<!--${val}-->` +  this.newLine;\n  }else{\n    let textValue = this.options.tagValueProcessor(key, val);\n    textValue = this.replaceEntitiesValue(textValue);\n  \n    if( textValue === '' && this.options.unpairedTags.indexOf(key) !== -1){ //unpaired\n      if(this.options.suppressUnpairedNode){\n        return this.indentate(level) + '<' + key + this.tagEndChar;\n      }else{\n        return this.indentate(level) + '<' + key + \"/\" + this.tagEndChar;\n      }\n    } else{\n      return (\n        this.indentate(level) + '<' + key + attrStr + '>' +\n         textValue +\n        '</' + key + this.tagEndChar  );\n    }\n\n  }\n}\n\nfunction replaceEntitiesValue(textValue){\n  if(textValue && textValue.length > 0 && this.options.processEntities){\n    for (let i=0; i<this.options.entities.length; i++) {\n      const entity = this.options.entities[i];\n      textValue = textValue.replace(entity.regex, entity.val);\n    }\n  }\n  return textValue;\n}\n\nfunction buildEmptyTextNode(val, key, attrStr, level) {\n  if( val === '' && this.options.unpairedTags.indexOf(key) !== -1){ //unpaired\n    if(this.options.suppressUnpairedNode){\n      return this.indentate(level) + '<' + key + this.tagEndChar;\n    }else{\n      return this.indentate(level) + '<' + key + \"/\" + this.tagEndChar;\n    }\n  }else if (val !== '') { //empty\n    return this.buildTextValNode(val, key, attrStr, level);\n  } else {\n    if(key[0] === \"?\") return  this.indentate(level) + '<' + key + attrStr+ '?' + this.tagEndChar; //PI tag\n    else return  this.indentate(level) + '<' + key + attrStr + '/' + this.tagEndChar; //normal\n  }\n}\n\nfunction indentate(level) {\n  return this.options.indentBy.repeat(level);\n}\n\nfunction isAttribute(name /*, options*/) {\n  if (name.startsWith(this.options.attributeNamePrefix)) {\n    return name.substr(this.attrPrefixLen);\n  } else {\n    return false;\n  }\n}\n\nmodule.exports = Builder;\n","const EOL = \"\\n\";\n\n/**\n * \n * @param {array} jArray \n * @param {any} options \n * @returns \n */\nfunction toXml(jArray, options) {\n    let indentation = \"\";\n    if (options.format && options.indentBy.length > 0) {\n        indentation = EOL;\n    }\n    return arrToStr(jArray, options, \"\", indentation);\n}\n\nfunction arrToStr(arr, options, jPath, indentation) {\n    let xmlStr = \"\";\n    let isPreviousElementTag = false;\n\n    for (let i = 0; i < arr.length; i++) {\n        const tagObj = arr[i];\n        const tagName = propName(tagObj);\n        let newJPath = \"\";\n        if (jPath.length === 0) newJPath = tagName\n        else newJPath = `${jPath}.${tagName}`;\n\n        if (tagName === options.textNodeName) {\n            let tagText = tagObj[tagName];\n            if (!isStopNode(newJPath, options)) {\n                tagText = options.tagValueProcessor(tagName, tagText);\n                tagText = replaceEntitiesValue(tagText, options);\n            }\n            if (isPreviousElementTag) {\n                xmlStr += indentation;\n            }\n            xmlStr += tagText;\n            isPreviousElementTag = false;\n            continue;\n        } else if (tagName === options.cdataPropName) {\n            if (isPreviousElementTag) {\n                xmlStr += indentation;\n            }\n            xmlStr += `<![CDATA[${tagObj[tagName][0][options.textNodeName]}]]>`;\n            isPreviousElementTag = false;\n            continue;\n        } else if (tagName === options.commentPropName) {\n            xmlStr += indentation + `<!--${tagObj[tagName][0][options.textNodeName]}-->`;\n            isPreviousElementTag = true;\n            continue;\n        } else if (tagName[0] === \"?\") {\n            const attStr = attr_to_str(tagObj[\":@\"], options);\n            const tempInd = tagName === \"?xml\" ? \"\" : indentation;\n            let piTextNodeName = tagObj[tagName][0][options.textNodeName];\n            piTextNodeName = piTextNodeName.length !== 0 ? \" \" + piTextNodeName : \"\"; //remove extra spacing\n            xmlStr += tempInd + `<${tagName}${piTextNodeName}${attStr}?>`;\n            isPreviousElementTag = true;\n            continue;\n        }\n        let newIdentation = indentation;\n        if (newIdentation !== \"\") {\n            newIdentation += options.indentBy;\n        }\n        const attStr = attr_to_str(tagObj[\":@\"], options);\n        const tagStart = indentation + `<${tagName}${attStr}`;\n        const tagValue = arrToStr(tagObj[tagName], options, newJPath, newIdentation);\n        if (options.unpairedTags.indexOf(tagName) !== -1) {\n            if (options.suppressUnpairedNode) xmlStr += tagStart + \">\";\n            else xmlStr += tagStart + \"/>\";\n        } else if ((!tagValue || tagValue.length === 0) && options.suppressEmptyNode) {\n            xmlStr += tagStart + \"/>\";\n        } else if (tagValue && tagValue.endsWith(\">\")) {\n            xmlStr += tagStart + `>${tagValue}${indentation}</${tagName}>`;\n        } else {\n            xmlStr += tagStart + \">\";\n            if (tagValue && indentation !== \"\" && (tagValue.includes(\"/>\") || tagValue.includes(\"</\"))) {\n                xmlStr += indentation + options.indentBy + tagValue + indentation;\n            } else {\n                xmlStr += tagValue;\n            }\n            xmlStr += `</${tagName}>`;\n        }\n        isPreviousElementTag = true;\n    }\n\n    return xmlStr;\n}\n\nfunction propName(obj) {\n    const keys = Object.keys(obj);\n    for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n        if (key !== \":@\") return key;\n    }\n}\n\nfunction attr_to_str(attrMap, options) {\n    let attrStr = \"\";\n    if (attrMap && !options.ignoreAttributes) {\n        for (let attr in attrMap) {\n            let attrVal = options.attributeValueProcessor(attr, attrMap[attr]);\n            attrVal = replaceEntitiesValue(attrVal, options);\n            if (attrVal === true && options.suppressBooleanAttributes) {\n                attrStr += ` ${attr.substr(options.attributeNamePrefix.length)}`;\n            } else {\n                attrStr += ` ${attr.substr(options.attributeNamePrefix.length)}=\"${attrVal}\"`;\n            }\n        }\n    }\n    return attrStr;\n}\n\nfunction isStopNode(jPath, options) {\n    jPath = jPath.substr(0, jPath.length - options.textNodeName.length - 1);\n    let tagName = jPath.substr(jPath.lastIndexOf(\".\") + 1);\n    for (let index in options.stopNodes) {\n        if (options.stopNodes[index] === jPath || options.stopNodes[index] === \"*.\" + tagName) return true;\n    }\n    return false;\n}\n\nfunction replaceEntitiesValue(textValue, options) {\n    if (textValue && textValue.length > 0 && options.processEntities) {\n        for (let i = 0; i < options.entities.length; i++) {\n            const entity = options.entities[i];\n            textValue = textValue.replace(entity.regex, entity.val);\n        }\n    }\n    return textValue;\n}\nmodule.exports = toXml;\n","//TODO: handle comments\nfunction readDocType(xmlData, i){\n    \n    const entities = {};\n    if( xmlData[i + 3] === 'O' &&\n         xmlData[i + 4] === 'C' &&\n         xmlData[i + 5] === 'T' &&\n         xmlData[i + 6] === 'Y' &&\n         xmlData[i + 7] === 'P' &&\n         xmlData[i + 8] === 'E')\n    {    \n        i = i+9;\n        let angleBracketsCount = 1;\n        let hasBody = false, entity = false, comment = false;\n        let exp = \"\";\n        for(;i<xmlData.length;i++){\n            if (xmlData[i] === '<') {\n                if( hasBody && \n                     xmlData[i+1] === '!' &&\n                     xmlData[i+2] === 'E' &&\n                     xmlData[i+3] === 'N' &&\n                     xmlData[i+4] === 'T' &&\n                     xmlData[i+5] === 'I' &&\n                     xmlData[i+6] === 'T' &&\n                     xmlData[i+7] === 'Y'\n                ){\n                    i += 7;\n                    entity = true;\n                }else if( hasBody && \n                    xmlData[i+1] === '!' &&\n                     xmlData[i+2] === 'E' &&\n                     xmlData[i+3] === 'L' &&\n                     xmlData[i+4] === 'E' &&\n                     xmlData[i+5] === 'M' &&\n                     xmlData[i+6] === 'E' &&\n                     xmlData[i+7] === 'N' &&\n                     xmlData[i+8] === 'T'\n                ){\n                    //Not supported\n                    i += 8;\n                }else if( hasBody && \n                    xmlData[i+1] === '!' &&\n                    xmlData[i+2] === 'A' &&\n                    xmlData[i+3] === 'T' &&\n                    xmlData[i+4] === 'T' &&\n                    xmlData[i+5] === 'L' &&\n                    xmlData[i+6] === 'I' &&\n                    xmlData[i+7] === 'S' &&\n                    xmlData[i+8] === 'T'\n                ){\n                    //Not supported\n                    i += 8;\n                }else if( hasBody && \n                    xmlData[i+1] === '!' &&\n                    xmlData[i+2] === 'N' &&\n                    xmlData[i+3] === 'O' &&\n                    xmlData[i+4] === 'T' &&\n                    xmlData[i+5] === 'A' &&\n                    xmlData[i+6] === 'T' &&\n                    xmlData[i+7] === 'I' &&\n                    xmlData[i+8] === 'O' &&\n                    xmlData[i+9] === 'N'\n                ){\n                    //Not supported\n                    i += 9;\n                }else if( //comment\n                    xmlData[i+1] === '!' &&\n                    xmlData[i+2] === '-' &&\n                    xmlData[i+3] === '-'\n                ){\n                    comment = true;\n                }else{\n                    throw new Error(\"Invalid DOCTYPE\");\n                }\n                angleBracketsCount++;\n                exp = \"\";\n            } else if (xmlData[i] === '>') {\n                if(comment){\n                    if( xmlData[i - 1] === \"-\" && xmlData[i - 2] === \"-\"){\n                        comment = false;\n                    }else{\n                        throw new Error(`Invalid XML comment in DOCTYPE`);\n                    }\n                }else if(entity){\n                    parseEntityExp(exp, entities);\n                    entity = false;\n                }\n                angleBracketsCount--;\n                if (angleBracketsCount === 0) {\n                  break;\n                }\n            }else if( xmlData[i] === '['){\n                hasBody = true;\n            }else{\n                exp += xmlData[i];\n            }\n        }\n        if(angleBracketsCount !== 0){\n            throw new Error(`Unclosed DOCTYPE`);\n        }\n    }else{\n        throw new Error(`Invalid Tag instead of DOCTYPE`);\n    }\n    return {entities, i};\n}\n\nconst entityRegex = RegExp(\"^\\\\s([a-zA-z0-0]+)[ \\t](['\\\"])([^&]+)\\\\2\");\nfunction parseEntityExp(exp, entities){\n    const match = entityRegex.exec(exp);\n    if(match){\n        entities[ match[1] ] = {\n            regx : RegExp( `&${match[1]};`,\"g\"),\n            val: match[3]\n        };\n    }\n}\nmodule.exports = readDocType;","\nconst defaultOptions = {\n    preserveOrder: false,\n    attributeNamePrefix: '@_',\n    attributesGroupName: false,\n    textNodeName: '#text',\n    ignoreAttributes: true,\n    removeNSPrefix: false, // remove NS from tag name or attribute name if true\n    allowBooleanAttributes: false, //a tag can have attributes without any value\n    //ignoreRootElement : false,\n    parseTagValue: true,\n    parseAttributeValue: false,\n    trimValues: true, //Trim string values of tag and attributes\n    cdataPropName: false,\n    numberParseOptions: {\n      hex: true,\n      leadingZeros: true\n    },\n    tagValueProcessor: function(tagName, val) {\n      return val;\n    },\n    attributeValueProcessor: function(attrName, val) {\n      return val;\n    },\n    stopNodes: [], //nested tags will not be parsed even for errors\n    alwaysCreateTextNode: false,\n    isArray: () => false,\n    commentPropName: false,\n    unpairedTags: [],\n    processEntities: true,\n    htmlEntities: false,\n    ignoreDeclaration: false,\n    ignorePiTags: false,\n    transformTagName: false,\n    transformAttributeName: false,\n};\n   \nconst buildOptions = function(options) {\n    return Object.assign({}, defaultOptions, options);\n};\n\nexports.buildOptions = buildOptions;\nexports.defaultOptions = defaultOptions;","'use strict';\n///@ts-check\n\nconst util = require('../util');\nconst xmlNode = require('./xmlNode');\nconst readDocType = require(\"./DocTypeReader\");\nconst toNumber = require(\"strnum\");\n\nconst regx =\n  '<((!\\\\[CDATA\\\\[([\\\\s\\\\S]*?)(]]>))|((NAME:)?(NAME))([^>]*)>|((\\\\/)(NAME)\\\\s*>))([^<]*)'\n  .replace(/NAME/g, util.nameRegexp);\n\n//const tagsRegx = new RegExp(\"<(\\\\/?[\\\\w:\\\\-\\._]+)([^>]*)>(\\\\s*\"+cdataRegx+\")*([^<]+)?\",\"g\");\n//const tagsRegx = new RegExp(\"<(\\\\/?)((\\\\w*:)?([\\\\w:\\\\-\\._]+))([^>]*)>([^<]*)(\"+cdataRegx+\"([^<]*))*([^<]+)?\",\"g\");\n\nclass OrderedObjParser{\n  constructor(options){\n    this.options = options;\n    this.currentNode = null;\n    this.tagsNodeStack = [];\n    this.docTypeEntities = {};\n    this.lastEntities = {\n      \"apos\" : { regex: /&(apos|#39|#x27);/g, val : \"'\"},\n      \"gt\" : { regex: /&(gt|#62|#x3E);/g, val : \">\"},\n      \"lt\" : { regex: /&(lt|#60|#x3C);/g, val : \"<\"},\n      \"quot\" : { regex: /&(quot|#34|#x22);/g, val : \"\\\"\"},\n    };\n    this.ampEntity = { regex: /&(amp|#38|#x26);/g, val : \"&\"};\n    this.htmlEntities = {\n      \"space\": { regex: /&(nbsp|#160);/g, val: \" \" },\n      // \"lt\" : { regex: /&(lt|#60);/g, val: \"<\" },\n      // \"gt\" : { regex: /&(gt|#62);/g, val: \">\" },\n      // \"amp\" : { regex: /&(amp|#38);/g, val: \"&\" },\n      // \"quot\" : { regex: /&(quot|#34);/g, val: \"\\\"\" },\n      // \"apos\" : { regex: /&(apos|#39);/g, val: \"'\" },\n      \"cent\" : { regex: /&(cent|#162);/g, val: \"¢\" },\n      \"pound\" : { regex: /&(pound|#163);/g, val: \"£\" },\n      \"yen\" : { regex: /&(yen|#165);/g, val: \"¥\" },\n      \"euro\" : { regex: /&(euro|#8364);/g, val: \"€\" },\n      \"copyright\" : { regex: /&(copy|#169);/g, val: \"©\" },\n      \"reg\" : { regex: /&(reg|#174);/g, val: \"®\" },\n      \"inr\" : { regex: /&(inr|#8377);/g, val: \"₹\" },\n    };\n    this.addExternalEntities = addExternalEntities;\n    this.parseXml = parseXml;\n    this.parseTextData = parseTextData;\n    this.resolveNameSpace = resolveNameSpace;\n    this.buildAttributesMap = buildAttributesMap;\n    this.isItStopNode = isItStopNode;\n    this.replaceEntitiesValue = replaceEntitiesValue;\n    this.readStopNodeData = readStopNodeData;\n    this.saveTextToParentTag = saveTextToParentTag;\n  }\n\n}\n\nfunction addExternalEntities(externalEntities){\n  const entKeys = Object.keys(externalEntities);\n  for (let i = 0; i < entKeys.length; i++) {\n    const ent = entKeys[i];\n    this.lastEntities[ent] = {\n       regex: new RegExp(\"&\"+ent+\";\",\"g\"),\n       val : externalEntities[ent]\n    }\n  }\n}\n\n/**\n * @param {string} val\n * @param {string} tagName\n * @param {string} jPath\n * @param {boolean} dontTrim\n * @param {boolean} hasAttributes\n * @param {boolean} isLeafNode\n * @param {boolean} escapeEntities\n */\nfunction parseTextData(val, tagName, jPath, dontTrim, hasAttributes, isLeafNode, escapeEntities) {\n  if (val !== undefined) {\n    if (this.options.trimValues && !dontTrim) {\n      val = val.trim();\n    }\n    if(val.length > 0){\n      if(!escapeEntities) val = this.replaceEntitiesValue(val);\n      \n      const newval = this.options.tagValueProcessor(tagName, val, jPath, hasAttributes, isLeafNode);\n      if(newval === null || newval === undefined){\n        //don't parse\n        return val;\n      }else if(typeof newval !== typeof val || newval !== val){\n        //overwrite\n        return newval;\n      }else if(this.options.trimValues){\n        return parseValue(val, this.options.parseTagValue, this.options.numberParseOptions);\n      }else{\n        const trimmedVal = val.trim();\n        if(trimmedVal === val){\n          return parseValue(val, this.options.parseTagValue, this.options.numberParseOptions);\n        }else{\n          return val;\n        }\n      }\n    }\n  }\n}\n\nfunction resolveNameSpace(tagname) {\n  if (this.options.removeNSPrefix) {\n    const tags = tagname.split(':');\n    const prefix = tagname.charAt(0) === '/' ? '/' : '';\n    if (tags[0] === 'xmlns') {\n      return '';\n    }\n    if (tags.length === 2) {\n      tagname = prefix + tags[1];\n    }\n  }\n  return tagname;\n}\n\n//TODO: change regex to capture NS\n//const attrsRegx = new RegExp(\"([\\\\w\\\\-\\\\.\\\\:]+)\\\\s*=\\\\s*(['\\\"])((.|\\n)*?)\\\\2\",\"gm\");\nconst attrsRegx = new RegExp('([^\\\\s=]+)\\\\s*(=\\\\s*([\\'\"])([\\\\s\\\\S]*?)\\\\3)?', 'gm');\n\nfunction buildAttributesMap(attrStr, jPath) {\n  if (!this.options.ignoreAttributes && typeof attrStr === 'string') {\n    // attrStr = attrStr.replace(/\\r?\\n/g, ' ');\n    //attrStr = attrStr || attrStr.trim();\n\n    const matches = util.getAllMatches(attrStr, attrsRegx);\n    const len = matches.length; //don't make it inline\n    const attrs = {};\n    for (let i = 0; i < len; i++) {\n      const attrName = this.resolveNameSpace(matches[i][1]);\n      let oldVal = matches[i][4];\n      let aName = this.options.attributeNamePrefix + attrName;\n      if (attrName.length) {\n        if (this.options.transformAttributeName) {\n          aName = this.options.transformAttributeName(aName);\n        }\n        if (oldVal !== undefined) {\n          if (this.options.trimValues) {\n            oldVal = oldVal.trim();\n          }\n          oldVal = this.replaceEntitiesValue(oldVal);\n          const newVal = this.options.attributeValueProcessor(attrName, oldVal, jPath);\n          if(newVal === null || newVal === undefined){\n            //don't parse\n            attrs[aName] = oldVal;\n          }else if(typeof newVal !== typeof oldVal || newVal !== oldVal){\n            //overwrite\n            attrs[aName] = newVal;\n          }else{\n            //parse\n            attrs[aName] = parseValue(\n              oldVal,\n              this.options.parseAttributeValue,\n              this.options.numberParseOptions\n            );\n          }\n        } else if (this.options.allowBooleanAttributes) {\n          attrs[aName] = true;\n        }\n      }\n    }\n    if (!Object.keys(attrs).length) {\n      return;\n    }\n    if (this.options.attributesGroupName) {\n      const attrCollection = {};\n      attrCollection[this.options.attributesGroupName] = attrs;\n      return attrCollection;\n    }\n    return attrs;\n  }\n}\n\nconst parseXml = function(xmlData) {\n  xmlData = xmlData.replace(/\\r\\n?/g, \"\\n\"); //TODO: remove this line\n  const xmlObj = new xmlNode('!xml');\n  let currentNode = xmlObj;\n  let textData = \"\";\n  let jPath = \"\";\n  for(let i=0; i< xmlData.length; i++){//for each char in XML data\n    const ch = xmlData[i];\n    if(ch === '<'){\n      // const nextIndex = i+1;\n      // const _2ndChar = xmlData[nextIndex];\n      if( xmlData[i+1] === '/') {//Closing Tag\n        const closeIndex = findClosingIndex(xmlData, \">\", i, \"Closing Tag is not closed.\")\n        let tagName = xmlData.substring(i+2,closeIndex).trim();\n\n        if(this.options.removeNSPrefix){\n          const colonIndex = tagName.indexOf(\":\");\n          if(colonIndex !== -1){\n            tagName = tagName.substr(colonIndex+1);\n          }\n        }\n\n        if(this.options.transformTagName) {\n          tagName = this.options.transformTagName(tagName);\n        }\n\n        if(currentNode){\n          textData = this.saveTextToParentTag(textData, currentNode, jPath);\n        }\n\n        jPath = jPath.substr(0, jPath.lastIndexOf(\".\"));\n        \n        currentNode = this.tagsNodeStack.pop();//avoid recurssion, set the parent tag scope\n        textData = \"\";\n        i = closeIndex;\n      } else if( xmlData[i+1] === '?') {\n\n        let tagData = readTagExp(xmlData,i, false, \"?>\");\n        if(!tagData) throw new Error(\"Pi Tag is not closed.\");\n\n        textData = this.saveTextToParentTag(textData, currentNode, jPath);\n        if( (this.options.ignoreDeclaration && tagData.tagName === \"?xml\") || this.options.ignorePiTags){\n\n        }else{\n  \n          const childNode = new xmlNode(tagData.tagName);\n          childNode.add(this.options.textNodeName, \"\");\n          \n          if(tagData.tagName !== tagData.tagExp && tagData.attrExpPresent){\n            childNode[\":@\"] = this.buildAttributesMap(tagData.tagExp, jPath);\n          }\n          currentNode.addChild(childNode);\n\n        }\n\n\n        i = tagData.closeIndex + 1;\n      } else if(xmlData.substr(i + 1, 3) === '!--') {\n        const endIndex = findClosingIndex(xmlData, \"-->\", i+4, \"Comment is not closed.\")\n        if(this.options.commentPropName){\n          const comment = xmlData.substring(i + 4, endIndex - 2);\n\n          textData = this.saveTextToParentTag(textData, currentNode, jPath);\n\n          currentNode.add(this.options.commentPropName, [ { [this.options.textNodeName] : comment } ]);\n        }\n        i = endIndex;\n      } else if( xmlData.substr(i + 1, 2) === '!D') {\n        const result = readDocType(xmlData, i);\n        this.docTypeEntities = result.entities;\n        i = result.i;\n      }else if(xmlData.substr(i + 1, 2) === '![') {\n        const closeIndex = findClosingIndex(xmlData, \"]]>\", i, \"CDATA is not closed.\") - 2;\n        const tagExp = xmlData.substring(i + 9,closeIndex);\n\n        textData = this.saveTextToParentTag(textData, currentNode, jPath);\n\n        //cdata should be set even if it is 0 length string\n        if(this.options.cdataPropName){\n          // let val = this.parseTextData(tagExp, this.options.cdataPropName, jPath + \".\" + this.options.cdataPropName, true, false, true);\n          // if(!val) val = \"\";\n          currentNode.add(this.options.cdataPropName, [ { [this.options.textNodeName] : tagExp } ]);\n        }else{\n          let val = this.parseTextData(tagExp, currentNode.tagname, jPath, true, false, true);\n          if(val == undefined) val = \"\";\n          currentNode.add(this.options.textNodeName, val);\n        }\n        \n        i = closeIndex + 2;\n      }else {//Opening tag\n        let result = readTagExp(xmlData,i, this.options.removeNSPrefix);\n        let tagName= result.tagName;\n        let tagExp = result.tagExp;\n        let attrExpPresent = result.attrExpPresent;\n        let closeIndex = result.closeIndex;\n\n        if (this.options.transformTagName) {\n          tagName = this.options.transformTagName(tagName);\n        }\n        \n        //save text as child node\n        if (currentNode && textData) {\n          if(currentNode.tagname !== '!xml'){\n            //when nested tag is found\n            textData = this.saveTextToParentTag(textData, currentNode, jPath, false);\n          }\n        }\n\n        if(tagName !== xmlObj.tagname){\n          jPath += jPath ? \".\" + tagName : tagName;\n        }\n\n        //check if last tag was unpaired tag\n        const lastTag = currentNode;\n        if(lastTag && this.options.unpairedTags.indexOf(lastTag.tagname) !== -1 ){\n          currentNode = this.tagsNodeStack.pop();\n        }\n\n        if (this.isItStopNode(this.options.stopNodes, jPath, tagName)) { //TODO: namespace\n          let tagContent = \"\";\n          //self-closing tag\n          if(tagExp.length > 0 && tagExp.lastIndexOf(\"/\") === tagExp.length - 1){\n            i = result.closeIndex;\n          }\n          //boolean tag\n          else if(this.options.unpairedTags.indexOf(tagName) !== -1){\n            i = result.closeIndex;\n          }\n          //normal tag\n          else{\n            //read until closing tag is found\n            const result = this.readStopNodeData(xmlData, tagName, closeIndex + 1);\n            if(!result) throw new Error(`Unexpected end of ${tagName}`);\n            i = result.i;\n            tagContent = result.tagContent;\n          }\n\n          const childNode = new xmlNode(tagName);\n          if(tagName !== tagExp && attrExpPresent){\n            childNode[\":@\"] = this.buildAttributesMap(tagExp, jPath);\n          }\n          if(tagContent) {\n            tagContent = this.parseTextData(tagContent, tagName, jPath, true, attrExpPresent, true, true);\n          }\n          \n          jPath = jPath.substr(0, jPath.lastIndexOf(\".\"));\n          childNode.add(this.options.textNodeName, tagContent);\n          \n          currentNode.addChild(childNode);\n        }else{\n  //selfClosing tag\n          if(tagExp.length > 0 && tagExp.lastIndexOf(\"/\") === tagExp.length - 1){\n            if(tagName[tagName.length - 1] === \"/\"){ //remove trailing '/'\n              tagName = tagName.substr(0, tagName.length - 1);\n              tagExp = tagName;\n            }else{\n              tagExp = tagExp.substr(0, tagExp.length - 1);\n            }\n            \n            if(this.options.transformTagName) {\n              tagName = this.options.transformTagName(tagName);\n            }\n\n            const childNode = new xmlNode(tagName);\n            if(tagName !== tagExp && attrExpPresent){\n              childNode[\":@\"] = this.buildAttributesMap(tagExp, jPath);\n            }\n            jPath = jPath.substr(0, jPath.lastIndexOf(\".\"));\n            currentNode.addChild(childNode);\n          }\n    //opening tag\n          else{\n            const childNode = new xmlNode( tagName);\n            this.tagsNodeStack.push(currentNode);\n            \n            if(tagName !== tagExp && attrExpPresent){\n              childNode[\":@\"] = this.buildAttributesMap(tagExp, jPath);\n            }\n            currentNode.addChild(childNode);\n            currentNode = childNode;\n          }\n          textData = \"\";\n          i = closeIndex;\n        }\n      }\n    }else{\n      textData += xmlData[i];\n    }\n  }\n  return xmlObj.child;\n}\n\nconst replaceEntitiesValue = function(val){\n\n  if(this.options.processEntities){\n    for(let entityName in this.docTypeEntities){\n      const entity = this.docTypeEntities[entityName];\n      val = val.replace( entity.regx, entity.val);\n    }\n    for(let entityName in this.lastEntities){\n      const entity = this.lastEntities[entityName];\n      val = val.replace( entity.regex, entity.val);\n    }\n    if(this.options.htmlEntities){\n      for(let entityName in this.htmlEntities){\n        const entity = this.htmlEntities[entityName];\n        val = val.replace( entity.regex, entity.val);\n      }\n    }\n    val = val.replace( this.ampEntity.regex, this.ampEntity.val);\n  }\n  return val;\n}\nfunction saveTextToParentTag(textData, currentNode, jPath, isLeafNode) {\n  if (textData) { //store previously collected data as textNode\n    if(isLeafNode === undefined) isLeafNode = Object.keys(currentNode.child).length === 0\n    \n    textData = this.parseTextData(textData,\n      currentNode.tagname,\n      jPath,\n      false,\n      currentNode[\":@\"] ? Object.keys(currentNode[\":@\"]).length !== 0 : false,\n      isLeafNode);\n\n    if (textData !== undefined && textData !== \"\")\n      currentNode.add(this.options.textNodeName, textData);\n    textData = \"\";\n  }\n  return textData;\n}\n\n//TODO: use jPath to simplify the logic\n/**\n * \n * @param {string[]} stopNodes \n * @param {string} jPath\n * @param {string} currentTagName \n */\nfunction isItStopNode(stopNodes, jPath, currentTagName){\n  const allNodesExp = \"*.\" + currentTagName;\n  for (const stopNodePath in stopNodes) {\n    const stopNodeExp = stopNodes[stopNodePath];\n    if( allNodesExp === stopNodeExp || jPath === stopNodeExp  ) return true;\n  }\n  return false;\n}\n\n/**\n * Returns the tag Expression and where it is ending handling single-dobule quotes situation\n * @param {string} xmlData \n * @param {number} i starting index\n * @returns \n */\nfunction tagExpWithClosingIndex(xmlData, i, closingChar = \">\"){\n  let attrBoundary;\n  let tagExp = \"\";\n  for (let index = i; index < xmlData.length; index++) {\n    let ch = xmlData[index];\n    if (attrBoundary) {\n        if (ch === attrBoundary) attrBoundary = \"\";//reset\n    } else if (ch === '\"' || ch === \"'\") {\n        attrBoundary = ch;\n    } else if (ch === closingChar[0]) {\n      if(closingChar[1]){\n        if(xmlData[index + 1] === closingChar[1]){\n          return {\n            data: tagExp,\n            index: index\n          }\n        }\n      }else{\n        return {\n          data: tagExp,\n          index: index\n        }\n      }\n    } else if (ch === '\\t') {\n      ch = \" \"\n    }\n    tagExp += ch;\n  }\n}\n\nfunction findClosingIndex(xmlData, str, i, errMsg){\n  const closingIndex = xmlData.indexOf(str, i);\n  if(closingIndex === -1){\n    throw new Error(errMsg)\n  }else{\n    return closingIndex + str.length - 1;\n  }\n}\n\nfunction readTagExp(xmlData,i, removeNSPrefix, closingChar = \">\"){\n  const result = tagExpWithClosingIndex(xmlData, i+1, closingChar);\n  if(!result) return;\n  let tagExp = result.data;\n  const closeIndex = result.index;\n  const separatorIndex = tagExp.search(/\\s/);\n  let tagName = tagExp;\n  let attrExpPresent = true;\n  if(separatorIndex !== -1){//separate tag name and attributes expression\n    tagName = tagExp.substr(0, separatorIndex).replace(/\\s\\s*$/, '');\n    tagExp = tagExp.substr(separatorIndex + 1);\n  }\n\n  if(removeNSPrefix){\n    const colonIndex = tagName.indexOf(\":\");\n    if(colonIndex !== -1){\n      tagName = tagName.substr(colonIndex+1);\n      attrExpPresent = tagName !== result.data.substr(colonIndex + 1);\n    }\n  }\n\n  return {\n    tagName: tagName,\n    tagExp: tagExp,\n    closeIndex: closeIndex,\n    attrExpPresent: attrExpPresent,\n  }\n}\n/**\n * find paired tag for a stop node\n * @param {string} xmlData \n * @param {string} tagName \n * @param {number} i \n */\nfunction readStopNodeData(xmlData, tagName, i){\n  const startIndex = i;\n  // Starting at 1 since we already have an open tag\n  let openTagCount = 1;\n\n  for (; i < xmlData.length; i++) {\n    if( xmlData[i] === \"<\"){ \n      if (xmlData[i+1] === \"/\") {//close tag\n          const closeIndex = findClosingIndex(xmlData, \">\", i, `${tagName} is not closed`);\n          let closeTagName = xmlData.substring(i+2,closeIndex).trim();\n          if(closeTagName === tagName){\n            openTagCount--;\n            if (openTagCount === 0) {\n              return {\n                tagContent: xmlData.substring(startIndex, i),\n                i : closeIndex\n              }\n            }\n          }\n          i=closeIndex;\n        } else if(xmlData[i+1] === '?') { \n          const closeIndex = findClosingIndex(xmlData, \"?>\", i+1, \"StopNode is not closed.\")\n          i=closeIndex;\n        } else if(xmlData.substr(i + 1, 3) === '!--') { \n          const closeIndex = findClosingIndex(xmlData, \"-->\", i+3, \"StopNode is not closed.\")\n          i=closeIndex;\n        } else if(xmlData.substr(i + 1, 2) === '![') { \n          const closeIndex = findClosingIndex(xmlData, \"]]>\", i, \"StopNode is not closed.\") - 2;\n          i=closeIndex;\n        } else {\n          const tagData = readTagExp(xmlData, i, '>')\n\n          if (tagData) {\n            const openTagName = tagData && tagData.tagName;\n            if (openTagName === tagName && tagData.tagExp[tagData.tagExp.length-1] !== \"/\") {\n              openTagCount++;\n            }\n            i=tagData.closeIndex;\n          }\n        }\n      }\n  }//end for loop\n}\n\nfunction parseValue(val, shouldParse, options) {\n  if (shouldParse && typeof val === 'string') {\n    //console.log(options)\n    const newval = val.trim();\n    if(newval === 'true' ) return true;\n    else if(newval === 'false' ) return false;\n    else return toNumber(val, options);\n  } else {\n    if (util.isExist(val)) {\n      return val;\n    } else {\n      return '';\n    }\n  }\n}\n\n\nmodule.exports = OrderedObjParser;\n","const { buildOptions} = require(\"./OptionsBuilder\");\nconst OrderedObjParser = require(\"./OrderedObjParser\");\nconst { prettify} = require(\"./node2json\");\nconst validator = require('../validator');\n\nclass XMLParser{\n    \n    constructor(options){\n        this.externalEntities = {};\n        this.options = buildOptions(options);\n        \n    }\n    /**\n     * Parse XML dats to JS object \n     * @param {string|Buffer} xmlData \n     * @param {boolean|Object} validationOption \n     */\n    parse(xmlData,validationOption){\n        if(typeof xmlData === \"string\"){\n        }else if( xmlData.toString){\n            xmlData = xmlData.toString();\n        }else{\n            throw new Error(\"XML data is accepted in String or Bytes[] form.\")\n        }\n        if( validationOption){\n            if(validationOption === true) validationOption = {}; //validate with default options\n            \n            const result = validator.validate(xmlData, validationOption);\n            if (result !== true) {\n              throw Error( `${result.err.msg}:${result.err.line}:${result.err.col}` )\n            }\n          }\n        const orderedObjParser = new OrderedObjParser(this.options);\n        orderedObjParser.addExternalEntities(this.externalEntities);\n        const orderedResult = orderedObjParser.parseXml(xmlData);\n        if(this.options.preserveOrder || orderedResult === undefined) return orderedResult;\n        else return prettify(orderedResult, this.options);\n    }\n\n    /**\n     * Add Entity which is not by default supported by this library\n     * @param {string} key \n     * @param {string} value \n     */\n    addEntity(key, value){\n        if(value.indexOf(\"&\") !== -1){\n            throw new Error(\"Entity value can't have '&'\")\n        }else if(key.indexOf(\"&\") !== -1 || key.indexOf(\";\") !== -1){\n            throw new Error(\"An entity must be set without '&' and ';'. Eg. use '#xD' for '&#xD;'\")\n        }else if(value === \"&\"){\n            throw new Error(\"An entity with value '&' is not permitted\");\n        }else{\n            this.externalEntities[key] = value;\n        }\n    }\n}\n\nmodule.exports = XMLParser;","'use strict';\n\n/**\n * \n * @param {array} node \n * @param {any} options \n * @returns \n */\nfunction prettify(node, options){\n  return compress( node, options);\n}\n\n/**\n * \n * @param {array} arr \n * @param {object} options \n * @param {string} jPath \n * @returns object\n */\nfunction compress(arr, options, jPath){\n  let text;\n  const compressedObj = {};\n  for (let i = 0; i < arr.length; i++) {\n    const tagObj = arr[i];\n    const property = propName(tagObj);\n    let newJpath = \"\";\n    if(jPath === undefined) newJpath = property;\n    else newJpath = jPath + \".\" + property;\n\n    if(property === options.textNodeName){\n      if(text === undefined) text = tagObj[property];\n      else text += \"\" + tagObj[property];\n    }else if(property === undefined){\n      continue;\n    }else if(tagObj[property]){\n      \n      let val = compress(tagObj[property], options, newJpath);\n      const isLeaf = isLeafTag(val, options);\n\n      if(tagObj[\":@\"]){\n        assignAttributes( val, tagObj[\":@\"], newJpath, options);\n      }else if(Object.keys(val).length === 1 && val[options.textNodeName] !== undefined && !options.alwaysCreateTextNode){\n        val = val[options.textNodeName];\n      }else if(Object.keys(val).length === 0){\n        if(options.alwaysCreateTextNode) val[options.textNodeName] = \"\";\n        else val = \"\";\n      }\n\n      if(compressedObj[property] !== undefined && compressedObj.hasOwnProperty(property)) {\n        if(!Array.isArray(compressedObj[property])) {\n            compressedObj[property] = [ compressedObj[property] ];\n        }\n        compressedObj[property].push(val);\n      }else{\n        //TODO: if a node is not an array, then check if it should be an array\n        //also determine if it is a leaf node\n        if (options.isArray(property, newJpath, isLeaf )) {\n          compressedObj[property] = [val];\n        }else{\n          compressedObj[property] = val;\n        }\n      }\n    }\n    \n  }\n  // if(text && text.length > 0) compressedObj[options.textNodeName] = text;\n  if(typeof text === \"string\"){\n    if(text.length > 0) compressedObj[options.textNodeName] = text;\n  }else if(text !== undefined) compressedObj[options.textNodeName] = text;\n  return compressedObj;\n}\n\nfunction propName(obj){\n  const keys = Object.keys(obj);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    if(key !== \":@\") return key;\n  }\n}\n\nfunction assignAttributes(obj, attrMap, jpath, options){\n  if (attrMap) {\n    const keys = Object.keys(attrMap);\n    const len = keys.length; //don't make it inline\n    for (let i = 0; i < len; i++) {\n      const atrrName = keys[i];\n      if (options.isArray(atrrName, jpath + \".\" + atrrName, true, true)) {\n        obj[atrrName] = [ attrMap[atrrName] ];\n      } else {\n        obj[atrrName] = attrMap[atrrName];\n      }\n    }\n  }\n}\n\nfunction isLeafTag(obj, options){\n  const propCount = Object.keys(obj).length;\n  if( propCount === 0 || (propCount === 1 && obj[options.textNodeName]) ) return true;\n  return false;\n}\nexports.prettify = prettify;\n","'use strict';\n\nclass XmlNode{\n  constructor(tagname) {\n    this.tagname = tagname;\n    this.child = []; //nested tags, text, cdata, comments in order\n    this[\":@\"] = {}; //attributes map\n  }\n  add(key,val){\n    // this.child.push( {name : key, val: val, isCdata: isCdata });\n    this.child.push( {[key]: val });\n  }\n  addChild(node) {\n    if(node[\":@\"] && Object.keys(node[\":@\"]).length > 0){\n      this.child.push( { [node.tagname]: node.child, [\":@\"]: node[\":@\"] });\n    }else{\n      this.child.push( { [node.tagname]: node.child });\n    }\n  };\n};\n\n\nmodule.exports = XmlNode;","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","\"use strict\";\n\n// ref: https://github.com/tc39/proposal-global\nvar getGlobal = function () {\n\t// the only reliable means to get the global object is\n\t// `Function('return this')()`\n\t// However, this causes CSP violations in Chrome apps.\n\tif (typeof self !== 'undefined') { return self; }\n\tif (typeof window !== 'undefined') { return window; }\n\tif (typeof global !== 'undefined') { return global; }\n\tthrow new Error('unable to locate global object');\n}\n\nvar global = getGlobal();\n\nmodule.exports = exports = global.fetch;\n\n// Needed for TypeScript and Webpack.\nif (global.fetch) {\n\texports.default = global.fetch.bind(global);\n}\n\nexports.Headers = global.Headers;\nexports.Request = global.Request;\nexports.Response = global.Response;","// 'path' module extracted from Node.js v8.11.1 (only the posix part)\n// transplited with Babel\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError('Path must be a string. Received ' + JSON.stringify(path));\n  }\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeStringPosix(path, allowAboveRoot) {\n  var res = '';\n  var lastSegmentLength = 0;\n  var lastSlash = -1;\n  var dots = 0;\n  var code;\n  for (var i = 0; i <= path.length; ++i) {\n    if (i < path.length)\n      code = path.charCodeAt(i);\n    else if (code === 47 /*/*/)\n      break;\n    else\n      code = 47 /*/*/;\n    if (code === 47 /*/*/) {\n      if (lastSlash === i - 1 || dots === 1) {\n        // NOOP\n      } else if (lastSlash !== i - 1 && dots === 2) {\n        if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46 /*.*/ || res.charCodeAt(res.length - 2) !== 46 /*.*/) {\n          if (res.length > 2) {\n            var lastSlashIndex = res.lastIndexOf('/');\n            if (lastSlashIndex !== res.length - 1) {\n              if (lastSlashIndex === -1) {\n                res = '';\n                lastSegmentLength = 0;\n              } else {\n                res = res.slice(0, lastSlashIndex);\n                lastSegmentLength = res.length - 1 - res.lastIndexOf('/');\n              }\n              lastSlash = i;\n              dots = 0;\n              continue;\n            }\n          } else if (res.length === 2 || res.length === 1) {\n            res = '';\n            lastSegmentLength = 0;\n            lastSlash = i;\n            dots = 0;\n            continue;\n          }\n        }\n        if (allowAboveRoot) {\n          if (res.length > 0)\n            res += '/..';\n          else\n            res = '..';\n          lastSegmentLength = 2;\n        }\n      } else {\n        if (res.length > 0)\n          res += '/' + path.slice(lastSlash + 1, i);\n        else\n          res = path.slice(lastSlash + 1, i);\n        lastSegmentLength = i - lastSlash - 1;\n      }\n      lastSlash = i;\n      dots = 0;\n    } else if (code === 46 /*.*/ && dots !== -1) {\n      ++dots;\n    } else {\n      dots = -1;\n    }\n  }\n  return res;\n}\n\nfunction _format(sep, pathObject) {\n  var dir = pathObject.dir || pathObject.root;\n  var base = pathObject.base || (pathObject.name || '') + (pathObject.ext || '');\n  if (!dir) {\n    return base;\n  }\n  if (dir === pathObject.root) {\n    return dir + base;\n  }\n  return dir + sep + base;\n}\n\nvar posix = {\n  // path.resolve([from ...], to)\n  resolve: function resolve() {\n    var resolvedPath = '';\n    var resolvedAbsolute = false;\n    var cwd;\n\n    for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n      var path;\n      if (i >= 0)\n        path = arguments[i];\n      else {\n        if (cwd === undefined)\n          cwd = process.cwd();\n        path = cwd;\n      }\n\n      assertPath(path);\n\n      // Skip empty entries\n      if (path.length === 0) {\n        continue;\n      }\n\n      resolvedPath = path + '/' + resolvedPath;\n      resolvedAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    }\n\n    // At this point the path should be resolved to a full absolute path, but\n    // handle relative paths to be safe (might happen when process.cwd() fails)\n\n    // Normalize the path\n    resolvedPath = normalizeStringPosix(resolvedPath, !resolvedAbsolute);\n\n    if (resolvedAbsolute) {\n      if (resolvedPath.length > 0)\n        return '/' + resolvedPath;\n      else\n        return '/';\n    } else if (resolvedPath.length > 0) {\n      return resolvedPath;\n    } else {\n      return '.';\n    }\n  },\n\n  normalize: function normalize(path) {\n    assertPath(path);\n\n    if (path.length === 0) return '.';\n\n    var isAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    var trailingSeparator = path.charCodeAt(path.length - 1) === 47 /*/*/;\n\n    // Normalize the path\n    path = normalizeStringPosix(path, !isAbsolute);\n\n    if (path.length === 0 && !isAbsolute) path = '.';\n    if (path.length > 0 && trailingSeparator) path += '/';\n\n    if (isAbsolute) return '/' + path;\n    return path;\n  },\n\n  isAbsolute: function isAbsolute(path) {\n    assertPath(path);\n    return path.length > 0 && path.charCodeAt(0) === 47 /*/*/;\n  },\n\n  join: function join() {\n    if (arguments.length === 0)\n      return '.';\n    var joined;\n    for (var i = 0; i < arguments.length; ++i) {\n      var arg = arguments[i];\n      assertPath(arg);\n      if (arg.length > 0) {\n        if (joined === undefined)\n          joined = arg;\n        else\n          joined += '/' + arg;\n      }\n    }\n    if (joined === undefined)\n      return '.';\n    return posix.normalize(joined);\n  },\n\n  relative: function relative(from, to) {\n    assertPath(from);\n    assertPath(to);\n\n    if (from === to) return '';\n\n    from = posix.resolve(from);\n    to = posix.resolve(to);\n\n    if (from === to) return '';\n\n    // Trim any leading backslashes\n    var fromStart = 1;\n    for (; fromStart < from.length; ++fromStart) {\n      if (from.charCodeAt(fromStart) !== 47 /*/*/)\n        break;\n    }\n    var fromEnd = from.length;\n    var fromLen = fromEnd - fromStart;\n\n    // Trim any leading backslashes\n    var toStart = 1;\n    for (; toStart < to.length; ++toStart) {\n      if (to.charCodeAt(toStart) !== 47 /*/*/)\n        break;\n    }\n    var toEnd = to.length;\n    var toLen = toEnd - toStart;\n\n    // Compare paths to find the longest common path from root\n    var length = fromLen < toLen ? fromLen : toLen;\n    var lastCommonSep = -1;\n    var i = 0;\n    for (; i <= length; ++i) {\n      if (i === length) {\n        if (toLen > length) {\n          if (to.charCodeAt(toStart + i) === 47 /*/*/) {\n            // We get here if `from` is the exact base path for `to`.\n            // For example: from='/foo/bar'; to='/foo/bar/baz'\n            return to.slice(toStart + i + 1);\n          } else if (i === 0) {\n            // We get here if `from` is the root\n            // For example: from='/'; to='/foo'\n            return to.slice(toStart + i);\n          }\n        } else if (fromLen > length) {\n          if (from.charCodeAt(fromStart + i) === 47 /*/*/) {\n            // We get here if `to` is the exact base path for `from`.\n            // For example: from='/foo/bar/baz'; to='/foo/bar'\n            lastCommonSep = i;\n          } else if (i === 0) {\n            // We get here if `to` is the root.\n            // For example: from='/foo'; to='/'\n            lastCommonSep = 0;\n          }\n        }\n        break;\n      }\n      var fromCode = from.charCodeAt(fromStart + i);\n      var toCode = to.charCodeAt(toStart + i);\n      if (fromCode !== toCode)\n        break;\n      else if (fromCode === 47 /*/*/)\n        lastCommonSep = i;\n    }\n\n    var out = '';\n    // Generate the relative path based on the path difference between `to`\n    // and `from`\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd || from.charCodeAt(i) === 47 /*/*/) {\n        if (out.length === 0)\n          out += '..';\n        else\n          out += '/..';\n      }\n    }\n\n    // Lastly, append the rest of the destination (`to`) path that comes after\n    // the common path parts\n    if (out.length > 0)\n      return out + to.slice(toStart + lastCommonSep);\n    else {\n      toStart += lastCommonSep;\n      if (to.charCodeAt(toStart) === 47 /*/*/)\n        ++toStart;\n      return to.slice(toStart);\n    }\n  },\n\n  _makeLong: function _makeLong(path) {\n    return path;\n  },\n\n  dirname: function dirname(path) {\n    assertPath(path);\n    if (path.length === 0) return '.';\n    var code = path.charCodeAt(0);\n    var hasRoot = code === 47 /*/*/;\n    var end = -1;\n    var matchedSlash = true;\n    for (var i = path.length - 1; i >= 1; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          if (!matchedSlash) {\n            end = i;\n            break;\n          }\n        } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n\n    if (end === -1) return hasRoot ? '/' : '.';\n    if (hasRoot && end === 1) return '//';\n    return path.slice(0, end);\n  },\n\n  basename: function basename(path, ext) {\n    if (ext !== undefined && typeof ext !== 'string') throw new TypeError('\"ext\" argument must be a string');\n    assertPath(path);\n\n    var start = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i;\n\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n      if (ext.length === path.length && ext === path) return '';\n      var extIdx = ext.length - 1;\n      var firstNonSlashEnd = -1;\n      for (i = path.length - 1; i >= 0; --i) {\n        var code = path.charCodeAt(i);\n        if (code === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator, remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === ext.charCodeAt(extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension, so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match, so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n\n      if (start === end) end = firstNonSlashEnd;else if (end === -1) end = path.length;\n      return path.slice(start, end);\n    } else {\n      for (i = path.length - 1; i >= 0; --i) {\n        if (path.charCodeAt(i) === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else if (end === -1) {\n          // We saw the first non-path separator, mark this as the end of our\n          // path component\n          matchedSlash = false;\n          end = i + 1;\n        }\n      }\n\n      if (end === -1) return '';\n      return path.slice(start, end);\n    }\n  },\n\n  extname: function extname(path) {\n    assertPath(path);\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n    for (var i = path.length - 1; i >= 0; --i) {\n      var code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1)\n            startDot = i;\n          else if (preDotState !== 1)\n            preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n        // We saw a non-dot character immediately before the dot\n        preDotState === 0 ||\n        // The (right-most) trimmed path component is exactly '..'\n        preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      return '';\n    }\n    return path.slice(startDot, end);\n  },\n\n  format: function format(pathObject) {\n    if (pathObject === null || typeof pathObject !== 'object') {\n      throw new TypeError('The \"pathObject\" argument must be of type Object. Received type ' + typeof pathObject);\n    }\n    return _format('/', pathObject);\n  },\n\n  parse: function parse(path) {\n    assertPath(path);\n\n    var ret = { root: '', dir: '', base: '', ext: '', name: '' };\n    if (path.length === 0) return ret;\n    var code = path.charCodeAt(0);\n    var isAbsolute = code === 47 /*/*/;\n    var start;\n    if (isAbsolute) {\n      ret.root = '/';\n      start = 1;\n    } else {\n      start = 0;\n    }\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i = path.length - 1;\n\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n\n    // Get non-dir info\n    for (; i >= start; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1) startDot = i;else if (preDotState !== 1) preDotState = 1;\n        } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n    // We saw a non-dot character immediately before the dot\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly '..'\n    preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      if (end !== -1) {\n        if (startPart === 0 && isAbsolute) ret.base = ret.name = path.slice(1, end);else ret.base = ret.name = path.slice(startPart, end);\n      }\n    } else {\n      if (startPart === 0 && isAbsolute) {\n        ret.name = path.slice(1, startDot);\n        ret.base = path.slice(1, end);\n      } else {\n        ret.name = path.slice(startPart, startDot);\n        ret.base = path.slice(startPart, end);\n      }\n      ret.ext = path.slice(startDot, end);\n    }\n\n    if (startPart > 0) ret.dir = path.slice(0, startPart - 1);else if (isAbsolute) ret.dir = '/';\n\n    return ret;\n  },\n\n  sep: '/',\n  delimiter: ':',\n  win32: null,\n  posix: null\n};\n\nposix.posix = posix;\n\nmodule.exports = posix;\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","const hexRegex = /^[-+]?0x[a-fA-F0-9]+$/;\nconst numRegex = /^([\\-\\+])?(0*)(\\.[0-9]+([eE]\\-?[0-9]+)?|[0-9]+(\\.[0-9]+([eE]\\-?[0-9]+)?)?)$/;\n// const octRegex = /0x[a-z0-9]+/;\n// const binRegex = /0x[a-z0-9]+/;\n\n\n//polyfill\nif (!Number.parseInt && window.parseInt) {\n    Number.parseInt = window.parseInt;\n}\nif (!Number.parseFloat && window.parseFloat) {\n    Number.parseFloat = window.parseFloat;\n}\n\n  \nconst consider = {\n    hex :  true,\n    leadingZeros: true,\n    decimalPoint: \"\\.\",\n    eNotation: true\n    //skipLike: /regex/\n};\n\nfunction toNumber(str, options = {}){\n    // const options = Object.assign({}, consider);\n    // if(opt.leadingZeros === false){\n    //     options.leadingZeros = false;\n    // }else if(opt.hex === false){\n    //     options.hex = false;\n    // }\n\n    options = Object.assign({}, consider, options );\n    if(!str || typeof str !== \"string\" ) return str;\n    \n    let trimmedStr  = str.trim();\n    // if(trimmedStr === \"0.0\") return 0;\n    // else if(trimmedStr === \"+0.0\") return 0;\n    // else if(trimmedStr === \"-0.0\") return -0;\n\n    if(options.skipLike !== undefined && options.skipLike.test(trimmedStr)) return str;\n    else if (options.hex && hexRegex.test(trimmedStr)) {\n        return Number.parseInt(trimmedStr, 16);\n    // } else if (options.parseOct && octRegex.test(str)) {\n    //     return Number.parseInt(val, 8);\n    // }else if (options.parseBin && binRegex.test(str)) {\n    //     return Number.parseInt(val, 2);\n    }else{\n        //separate negative sign, leading zeros, and rest number\n        const match = numRegex.exec(trimmedStr);\n        if(match){\n            const sign = match[1];\n            const leadingZeros = match[2];\n            let numTrimmedByZeros = trimZeros(match[3]); //complete num without leading zeros\n            //trim ending zeros for floating number\n            \n            const eNotation = match[4] || match[6];\n            if(!options.leadingZeros && leadingZeros.length > 0 && sign && trimmedStr[2] !== \".\") return str; //-0123\n            else if(!options.leadingZeros && leadingZeros.length > 0 && !sign && trimmedStr[1] !== \".\") return str; //0123\n            else{//no leading zeros or leading zeros are allowed\n                const num = Number(trimmedStr);\n                const numStr = \"\" + num;\n                if(numStr.search(/[eE]/) !== -1){ //given number is long and parsed to eNotation\n                    if(options.eNotation) return num;\n                    else return str;\n                }else if(eNotation){ //given number has enotation\n                    if(options.eNotation) return num;\n                    else return str;\n                }else if(trimmedStr.indexOf(\".\") !== -1){ //floating number\n                    // const decimalPart = match[5].substr(1);\n                    // const intPart = trimmedStr.substr(0,trimmedStr.indexOf(\".\"));\n\n                    \n                    // const p = numStr.indexOf(\".\");\n                    // const givenIntPart = numStr.substr(0,p);\n                    // const givenDecPart = numStr.substr(p+1);\n                    if(numStr === \"0\" && (numTrimmedByZeros === \"\") ) return num; //0.0\n                    else if(numStr === numTrimmedByZeros) return num; //0.456. 0.79000\n                    else if( sign && numStr === \"-\"+numTrimmedByZeros) return num;\n                    else return str;\n                }\n                \n                if(leadingZeros){\n                    // if(numTrimmedByZeros === numStr){\n                    //     if(options.leadingZeros) return num;\n                    //     else return str;\n                    // }else return str;\n                    if(numTrimmedByZeros === numStr) return num;\n                    else if(sign+numTrimmedByZeros === numStr) return num;\n                    else return str;\n                }\n\n                if(trimmedStr === numStr) return num;\n                else if(trimmedStr === sign+numStr) return num;\n                // else{\n                //     //number with +/- sign\n                //     trimmedStr.test(/[-+][0-9]);\n\n                // }\n                return str;\n            }\n            // else if(!eNotation && trimmedStr && trimmedStr !== Number(trimmedStr) ) return str;\n            \n        }else{ //non-numeric string\n            return str;\n        }\n    }\n}\n\n/**\n * \n * @param {string} numStr without leading zeros\n * @returns \n */\nfunction trimZeros(numStr){\n    if(numStr && numStr.indexOf(\".\") !== -1){//float\n        numStr = numStr.replace(/0+$/, \"\"); //remove ending zeros\n        if(numStr === \".\")  numStr = \"0\";\n        else if(numStr[0] === \".\")  numStr = \"0\"+numStr;\n        else if(numStr[numStr.length-1] === \".\")  numStr = numStr.substr(0,numStr.length-1);\n        return numStr;\n    }\n    return numStr;\n}\nmodule.exports = toNumber\n","import fetch, { Response } from \"node-fetch\";\n\nimport { ParseOptions, Seq } from \".\";\nimport parseFile from \"./parseFile\";\n\n/**\n * Get a remote sequence from NCBI or the iGEM registry.\n */\nexport default async (accession: string, options?: ParseOptions): Promise<Seq> => {\n  // The user doesn't specify the target registry, so we have to infer it from the passed accession: iGEM or NCBI\n  let url = `https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=nuccore&id=${accession.trim()}&rettype=gbwithparts&retmode=text`;\n  if (accession.startsWith(\"BB\")) {\n    // it's a BioBrick... target the iGEM repo\n    if ((typeof window !== \"undefined\" && typeof process === \"undefined\") || options?.cors) {\n      // use this hack to get around a no-CORS setting on iGEM webserver, pending fix on their side\n      url = `https://cors-anywhere.herokuapp.com/http://parts.igem.org/cgi/xml/part.cgi?part=${accession.trim()}`;\n    } else {\n      url = `http://parts.igem.org/cgi/xml/part.cgi?part=${accession.trim()}`;\n    }\n  }\n\n  // Request the XML from the webserver\n  let body = \"\";\n  let response: Response;\n  try {\n    response = await fetch(url);\n    body = await response.text();\n  } catch (err) {\n    throw new Error(`Failed to get part: accession=${accession} url=${url} err=${err}`);\n  }\n  if (!response.ok || !body.length) {\n    throw new Error(`Failed to get part, no body returned: accession=${accession} url=${url}`);\n  }\n\n  return (await parseFile(body))[0];\n};\n\n/** returns whether the passed ID is an accession in iGEM or NCBI */\nexport const isAccession = (accession: string): boolean => {\n  if (accession.startsWith(\"BB\")) {\n    return true; // biobrick\n  }\n  if (accession.length < 14 && accession.match(/^[a-z0-9_\\-.]+$/i)) {\n    return true;\n  }\n  return false;\n};\n","import fetchFile, { isAccession } from \"./fetchFile\";\nimport parseFile from \"./parseFile\";\n\n/** Seq is a single parsed sequence from a file or accession. */\nexport interface Seq {\n  /** annotations of the sequence */\n  annotations: Annotation[];\n  /** name of the sequence */\n  name: string;\n  /** the sequence */\n  seq: string;\n  /** type of sequence. Inferred from the seq's symbols */\n  type: \"dna\" | \"rna\" | \"aa\" | \"unknown\";\n}\n\n/** Annotation is a single feature/annotation parsed from a sequence file. */\nexport interface Annotation {\n  /** color of the annotation if set */\n  color?: string;\n  /** 1 if forward, 0 if no direction, -1 if in reverse direction */\n  direction?: number;\n  /** end of the annotation, 0-based */\n  end: number;\n  /** name of the annotation */\n  name: string;\n  /** start of the annotation, 0-based */\n  start: number;\n  /** type field if set on the annotation */\n  type?: string;\n}\n\n/** Options to parse sequence files. */\nexport interface ParseOptions {\n  /**\n   * Whether to use cors-anywhere to circumvent iGEM's web server having a bad configuration.\n   */\n  cors?: boolean;\n\n  /** name of the source file */\n  fileName?: string;\n\n  /**\n   * Source of the file (ArrayBuffer). This is necessary for SnapGene.\n   *\n   * Eg after a read from FileReader.readAsArrayBuffer() in a browser:\n   * https://developer.mozilla.org/en-US/docs/Web/API/FileReader/readAsArrayBuffer\n   */\n  source?: ArrayBuffer;\n}\n\n/* Parse a sequence file. Or download a sequence with an Accession ID. */\nexport default async (input: string, options?: ParseOptions): Promise<Seq> => {\n  if (!options?.fileName && isAccession(input)) {\n    return await fetchFile(input, options);\n  }\n  return parseFile(input, options)[0];\n};\n\nexport { parseFile };\n","import { sep } from \"path\";\n\nimport { ParseOptions, Seq } from \".\";\nimport parseBenchling from \"./parsers/benchling\";\nimport parseBioBrick from \"./parsers/biobrick\";\nimport parseFasta from \"./parsers/fasta\";\nimport parseGenbank from \"./parsers/genbank\";\nimport parseJbei from \"./parsers/jbei\";\nimport parseSbol from \"./parsers/sbol\";\nimport parseSeqBuilder from \"./parsers/seqbuilder\";\nimport parseSnapgene from \"./parsers/snapgene\";\nimport { complement, guessType } from \"./utils\";\n\n/**\n * parseFile converts the contents of a sequence file to a an array of Seq\n */\nexport default (file: string, opts?: ParseOptions): Seq[] => {\n  const fileName = opts?.fileName || \"\";\n  const sourceName = fileName.split(sep).pop() || fileName;\n\n  if (!file) {\n    throw Error(\"cannot parse null or empty string\");\n  }\n\n  // this is a check for an edge case, where the user uploads come kind\n  // of file that's full of bps but doesn't fit into a defined type\n  const firstLine = file.substring(0, file.search(\"\\n\"));\n  const dnaCharLength = firstLine.replace(/[^atcgATCG]/, \"\").length;\n  const dnaOnlyFile = dnaCharLength / firstLine.length > 0.8; // is it >80% dna?\n  const name = fileName && sourceName ? sourceName.substring(0, sourceName.search(\"\\\\.\")) : \"Untitled\";\n\n  // another edge case check for whether the seq is a JSON seq from Benchling\n  // just a heuristic that says 1) yes it can be parsed 2) it contains a list of\n  // fields that are common to Benchling files\n  let isBenchling = false;\n  try {\n    const benchlingJSON = JSON.parse(file); // will err out if not JSON\n    if ([\"bases\", \"annotations\", \"primers\"].every(k => typeof benchlingJSON[k] !== \"undefined\")) {\n      isBenchling = true;\n    }\n  } catch (ex) {\n    // expected\n  }\n\n  const prefix = file.substring(0, 200);\n  let seqs: Seq[];\n  switch (true) {\n    // JBEI\n    case prefix.includes(':seq=\"http://jbei.org/sequence\"'):\n    case file.startsWith(\"<seq:seq\"):\n      seqs = parseJbei(file);\n      break;\n\n    // FASTA\n    case file.startsWith(\">\"):\n    case file.startsWith(\";\"):\n    case fileName.endsWith(\".seq\"):\n    case fileName.endsWith(\".fa\"):\n    case fileName.endsWith(\".fas\"):\n    case fileName.endsWith(\".fasta\"):\n      seqs = parseFasta(file, fileName);\n      break;\n\n    // Genbank\n    case file.includes(\"LOCUS\") && file.includes(\"ORIGIN\"):\n    case fileName.endsWith(\".gb\"):\n    case fileName.endsWith(\".gbk\"):\n    case fileName.endsWith(\".genbank\"):\n    case fileName.endsWith(\".ape\"):\n      seqs = parseGenbank(file, fileName);\n      break;\n\n    // SnapGene\n    case fileName.endsWith(\".dna\"):\n      seqs = parseSnapgene(opts);\n      break;\n\n    // SeqBuilder\n    case prefix.includes(\"Written by SeqBuilder\"):\n    case fileName.endsWith(\".sbd\"):\n      seqs = parseSeqBuilder(file, fileName);\n      break;\n\n    // BioBrick XML\n    case prefix.includes(\"Parts from the iGEM\"):\n    case prefix.includes(\"<part_list>\"):\n      seqs = parseBioBrick(file);\n      break;\n\n    // Benchling JSON\n    case isBenchling:\n      seqs = parseBenchling(file);\n      break;\n\n    // SBOL\n    case prefix.includes(\"RDF\"):\n      seqs = parseSbol(file, fileName);\n      break;\n\n    // a DNA text file without an official formatting\n    case dnaOnlyFile: {\n      const { seq } = complement(file);\n      seqs = [{ annotations: [], name, seq, type: guessType(seq) }];\n      break;\n    }\n\n    default:\n      throw Error(`${fileName} File type not recognized: ${file}`);\n  }\n\n  // bit of clean up to: only return the fields in a Seq and reorder to match expectations.\n  return seqs.map(p => ({\n    annotations: p.annotations\n      .sort((a, b) => a.start - b.start || a.end - b.end)\n      .map(a => ({\n        color: a.color,\n        direction: a.direction,\n        end: a.end,\n        name: a.name,\n        start: a.start,\n        type: a.type,\n      })),\n    name: p.name,\n    seq: p.seq,\n    type: p.type,\n  }));\n};\n","import { Seq } from \"..\";\nimport { complement, guessType, parseDirection } from \"../utils\";\n\n/**\n * Benchling format is just JSON. It's virtually the same format.\n */\nexport default (text: string): Seq[] => {\n  const partJSON = JSON.parse(text);\n  const { seq } = complement(partJSON.bases);\n\n  // throw an error if the sequence is empty\n  if (seq.length < 1) {\n    throw new Error(\"Invalid Benchling part: empty sequence\");\n  }\n\n  return [\n    {\n      annotations: partJSON.annotations.map(a => ({\n        ...a,\n        direction: parseDirection(a.strand),\n      })),\n      name: partJSON.name || partJSON._id,\n      seq: seq,\n      type: guessType(seq),\n    },\n  ];\n};\n","import { XMLParser } from \"fast-xml-parser\";\n\nimport { Seq } from \"..\";\nimport { complement, firstElement, guessType, parseDirection } from \"../utils\";\n\n/**\n * Parse a BioBrick in XML format to Seq[]\n *\n * Eg: https://parts.igem.org/cgi/xml/part.cgi?part=BBa_J23100\n */\nexport default (file: string): Seq[] => {\n  const bail = (err: string) => {\n    throw new Error(`Failed on BioBrick: ${err}`);\n  };\n\n  // parse\n  const parsedBiobrick = new XMLParser({\n    isArray: name => {\n      return [\"features\", \"part_name\", \"sequences\"].includes(name);\n    },\n    removeNSPrefix: true,\n  }).parse(file);\n\n  // get the first part\n  const { part } = parsedBiobrick.rsbpml.part_list;\n  if (!part) bail(\"No part seen in part_list\");\n\n  // extract the useful fields\n  const { features, part_name, sequences } = part;\n\n  const name = firstElement(part_name);\n\n  // parse the iGEM annotations\n  const annotations = features\n    .map(({ feature }) => {\n      if (!feature) return null;\n\n      const { direction, endpos, startpos, type } = feature;\n\n      return {\n        direction: parseDirection(direction),\n        end: +endpos,\n        name: `${direction}-${startpos}`,\n        start: +startpos || 0,\n        type: type || undefined,\n      };\n    })\n    .filter(a => a);\n\n  // parse the sequence\n  const { seq } = complement(sequences[0].seq_data);\n\n  return [\n    {\n      annotations: annotations,\n      name,\n      seq,\n      type: guessType(seq),\n    },\n  ];\n};\n","import { Seq } from \"..\";\nimport { guessType } from \"../utils\";\n\nexport default (text: string, fileName: string): Seq[] => {\n  // partFactory returns a negative \"circular\" prop, we assume they're all linear\n  if (text.trim().startsWith(\">\")) {\n    return text\n      .split(\">\") // split up if it's a multi-seq FASTA file\n      .map(t => {\n        // this starts at the end of the first line, grabs all other characters,\n        // and removes any newlines (leaving only the original sequence)\n        // sequence \"cleaning\" happens in complement (we don't support bps other than\n        // the most common right now)\n        const seq = t.substr(t.indexOf(\"\\n\"), t.length).replace(/\\s/g, \"\");\n\n        // the first line contains the name, though there's lots of variability around\n        // the information on this line...\n        // >MCHU - Calmodulin - Human, rabbit, bovine, rat, and chicken\n        const name = t.substring(0, t.search(/\\n|\\|/)).replace(/\\//g, \"\");\n\n        return {\n          annotations: [],\n          name,\n          seq,\n          type: guessType(seq),\n        };\n      })\n      .filter(p => p.name && p.seq);\n  }\n\n  if (text.trim().startsWith(\";\")) {\n    // it's an old-school style FASTA that's punctuated with semi-colons\n    // ;my|NAME\n    // ;my comment\n    // actGacgata\n    const name = text.substring(0, text.search(/\\n|\\|/)).replace(/\\//g, \"\");\n    const newlineBeforeSeq = text.indexOf(\"\\n\", text.lastIndexOf(\";\"));\n    const seq = text.substring(newlineBeforeSeq, text.length);\n    return [\n      {\n        annotations: [],\n        name,\n        seq,\n        type: guessType(seq),\n      },\n    ];\n  }\n\n  // assume that it's a no name FASTA. Ie it's just a file with dna and no header\n  // try and get the name from the fileName\n  const lastChar = fileName.lastIndexOf(\".\") || fileName.length;\n  const name = fileName.substring(0, lastChar) || \"Untitled\";\n  const seq = text;\n  return [\n    {\n      annotations: [],\n      name,\n      seq,\n      type: guessType(seq),\n    },\n  ];\n};\n","import { Annotation } from \"..\";\nimport { complement, guessType } from \"../utils\";\n\n// a list of recognized types that would constitute an annotation name\nconst tagNameSet = new Set([\"gene\", \"product\", \"note\", \"db_xref\", \"protein_id\", \"label\", \"lab_host\", \"locus_tag\"]);\n\n// a list of tags that could represent colors\nconst tagColorSet = new Set([\"ApEinfo_fwdcolor\", \"ApEinfo_revcolor\", \"loom_color\"]);\n\n/**\n * takes in a string representation of a GenBank file and outputs our\n * part representation of it. an example of a Genbank file can be found\n * at ./parsers/Gebank, though there is significant variability to the\n * format\n *\n * another official example can be found at:\n * https://www.ncbi.nlm.nih.gov/Sitemap/samplerecord.html\n */\nexport default (fileInput: string, fileName: string) =>\n  fileInput\n    .split(/\\/\\/\\s/g)\n    .filter(f => f.length > 5)\n    .map(file => {\n      // the first row contains the name of the part and its creation date\n      // LOCUS       SCU49845     5028 bp    DNA             PLN       21-JUN-1999\n      const HEADER_ROW = file.substring(file.indexOf(\"LOCUS\"), file.search(/\\\\n|\\n/));\n      const [, name] = HEADER_ROW.split(/\\s{2,}/g).filter(h => h);\n\n      // trying to avoid giving a stupid name like Exported which Snapgene has by default\n      // also, if there is not name in header, the seq length will be used as name, which should\n      // be corrected (Number.parseInt to check for this case) https://stackoverflow.com/a/175787/7541747\n      let parsedName = name;\n      if (\n        (parsedName === \"Exported\" && file.includes(\"SnapGene\")) || // stupid Snapgene name\n        Number.parseInt(parsedName, 10) // it thinks seq-length is the name\n      ) {\n        // first try and get the name from ACCESSION\n        let accessionName = false;\n        if (file.includes(\"ACCESSION\")) {\n          // this will be undefined is there is no\n          const accession = file\n            .substring(file.indexOf(\"ACCESSION\"), file.indexOf(\"\\n\", file.indexOf(\"ACCESSION\")))\n            .replace(\".\", \"\")\n            .split(/\\s{2,}/)\n            .filter(a => a !== \"ACCESSION\")\n            .pop();\n          if (accession) {\n            parsedName = accession;\n            accessionName = true;\n          }\n        }\n\n        // otherwise, revert to trying to get the part name from the file name\n        if (!accessionName && fileName) {\n          parsedName = fileName\n            .substring(0, Math.max(fileName.search(/\\n|\\||\\./), fileName.lastIndexOf(\".\")))\n            .replace(/\\/\\s/g, \"\");\n        } else if (!accessionName) {\n          parsedName = \"Unnamed\"; // give up\n        }\n      }\n\n      // the part sequence is contained in and after the line that begins with ORIGIN\n      // do this before annotations so we can calc seqlength\n      //\n      // ORIGIN\n      //    1 gatcctccat atacaacggt atctccacct caggtttaga tctcaacaac ggaaccattg\n      //    61 ccgacatgag acagttaggt atcgtcgaga gttacaagct aaaacgagca gtagtcagct\n      const SEQ_ROWS = file.substring(file.lastIndexOf(\"ORIGIN\") + \"ORIGIN\".length, file.length);\n      let seq = SEQ_ROWS.replace(/[^gatc]/gi, \"\");\n      ({ seq } = complement(seq)); // seq and compSeq\n\n      // the features are translated into annotations\n      // region is FEATURES thru ORIGIN\n      // FEATURES             Location/Qualifiers\n      //   source          1..5028\n      //                   /organism=\"Saccharomyces cerevisiae\"\n      //                   /db_xref=\"taxon:4932\"\n      //                   /chromosome=\"IX\"\n      //                   /map=\"9\"\n      //\n      // in the example above, source is the annotation \"type\" and name is \"taxon:4932\"\n      // because \"db_xref\" is a recognized name type\n      // the name depends on whether the tag type is in the reocgnized list of types\n      const annotations: Annotation[] = [];\n      const primers = [];\n      if (file.indexOf(\"FEATURES\")) {\n        const FEATURES_LINE = file.indexOf(\"FEATURES\");\n        const FEATURES_NEW_LINE = file.indexOf(\"\\n\", FEATURES_LINE);\n        let ORIGIN_LINE = file.lastIndexOf(\"ORIGIN\");\n\n        // some files have a contig file line that needs to parsed out/ shouldn't be included in\n        // the features parsing\n        if (file.includes(\"CONTIG\")) {\n          ORIGIN_LINE = Math.min(ORIGIN_LINE, file.indexOf(\"CONTIG\"));\n        }\n        const FEATURES_ROWS = file\n          .substring(FEATURES_NEW_LINE, ORIGIN_LINE)\n          .split(/\\n/)\n          .filter(r => r);\n\n        FEATURES_ROWS.forEach(r => {\n          // in the example above, the following converts it to ['source', '1..5028']\n          const currLine = r.split(/\\s{2,}/g).filter(l => l);\n          if (currLine.length > 1) {\n            // it's the beginning of a new feature/annotation\n            const [type, rangeString] = currLine;\n            const rangeRegex = /\\d+/g;\n            const direction = r.includes(\"complement\") ? -1 : 1;\n\n            // using the example above, this parses 1..5028 into 1 and 5028\n            let [start, end] = [0, 0];\n            const startSearch = rangeRegex.exec(rangeString);\n\n            if (startSearch) {\n              // the - 1 is because genbank is 1-based while we're 0\n              start = +startSearch[0] - (1 % seq.length);\n              // single bp annotations are a thing in Genbank:\n              // https://github.com/Lattice-Automation/seqviz/issues/117\n              end = (start + 1) % seq.length;\n              const endSearch = rangeRegex.exec(rangeString);\n              if (endSearch) {\n                end = +endSearch[0] % seq.length;\n              }\n            }\n\n            if (type !== \"source\") {\n              // create a new annotation around the properties in this line (type and range)\n              annotations.push({\n                direction,\n                // set in next block\n                end,\n                name: \"\",\n                start,\n                type,\n              });\n            }\n          } else if (currLine.length === 1) {\n            // it's a continuation of a prior feature/annotation\n            // any updates (to name or color) to the last annotation should affect\n            // the last annotation that's in the array\n            if (currLine[0].startsWith(\"/\")) {\n              let [tag] = currLine;\n              tag = tag.replace(/[/\"]/g, \"\"); // get rid of quotation marks and forward slaches\n              // should now look like ['organism', 'Saccharomyces cerevisiae']\n              const [tagName, tagValue] = tag.split(/=/);\n\n              // the two values that can be extracted are name or color\n              const lastAnn = annotations.length - 1;\n              if (tagNameSet.has(tagName.toLowerCase())) {\n                // the key is something we recognize as an annotation name\n                if (lastAnn >= 0 && !annotations[lastAnn].name) {\n                  annotations[lastAnn].name = tagValue.trim();\n                }\n              } else if (tagColorSet.has(tagName)) {\n                // the key is something we recognize as an annotation color\n                if (lastAnn > -1) {\n                  annotations[lastAnn].color = tagValue;\n                }\n              }\n            }\n          }\n        });\n      }\n\n      return {\n        annotations: annotations,\n        name: parsedName.trim() || fileName,\n        primers: primers,\n        seq: seq,\n        type: guessType(seq),\n      };\n    });\n","import { XMLParser } from \"fast-xml-parser\";\n\nimport { Annotation, Seq } from \"..\";\nimport { complement, guessType } from \"../utils\";\n\n/**\n * Converts a JBEI file to a Seq\n *\n * https://j5.jbei.org/j5manual/pages/94.html\n */\nexport default (JBEI: string): Seq[] => {\n  // weird edge case with directed quotation characters\n  const fileString = JBEI.replace(/“|”/g, '\"');\n\n  // parse\n  const parsedJbei = new XMLParser({\n    removeNSPrefix: true,\n  }).parse(fileString);\n\n  // destructure the parameters from JBEI\n  const { seq } = parsedJbei;\n  const { features, name, sequence } = seq;\n\n  // attempt to get the name out of the JBEI\n  let parsedName = \"Unnamed\";\n  if (name) {\n    parsedName = name;\n  }\n\n  // attempt to get the sequence. fail if it's not findable\n  const { seq: parsedSeq } = complement(sequence); // seq and compSeq\n  if (!parsedSeq) return [];\n\n  // attempt to parse the JBEI annotations into our version of annotations\n  const annotations: Annotation[] = [];\n  if (features && features.feature) {\n    features.feature.forEach(feature => {\n      if (!feature) return;\n\n      const { complement, label, location, type } = feature;\n      if (location && location.genbankStart && location.end) {\n        annotations.push({\n          direction: complement ? -1 : 1,\n          // JBEI is 1-based\n          end: +location.end || 0,\n          name: label || \"Untitled\",\n          start: +location.genbankStart - 1 || 0,\n          type: type || \"N/A\",\n        });\n      }\n    });\n  }\n\n  return [\n    {\n      annotations: annotations,\n      name: parsedName,\n      seq: parsedSeq,\n      type: guessType(parsedSeq),\n    },\n  ];\n};\n","import { Seq } from \"..\";\nimport sbolV1 from \"./sbol.v1\";\nimport sbolV2 from \"./sbol.v2\";\n\n/**\n * takes in an SBOL file in v1 or v2 format, and parses to an array of parts\n * that match the Loom data model\n */\nexport default (sbol: string, fileName: string): Seq[] =>\n  sbol.includes(\"sbols.org/v1#\") ? sbolV1(sbol) : sbolV2(sbol, fileName);\n","import { XMLParser } from \"fast-xml-parser\";\n\nimport { Annotation, Seq } from \"..\";\nimport { complement, guessType } from \"../utils\";\n\n/*\n  <sbol:Sequence rdf:about=\"https://synbiohub.cidarlab.org/public/Demo/A1_sequence/1\">\n    <sbol:persistentIdentity rdf:resource=\"https://synbiohub.cidarlab.org/public/Demo/A1_sequence\"/>\n    <sbol:displayId>A1_sequence</sbol:displayId>\n    <sbol:version>1</sbol:version>\n    <prov:wasDerivedFrom rdf:resource=\"https://github.com/CIDARLAB/cello/blob/master/resources/UCF/Eco1C1G1T0.UCF.json\"/>\n    <prov:wasGeneratedBy rdf:resource=\"https://synbiohub.cidarlab.org/public/Demo/cello2sbol/1\"/>\n    <dcterms:title>A1_sequence</dcterms:title>\n    <sbh:ownedBy rdf:resource=\"https://synbiohub.cidarlab.org/user/prash\"/>\n    <sbh:topLevel rdf:resource=\"https://synbiohub.cidarlab.org/public/Demo/A1_sequence/1\"/>\n    <sbol:elements>AATGTTCCCTAATAATCAGCAAAGAGGTTACTAG</sbol:elements>\n    <sbol:encoding rdf:resource=\"http://www.chem.qmul.ac.uk/iubmb/misc/naseq.html\"/>\n  </sbol:Sequence>\n*/\n\n/**\n * takes an SBOL file, as a string, and converts it into our DB\n * representation of a part(s). an example of this type of file can be\n * found in ../examples/j5.SBOL.xml\n */\nexport default (sbol: string): Seq[] => {\n  // weird edge case with directed quotation characters\n  const fileString = sbol.replace(/“|”/g, '\"');\n\n  // parse\n  const parsedSBOL = new XMLParser({\n    ignoreAttributes: false,\n    isArray: name =>\n      [\n        \"Sequence\",\n        \"Collection\",\n        \"DnaComponent\",\n        \"dnaSequence\",\n        \"ComponentDefinition\",\n        \"SequenceAnnotation\",\n        \"sequenceAnnotation\",\n        \"elements\",\n        \"component\",\n        \"annotation\",\n      ].includes(name),\n    removeNSPrefix: true,\n  }).parse(fileString);\n\n  let RDF = null;\n  if (parsedSBOL.RDF) ({ RDF } = parsedSBOL);\n\n  // @ts-expect-error ts-migrate(2339) FIXME: Property 'Collection' does not exist on type 'null... Remove this comment to see the full error message\n  const { Collection, DnaComponent } = RDF;\n  if (Collection && Collection.length) {\n    // it's a collection of DnaComponents, parse each to a part\n    const partList = [];\n    Collection.forEach(({ component }) => {\n      if (component && component.length) {\n        component.forEach(({ DnaComponent: nestedDnaComponent }) => {\n          partList.push(\n            // @ts-expect-error ts-migrate(2345) FIXME: Argument of type '{ seq: string; compSeq: string; ... Remove this comment to see the full error message\n            dnaComponentToPart(nestedDnaComponent[0], {\n              file: sbol,\n              strict: false,\n            })\n          );\n        });\n      }\n    });\n\n    // check whether any parts were created from the collection\n    if (partList.length) return partList;\n  } else if (DnaComponent && DnaComponent.length) {\n    // create a single part from the single one passed\n    const validPart = dnaComponentToPart(DnaComponent[0], {\n      file: sbol,\n      strict: false,\n    });\n    // it will be null if there isn't any sequence information beneath it\n    if (validPart) return [validPart];\n  }\n\n  // go on a fishing expedition for DnaComponents\n  // everything else has failed\n  // accumulate all that are \"valid\" (name + seq)\n  const dnaComponentAccumulator = [];\n  findDnaComponentNodes(dnaComponentAccumulator, RDF);\n\n  // @ts-ignore\n  const attemptedSeqs: Seq[] = dnaComponentAccumulator\n    .map(p =>\n      dnaComponentToPart(p, {\n        file: sbol,\n        strict: true,\n      })\n    )\n    .filter(p => !!p); // invalid parts will be null\n  if (attemptedSeqs.length) return attemptedSeqs;\n\n  // go on another fishing expedition, but for Sequence nodes\n  const dnaSequenceAccumulator = [];\n  findSequenceNodes(dnaSequenceAccumulator, RDF);\n  return dnaSequenceAccumulator.map(p => sequenceToPart(p, sbol)).filter(p => p); // invalid parts will be null\n};\n\n/**\n * find all the nodes within the JSON document that are keyed \"Sequence\"\n *\n * this is another last-resort scrapper for trying to find valid parts\n */\nconst findSequenceNodes = (acc, doc) => {\n  Object.keys(doc).forEach(k => {\n    if (k === \"Sequence\" && doc[k].length) acc.push(...doc[k]);\n    if (Array.isArray(doc[k])) {\n      doc[k].forEach(nestedNode => {\n        findSequenceNodes(acc, nestedNode);\n      });\n    }\n  });\n};\n\n/**\n * after getting a DnaComponent out of the SBOL document,\n * at either the root RDF level or from within a Collection/Annotation\n * hierarchy, convert that DnaComponent to a Seq\n */\nconst dnaComponentToPart = (DnaComponent, options) => {\n  const { strict = false } = options;\n  // destructure the params from DnaComponent\n  const { annotation, displayId, dnaSequence, name } = DnaComponent;\n\n  // attempt to get the name out of the SBOL\n  let parsedName = \"Unnamed\";\n  if (name) {\n    parsedName = name;\n  } else if (displayId) {\n    parsedName = displayId;\n  } else if (strict) {\n    // in this scenario, we're really scrapping to find parts, but shouldn't\n    // accept any that don't at least have some name and sequence information\n    return null;\n  }\n\n  // attempt to get the sequence. fail if it's not findable\n  let seq = \"\";\n  if (dnaSequence && dnaSequence[0].DnaSequence) {\n    seq = dnaSequence[0].DnaSequence.nucleotides;\n  }\n\n  const { seq: parsedSeq } = complement(seq); // seq and compSeq\n  if (!parsedSeq) return null;\n\n  // attempt to parse the SBOL annotations into our version of annotations\n  const annotations: Annotation[] = [];\n  if (annotation) {\n    annotation.forEach(({ SequenceAnnotation }) => {\n      if (!SequenceAnnotation || !SequenceAnnotation[0]) return;\n\n      const { bioEnd, bioStart, strand, subComponent } = SequenceAnnotation[0];\n      if (subComponent && subComponent.DnaComponent && subComponent.DnaComponent[0]) {\n        const { displayId: annId, name: annName, type: annType } = subComponent.DnaComponent[0];\n\n        annotations.push({\n          direction: strand === \"+\" ? 1 : -1,\n          end: bioEnd - 1 || 0,\n          name: annName || annId || \"Untitled\",\n          start: bioStart - 1 || 0,\n          type: annType[\"@_resource\"] || \"N/A\",\n        });\n      }\n    });\n  }\n\n  return {\n    annotations: annotations,\n    name: parsedName,\n    seq: parsedSeq,\n    type: guessType(seq),\n  };\n};\n\n/**\n * find all nodes that of the type Sequence, and convert those to parts \"Sequence\" -> Part\n *\n * this is not the standard format. see A1.xml\n */\nconst sequenceToPart = (Seq, file) => {\n  // get the name\n  const name = Seq.displayId || Seq.title || \"Unnamed\";\n\n  // get the sequence\n  const seqOrig = Seq.elements[0] || \"\";\n\n  const { compSeq, seq } = complement(seqOrig);\n\n  // guess whether it's circular or not based on the presence of a word like vector.\n  // very ad hoc\n  const circular = file.search(/plasmid/i) > 0;\n\n  return { annotations: [], circular, compSeq, name, seq, type: guessType(seq) };\n};\n\n/**\n * find all the nodes within the SBOL JSON document that are keyed \"DnaComponent\"\n *\n * this is a last-resort scrapper that tries to find valid parts that aren't within a root\n * DnaComponent document or within a root Collection array\n */\nconst findDnaComponentNodes = (acc: Seq[], doc: any) => {\n  Object.keys(doc).forEach(k => {\n    if (k === \"DnaComponent\" && doc[k].length) acc.push(...doc[k]);\n    if (Array.isArray(doc[k])) {\n      doc[k].forEach(nestedNode => {\n        findDnaComponentNodes(acc, nestedNode);\n      });\n    }\n  });\n};\n","import { XMLParser } from \"fast-xml-parser\";\n\nimport { Annotation, Seq } from \"..\";\nimport { complement, guessType } from \"../utils\";\n\n/**\n * Converts an SBOL file to our Seq format.\n *\n * SBOL v2.0 schema definition can be found at: http://sbolstandard.org/wp-content/uploads/2016/06/SBOL-data-model-2.2.1.pdf\n * differs from SBOL v1.0 in that the ComponentDefinitions are like the root parts,\n * and the sequence and annotations are separated (they're no longer defined relationally\n * by nesting but, instead, by id) we only care about components that have sequence information\n */\nexport default (sbol: string, fileName: string): Seq[] => {\n  // weird edge case with directed quotation characters\n  const fileString = sbol.replace(/“|”/g, '\"');\n\n  // parse\n  const parsedSBOL = new XMLParser({\n    ignoreAttributes: false,\n    isArray: name =>\n      [\"Sequence\", \"ComponentDefinition\", \"SequenceAnnotation\", \"sequenceAnnotation\", \"elements\"].includes(name),\n    removeNSPrefix: true,\n  }).parse(fileString);\n\n  try {\n    const seqList = parseSBOL2(parsedSBOL, fileName);\n\n    if (seqList.length) {\n      return seqList;\n    } else {\n      throw new Error(\"No Sequence info found\");\n    }\n  } catch (err) {\n    throw new Error(`Failed to parse SBOL v2 file: ${err}`);\n  }\n};\n\nconst parseSBOL2 = (parsedSBOL, fileName: string): Seq[] => {\n  let RDF = null;\n  if (parsedSBOL.RDF) {\n    ({ RDF } = parsedSBOL);\n  }\n\n  if (!RDF) {\n    throw new Error(\"No root RDF document\");\n  }\n\n  // check if anything is defined, return if not\n  const { ComponentDefinition, Sequence } = RDF;\n  if (!ComponentDefinition && !Sequence) {\n    throw new Error(\"Failed to parse SBOL v2: No ComponentDefinition or Sequence\");\n  }\n\n  // read thru the Sequence elements\n  const getSeq = (seqID?: string) => {\n    const seqElement = seqID\n      ? // @ts-ignore\n        Sequence.find(\n          s =>\n            (s.persistentIdentity && s.persistentIdentity.length && s.persistentIdentity[\"@_resource\"] === seqID) ||\n            s[\"@_about\"] === seqID\n        )\n      : Sequence[0];\n\n    if (seqElement && seqElement.elements) {\n      const { seq } = complement(seqElement.elements[0] || \"\");\n      return {\n        annotations: [],\n        name: seqElement.displayId,\n        seq,\n        type: guessType(seq),\n      };\n    }\n    return null;\n  };\n\n  // if it's a collection of DnaComponents, parse each to a part\n  const seqList: Seq[] = [];\n  // @ts-ignore\n  ComponentDefinition?.forEach((c, i) => {\n    // we're only making parts out of those with seq info\n    if (!c.sequence) {\n      return;\n    }\n\n    const { displayId, sequence, sequenceAnnotation } = c;\n    const name = displayId || `${fileName}_${i + 1}`;\n\n    const annotations: Annotation[] = [];\n    (sequenceAnnotation || []).forEach(({ SequenceAnnotation }) => {\n      const ann = SequenceAnnotation[0];\n      const annId = ann.displayId;\n      const { Range } = ann.location;\n\n      const range = Range;\n      if (range) {\n        annotations.push({\n          end: range.end - 1,\n          name: annId,\n          start: range.start - 1,\n        });\n      }\n    });\n\n    const seq = getSeq(sequence[\"@_resource\"]);\n\n    if (seq) {\n      seqList.push({\n        annotations,\n        name,\n        seq: seq.seq,\n        type: seq.type,\n      });\n    }\n  });\n\n  // if it's a single sequence, just try and get the sequence from that alone\n  const seq = getSeq();\n  if (!seqList.length && seq) {\n    seqList.push(seq);\n  }\n  return seqList;\n};\n","import { Annotation } from \"..\";\nimport { complement, guessType } from \"../utils\";\n\n// a list of recognized types that would constitute an annotation name\nconst tagNameList = [\"gene\", \"product\", \"note\", \"db_xref\", \"protein_id\", \"label\", \"lab_host\"];\n\n// a list of tags that could represent colors\nconst tagColorList = [\"ApEinfo_fwdcolor\", \"ApEinfo_revcolor\", \"loom_color\"];\n\n/**\n * takes in a string representation of a SeqBuilder file and outputs our\n * part representation of it. an example of a SeqBuilder file can be found\n * at imports/io/examples/seqbuilder, though there may be variations to the\n * format\n */\nexport default (fileInput: string, fileName: string) =>\n  fileInput.split(/\\/\\/\\s/g).map(file => {\n    // +++++SEQUENCE+++++//\n    // the part sequence comes after the line that specifies the seqbuilder version number\n    // @ts-ignore\n    const SEQ_ROWS = file\n      .substring(\n        file.search(/.*?written by seqbuilder .*?[0-9.]+[^actg]+/i) +\n          // @ts-ignore\n          file.match(/.*?written by seqbuilder .*?[0-9.]+[^actg]+/i)[0].length,\n        file.length\n      )\n      .match(/[actgyrwskmdvhbxn]+/gim)[0];\n\n    let seq = SEQ_ROWS;\n    ({ seq } = complement(seq)); // seq and compSeq\n    // there may be a genbank-like header row after the sequence\n    // LOCUS       SCU49845     5028 bp    DNA             PLN       21-JUN-1999\n    let parsedName = fileName.length > 0 ? fileName : \"Unnamed\";\n\n    if (~file.indexOf(\"LOCUS\")) {\n      const HEADER_ROW = file.substring(file.indexOf(\"LOCUS\"), file.search(/\\\\n|\\n/));\n      if (HEADER_ROW && HEADER_ROW.split(/\\s{2,}/g)) {\n        const [, name] = HEADER_ROW.split(/\\s{2,}/g).filter(h => h);\n        parsedName = name;\n      }\n    }\n    // Name setting logic ported from GenBank parser\n    if (\n      (parsedName === \"Exported\" && file.includes(\"SnapGene\")) || // stupid Snapgene name\n      Number.parseInt(parsedName, 10) // it thinks seq-length is the name\n    ) {\n      // first try and get the name from ACCESSION\n      let accessionName = false;\n      if (file.includes(\"ACCESSION\")) {\n        // this will be undefined is there is no\n        const accession = file\n          .substring(file.indexOf(\"ACCESSION\"), file.indexOf(\"\\n\", file.indexOf(\"ACCESSION\")))\n          .replace(\".\", \"\")\n          .split(/\\s{2,}/)\n          .filter(a => a !== \"ACCESSION\")\n          .pop();\n        if (accession) {\n          parsedName = accession;\n          accessionName = true;\n        }\n      }\n\n      // otherwise, revert to trying to get the part name from the file name\n      if (!accessionName && fileName) {\n        parsedName = fileName\n          .substring(0, Math.max(fileName.search(/\\n|\\||\\./), fileName.lastIndexOf(\".\")))\n          .replace(/\\/\\s/g, \"\");\n      } else if (!accessionName) {\n        parsedName = \"Unnamed\"; // give up\n      }\n    }\n\n    // +++++ANNOTATIONS+++++//\n    // the features are translated into annotations\n    // region is FEATURES thru ORIGIN\n    // FEATURES             Location/Qualifiers\n    //   source          1..5028\n    //                   /organism=\"Saccharomyces cerevisiae\"\n    //                   /db_xref=\"taxon:4932\"\n    //                   /chromosome=\"IX\"\n    //                   /map=\"9\"\n    //\n    // in the example above, source is the annotation \"type\" and name is \"taxon:4932\"\n    // because \"db_xref\" is a recognized name type\n    // the name depends on whether the tag type is in the reocgnized list of types\n    const annotations: Annotation[] = [];\n    if (file.indexOf(\"FEATURES\")) {\n      const FEATURES_LINE = file.indexOf(\"FEATURES\");\n      const FEATURES_NEW_LINE = file.indexOf(\"\\n\", FEATURES_LINE);\n      let ORIGIN_LINE = file.lastIndexOf(\"ORIGIN\");\n\n      // some files have a contig file line that needs to parsed out/ shouldn't be included in\n      // the features parsing\n      if (file.includes(\"CONTIG\")) {\n        ORIGIN_LINE = Math.min(ORIGIN_LINE, file.indexOf(\"CONTIG\"));\n      }\n      const FEATURES_ROWS = file\n        .substring(FEATURES_NEW_LINE, ORIGIN_LINE)\n        .split(/\\n/)\n        .filter(r => r);\n\n      FEATURES_ROWS.forEach(r => {\n        // in the example above, the following converts it to ['source', '1..5028']\n        const currLine = r.split(/\\s{2,}/g).filter(l => l);\n        if (currLine.length > 1) {\n          // it's the beginning of a new feature/annotation\n          const [type, rangeString] = currLine;\n          const rangeRegex = /\\d+/g;\n          const direction = r.includes(\"complement\") ? -1 : 1;\n\n          // using the example above, this parses 1..5028 into 1 and 5028\n          let [start, end] = [0, 0];\n          const startSearch = rangeRegex.exec(rangeString);\n\n          if (startSearch) {\n            // the - 1 is because genbank is 1-based while we're 0\n            start = +startSearch[0] - (1 % seq.length);\n            const endSearch = rangeRegex.exec(rangeString);\n            if (endSearch) {\n              end = +endSearch[0] % seq.length;\n            }\n          }\n\n          if (type !== \"source\") {\n            // source would just be an annotation for the entire sequence so remove\n            // create a new annotation around the properties in this line (type and range)\n            annotations.push({\n              direction,\n              end,\n              name: \"\",\n              start,\n              type,\n            });\n          }\n        } else if (currLine.length === 1) {\n          // it's a continuation of a prior feature/annotation\n          // any updates (to name or color) to the last annotation should affect\n          // the last annotation that's in the array\n          let [tag] = currLine;\n          tag = tag.replace(/[/\"]/g, \"\"); // get rid of quotation marks and forward slaches\n          // should now look like ['organism', 'Saccharomyces cerevisiae']\n          const [tagName, tagValue] = tag.split(/=/);\n\n          // the two values that can be extracted are name or color\n          const lastAnnIndex = annotations.length - 1;\n          if (tagNameList.includes(tagName)) {\n            // it's key value pair where the key is something we recognize as an annotation name\n            if (lastAnnIndex > -1 && !annotations[annotations.length - 1].name) {\n              // defensively check that there isn't already a defined annotation w/o a name\n              annotations[annotations.length - 1].name = tagValue.trim();\n            }\n          } else if (tagColorList.includes(tagName)) {\n            // it's key value pair where the key is something we recognize as an annotation color\n            if (lastAnnIndex > -1) {\n              // defensively check that there's already been a defined annotation\n              annotations[annotations.length - 1].color = tagValue;\n            }\n          }\n        }\n      });\n    }\n\n    return {\n      annotations: annotations,\n      name: parsedName.trim() || fileName,\n      seq: seq,\n      type: guessType(seq),\n    };\n  });\n","import { XMLParser } from \"fast-xml-parser\";\nimport { sep } from \"path\";\n\nimport { Annotation, ParseOptions, Seq } from \"..\";\nimport { guessType, parseDirection } from \"../utils\";\n\n/**\n * Parse a SnapGene file to Seq[]\n *\n * this is adapted from https://github.com/TeselaGen/ve-sequence-parsers/blob/master/src/parsers/snapgeneToJson.js\n * which was adapted from https://github.com/IsaacLuo/SnapGeneFileReader/blob/master/snapgene_reader/snapgene_reader.py\n */\nexport default (options?: ParseOptions): Seq[] => {\n  if (!options || !options.source) {\n    throw new Error(\"Failed to parse SnapGene file. No valid file input\");\n  }\n\n  const fileName = options?.fileName || \"\";\n  const seq = {\n    annotations: [] as Annotation[],\n    circular: false,\n    name: \"\",\n    seq: \"\",\n    type: \"unknown\",\n  };\n\n  const buffer = Buffer.from(options.source);\n\n  // Accumulate an offset from the start as we read through the file\n  let offset = 0;\n\n  // Read a buffer from the buffer\n  const read = (size: number) => {\n    const start = offset;\n    offset += size;\n    return buffer.subarray(start, offset);\n  };\n\n  // Read from buffer and decode as string\n  const readEnc = (size: number, fmt: BufferEncoding) => read(size).toString(fmt);\n\n  // Read the first byte\n  read(1);\n\n  // Read document properties\n  const length = read(4).readUInt32BE();\n  const title = readEnc(8, \"ascii\");\n  if (length !== 14 || title !== \"SnapGene\") {\n    throw new Error(`Wrong format for a SnapGene file: length=${length} title=${title}`);\n  }\n\n  read(2); // isDNA\n  read(2); // exportVersion\n  read(2); // importVersion\n\n  /* eslint-disable no-await-in-loop */\n  // READ THE WHOLE FILE, BLOCK BY BLOCK, UNTIL THE END\n  while (offset < buffer.length) {\n    // next_byte table\n    // 0: dna sequence\n    // 1: compressed DNA\n    // 2: unknown\n    // 3: unknown\n    // 5: primers\n    // 6: notes\n    // 7: history tree\n    // 8: additional sequence properties segment\n    // 9: file Description\n    // 10: features\n    // 11: history node\n    // 13: unknown\n    // 16: alignable sequence\n    // 17: alignable sequence\n    // 18: sequence trace\n    // 19: Uracil Positions\n    // 20: custom DNA colors\n\n    const nextByte = read(1);\n    const blockSize = read(4).readUInt32BE();\n    const ord = nextByte.toString().charCodeAt(0);\n    if (ord === 0) {\n      // Read the sequence and its properties\n      read(1); // isCircular\n\n      const size = blockSize - 1;\n      if (size < 0) throw new Error(\"Failed parsing SnapGene: < 0 length sequence\");\n      seq.seq = readEnc(size, \"ascii\");\n    } else if (ord === 10) {\n      // Read all the features\n      const xml = readEnc(blockSize, \"utf8\") as string;\n      const b = new XMLParser({\n        attributeNamePrefix: \"\",\n        ignoreAttributes: false,\n        isArray: name => name === \"Q\" || name === \"Segment\",\n        removeNSPrefix: true,\n      }).parse(xml);\n\n      b.Features.Feature.forEach(feature => {\n        let minStart = 0;\n        let maxEnd = 0;\n        const { range } = feature.Segment[0];\n        const [start, end] = range.split(\"-\");\n        minStart = minStart === 0 ? +start : Math.min(minStart, +start);\n        maxEnd = Math.max(maxEnd, +end);\n\n        // create an Annotation\n        seq.annotations.push({\n          direction: parseDirection(\n            {\n              \"0\": \"NONE\",\n              \"1\": 1,\n              \"2\": -1,\n              \"3\": \"BIDIRECTIONAL\",\n              undefined: \"NONE\",\n            }[feature.directionality]\n          ),\n          end: maxEnd - 1,\n          name: feature.name,\n          start: minStart - 1,\n          type: feature.type,\n        });\n      });\n    } else {\n      // UNKNOWN: WE IGNORE THE WHOLE BLOCK\n      read(blockSize);\n    }\n  }\n\n  return [\n    {\n      ...seq,\n      // SnapGene uses the filename as the sequence name\n      name: fileName.split(sep).pop()?.replace(\".dna\", \"\") || fileName,\n      type: guessType(seq.seq),\n    },\n  ];\n};\n","// from http://arep.med.harvard.edu/labgc/adnan/projects/Utilities/revcomp.html\nconst comp = {\n  A: \"T\",\n  B: \"V\",\n  C: \"G\",\n  D: \"H\",\n  G: \"C\",\n  H: \"D\",\n  K: \"M\",\n  M: \"K\",\n  N: \"N\",\n  R: \"Y\",\n  S: \"S\",\n  T: \"A\",\n  U: \"A\",\n  V: \"B\",\n  W: \"W\",\n  X: \"X\",\n  Y: \"R\",\n  a: \"t\",\n  b: \"v\",\n  c: \"g\",\n  d: \"h\",\n  g: \"c\",\n  h: \"d\",\n  k: \"m\",\n  m: \"k\",\n  n: \"n\",\n  r: \"y\",\n  s: \"s\",\n  t: \"a\",\n  u: \"a\",\n  v: \"b\",\n  w: \"w\",\n  x: \"x\",\n  y: \"r\",\n};\n\n/**\n * Return the filtered sequence and its complement if its an empty string, return the same for both.\n */\nexport const complement = (origSeq: string): { compSeq: string; seq: string } => {\n  if (!origSeq) {\n    return { compSeq: \"\", seq: \"\" };\n  }\n\n  // filter out unrecognized basepairs and build up the complement\n  let seq = \"\";\n  let compSeq = \"\";\n  for (let i = 0, origLength = origSeq.length; i < origLength; i += 1) {\n    if (comp[origSeq[i]]) {\n      seq += origSeq[i];\n      compSeq += comp[origSeq[i]];\n    }\n  }\n  return { compSeq, seq };\n};\n\n/**\n * Return the reverse complement of a DNA sequence\n */\nexport const reverseComplement = (inputSeq: string): string => {\n  const { compSeq } = complement(inputSeq);\n  return compSeq.split(\"\").reverse().join(\"\");\n};\n\nexport const firstElement = (arr: any) => {\n  if (!Array.isArray(arr)) return undefined;\n  return arr[0];\n};\n\nconst fwd = new Set([\"FWD\", \"fwd\", \"FORWARD\", \"forward\", \"FOR\", \"for\", \"TOP\", \"top\", \"1\", 1]);\nconst rev = new Set([\"REV\", \"rev\", \"REVERSE\", \"reverse\", \"BOTTOM\", \"bottom\", \"-1\", -1]);\n\n/**\n * Parse the user defined direction, estimate the direction of the element\n *\n * ```js\n * parseDirection(\"FWD\") => 1\n * parseDirection(\"FORWARD\") => 1\n * ```\n */\nexport const parseDirection = (direction: number | string | undefined): -1 | 0 | 1 => {\n  if (!direction) {\n    return 0;\n  }\n  if (fwd.has(direction)) {\n    return 1;\n  }\n  if (rev.has(direction)) {\n    return -1;\n  }\n  return 0;\n};\n\n/**\n * mapping the 64 standard codons to amino acids\n * no synth AA's\n *\n * adapted from: \"https://github.com/keithwhor/NtSeq/blob/master/lib/nt.js\n */\nconst codon2AA = {\n  AAA: \"K\",\n  AAC: \"N\",\n  AAG: \"K\",\n  AAT: \"N\",\n  ACA: \"T\",\n  ACC: \"T\",\n  ACG: \"T\",\n  ACT: \"T\",\n  AGA: \"R\",\n  AGC: \"S\",\n  AGG: \"R\",\n  AGT: \"S\",\n  ATA: \"I\",\n  ATC: \"I\",\n  ATG: \"M\",\n  ATT: \"I\",\n  CAA: \"Q\",\n  CAC: \"H\",\n  CAG: \"Q\",\n  CAT: \"H\",\n  CCA: \"P\",\n  CCC: \"P\",\n  CCG: \"P\",\n  CCT: \"P\",\n  CGA: \"R\",\n  CGC: \"R\",\n  CGG: \"R\",\n  CGT: \"R\",\n  CTA: \"L\",\n  CTC: \"L\",\n  CTG: \"L\",\n  CTT: \"L\",\n  GAA: \"E\",\n  GAC: \"D\",\n  GAG: \"E\",\n  GAT: \"D\",\n  GCA: \"A\",\n  GCC: \"A\",\n  GCG: \"A\",\n  GCT: \"A\",\n  GGA: \"G\",\n  GGC: \"G\",\n  GGG: \"G\",\n  GGT: \"G\",\n  GTA: \"V\",\n  GTC: \"V\",\n  GTG: \"V\",\n  GTT: \"V\",\n  TAA: \"*\",\n  TAC: \"Y\",\n  TAG: \"*\",\n  TAT: \"Y\",\n  TCA: \"S\",\n  TCC: \"S\",\n  TCG: \"S\",\n  TCT: \"S\",\n  TGA: \"*\",\n  TGC: \"C\",\n  TGG: \"W\",\n  TGT: \"C\",\n  TTA: \"L\",\n  TTC: \"F\",\n  TTG: \"L\",\n  TTT: \"F\",\n};\n\nconst aminoAcids = Array.from(new Set(Object.values(codon2AA)).values()).join(\"\");\nconst aminoAcidRegex = new RegExp(`^[${aminoAcids}]+$`, \"i\");\n\n/** Infer the type of a sequence. This only allows a couple wildcard characters so may be overly strict. */\nexport const guessType = (seq: string): \"dna\" | \"rna\" | \"aa\" | \"unknown\" => {\n  if (/^[atgcn.]+$/i.test(seq)) {\n    return \"dna\";\n  } else if (/^[augcn.]+$/i.test(seq)) {\n    return \"rna\";\n  } else if (aminoAcidRegex.test(seq)) {\n    return \"aa\";\n  }\n  return \"unknown\";\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(156);\n"],"names":["root","factory","exports","module","define","amd","this","byteLength","b64","lens","getLens","validLen","placeHoldersLen","toByteArray","tmp","i","arr","Arr","_byteLength","curByte","len","revLookup","charCodeAt","fromByteArray","uint8","length","extraBytes","parts","maxChunkLength","len2","push","encodeChunk","lookup","join","Uint8Array","Array","code","Error","indexOf","start","end","num","output","base64","ieee754","customInspectSymbol","Symbol","Buffer","K_MAX_LENGTH","createBuffer","RangeError","buf","Object","setPrototypeOf","prototype","arg","encodingOrOffset","TypeError","allocUnsafe","from","value","string","encoding","isEncoding","actual","write","slice","fromString","ArrayBuffer","isView","arrayView","isInstance","copy","fromArrayBuffer","buffer","byteOffset","fromArrayLike","fromArrayView","SharedArrayBuffer","valueOf","b","obj","isBuffer","checked","undefined","numberIsNaN","type","isArray","data","fromObject","toPrimitive","assertSize","size","array","toString","mustMatch","arguments","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","n","m","bidirectionalIndexOf","val","dir","arrayIndexOf","call","lastIndexOf","indexSize","arrLength","valLength","String","read","readUInt16BE","foundIndex","found","j","hexWrite","offset","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","asciiToBytes","base64Write","ucs2Write","units","c","hi","lo","utf16leToBytes","Math","min","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","apply","decodeCodePointsArray","TYPED_ARRAY_SUPPORT","proto","foo","e","typedArraySupport","console","error","defineProperty","enumerable","get","poolSize","alloc","fill","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","set","swap16","swap32","swap64","toLocaleString","equals","inspect","max","replace","trim","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","hexSliceLookupTable","bytes","checkOffset","ext","checkInt","wrtBigUInt64LE","checkIntBI","BigInt","wrtBigUInt64BE","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","subarray","readUintLE","readUIntLE","mul","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readBigUInt64LE","defineBigIntMethod","validateNumber","first","last","boundsError","readBigUInt64BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readBigInt64LE","readBigInt64BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeBigUInt64LE","writeBigUInt64BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeBigInt64LE","writeBigInt64BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","errors","E","sym","getMessage","Base","constructor","super","writable","configurable","name","stack","message","addNumericalSeparator","range","ERR_OUT_OF_RANGE","checkBounds","ERR_INVALID_ARG_TYPE","floor","ERR_BUFFER_OUT_OF_BOUNDS","input","msg","received","isInteger","abs","INVALID_BASE64_RE","Infinity","leadSurrogate","split","base64clean","src","dst","alphabet","table","i16","fn","BufferBigIntNotDefined","validator","XMLParser","XMLBuilder","XMLValidator","nameStartChar","nameRegexp","regexName","RegExp","isExist","v","isEmptyObject","keys","merge","arrayMode","getValue","isName","exec","getAllMatches","regex","matches","match","allmatches","startIndex","lastIndex","index","util","defaultOptions","allowBooleanAttributes","unpairedTags","isWhiteSpace","char","readPI","xmlData","tagname","getErrorObject","getLineNumberForPosition","readCommentAndCDATA","angleBracketsCount","validate","options","assign","tags","tagFound","reachedRoot","err","tagStartPos","closingTag","tagName","substring","result","readAttributeStr","attrStr","attrStrStart","isValid","validateAttributeString","line","tagClosed","otg","pop","openPos","col","afterAmp","validateAmpersand","JSON","stringify","map","t","doubleQuote","singleQuote","startChar","validAttrStrRegxp","attrNames","getPositionFromMatch","attrName","validateAttrName","hasOwnProperty","re","validateNumberAmpersand","count","lineNumber","lines","buildFromOrderedJs","attributeNamePrefix","attributesGroupName","textNodeName","ignoreAttributes","cdataPropName","format","indentBy","suppressEmptyNode","suppressUnpairedNode","suppressBooleanAttributes","tagValueProcessor","key","attributeValueProcessor","preserveOrder","commentPropName","entities","processEntities","stopNodes","Builder","isAttribute","attrPrefixLen","processTextOrObjNode","indentate","tagEndChar","newLine","buildTextNode","buildEmptyTextNode","buildObjNode","buildEmptyObjNode","buildTextValNode","buildObjectNode","replaceEntitiesValue","buildAttrPairStr","object","level","j2x","tagEndExp","piClosingChar","textValue","entity","repeat","startsWith","build","jObj","arrayNodeName","Date","attr","newval","arrLen","item","Ks","L","arrToStr","jPath","indentation","xmlStr","isPreviousElementTag","tagObj","propName","newJPath","tagText","isStopNode","attStr","attr_to_str","tempInd","piTextNodeName","newIdentation","tagStart","tagValue","endsWith","attrMap","attrVal","jArray","entityRegex","parseEntityExp","exp","regx","hasBody","comment","removeNSPrefix","parseTagValue","parseAttributeValue","trimValues","numberParseOptions","hex","leadingZeros","alwaysCreateTextNode","htmlEntities","ignoreDeclaration","ignorePiTags","transformTagName","transformAttributeName","buildOptions","xmlNode","readDocType","toNumber","addExternalEntities","externalEntities","entKeys","ent","lastEntities","parseTextData","dontTrim","hasAttributes","isLeafNode","escapeEntities","parseValue","resolveNameSpace","prefix","charAt","attrsRegx","buildAttributesMap","attrs","oldVal","aName","newVal","attrCollection","parseXml","xmlObj","currentNode","textData","closeIndex","findClosingIndex","colonIndex","saveTextToParentTag","tagsNodeStack","tagData","readTagExp","childNode","add","tagExp","attrExpPresent","addChild","endIndex","docTypeEntities","lastTag","isItStopNode","tagContent","readStopNodeData","child","entityName","ampEntity","currentTagName","allNodesExp","stopNodePath","stopNodeExp","errMsg","closingIndex","closingChar","attrBoundary","ch","tagExpWithClosingIndex","separatorIndex","search","openTagCount","shouldParse","OrderedObjParser","prettify","parse","validationOption","orderedObjParser","orderedResult","addEntity","compress","text","compressedObj","property","newJpath","isLeaf","isLeafTag","assignAttributes","jpath","atrrName","propCount","node","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","d","s","NaN","rt","isNaN","log","LN2","global","self","window","getGlobal","fetch","bind","Headers","Request","Response","assertPath","path","normalizeStringPosix","allowAboveRoot","lastSegmentLength","lastSlash","dots","lastSlashIndex","posix","resolve","cwd","resolvedPath","resolvedAbsolute","process","normalize","isAbsolute","trailingSeparator","joined","relative","to","fromStart","fromEnd","fromLen","toStart","toLen","lastCommonSep","fromCode","_makeLong","dirname","hasRoot","matchedSlash","basename","extIdx","firstNonSlashEnd","extname","startDot","startPart","preDotState","pathObject","sep","base","_format","delimiter","win32","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","marker","runClearTimeout","Item","noop","nextTick","args","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","chdir","umask","hexRegex","numRegex","parseFloat","consider","decimalPoint","eNotation","trimmedStr","skipLike","test","sign","numTrimmedByZeros","numStr","accession","url","cors","body","response","ok","isAccession","parseFile","fileName","file","opts","sourceName","firstLine","dnaOnlyFile","isBenchling","every","k","ex","seqs","seq","complement","annotations","guessType","p","sort","color","direction","partJSON","bases","parseDirection","strand","_id","parsedBiobrick","part","rsbpml","part_list","bail","features","part_name","sequences","firstElement","feature","endpos","startpos","filter","seq_data","newlineBeforeSeq","lastChar","tagNameSet","Set","tagColorSet","fileInput","f","parsedName","h","accessionName","FEATURES_LINE","FEATURES_NEW_LINE","ORIGIN_LINE","r","forEach","currLine","l","rangeString","rangeRegex","startSearch","endSearch","tag","lastAnn","has","primers","JBEI","fileString","sequence","parsedSeq","label","location","genbankStart","sbol","parsedSBOL","RDF","Collection","DnaComponent","component","nestedDnaComponent","dnaComponentToPart","strict","validPart","dnaComponentAccumulator","findDnaComponentNodes","attemptedSeqs","dnaSequenceAccumulator","findSequenceNodes","sequenceToPart","acc","doc","nestedNode","annotation","displayId","dnaSequence","DnaSequence","nucleotides","SequenceAnnotation","bioEnd","bioStart","subComponent","annId","annName","annType","Seq","seqOrig","elements","compSeq","circular","seqList","parseSBOL2","ComponentDefinition","Sequence","getSeq","seqID","seqElement","find","persistentIdentity","sequenceAnnotation","ann","tagNameList","tagColorList","HEADER_ROW","lastAnnIndex","source","readEnc","fmt","nextByte","blockSize","ord","xml","Features","Feature","minStart","maxEnd","Segment","directionality","comp","A","B","C","D","G","H","K","M","N","R","S","T","U","V","W","X","Y","g","u","w","origSeq","origLength","reverseComplement","inputSeq","reverse","fwd","rev","aminoAcids","values","AAA","AAC","AAG","AAT","ACA","ACC","ACG","ACT","AGA","AGC","AGG","AGT","ATA","ATC","ATG","ATT","CAA","CAC","CAG","CAT","CCA","CCC","CCG","CCT","CGA","CGC","CGG","CGT","CTA","CTC","CTG","CTT","GAA","GAC","GAG","GAT","GCA","GCC","GCG","GCT","GGA","GGC","GGG","GGT","GTA","GTC","GTG","GTT","TAA","TAC","TAG","TAT","TCA","TCC","TCG","TCT","TGA","TGC","TGG","TGT","TTA","TTC","TTG","TTT","aminoAcidRegex","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__"],"sourceRoot":""}